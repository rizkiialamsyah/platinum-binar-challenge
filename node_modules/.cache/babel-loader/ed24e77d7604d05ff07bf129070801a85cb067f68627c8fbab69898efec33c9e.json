{"ast":null,"code":"import { Container } from \"./Container\";\nimport { p50, Percent } from \"../util/Percent\";\nimport { RoundedRectangle } from \"./RoundedRectangle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { color } from \"../util/Color\";\nimport * as $math from \"../util/Math\";\nexport class SpriteResizer extends Container {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"rectangle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Rectangle.new(this._root, {\n        themeTags: [\"rectangle\"],\n        fillOpacity: 0,\n        fill: color(0xFFFFFF)\n      }))\n    });\n    Object.defineProperty(this, \"gripL\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._createGrip(\"left\")\n    });\n    Object.defineProperty(this, \"gripR\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._createGrip(\"right\")\n    });\n    Object.defineProperty(this, \"gripT\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._createGrip(\"top\")\n    });\n    Object.defineProperty(this, \"gripB\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._createGrip(\"bottom\")\n    });\n    Object.defineProperty(this, \"_is\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"_ix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_iw\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_positionDP\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_isHover\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n  _afterNew() {\n    super._afterNew();\n    this.addTag(\"resizer\");\n    this.set(\"visible\", false);\n    this.gripL.events.on(\"dragged\", e => {\n      this._resize(e.target, -1);\n    });\n    this.gripR.events.on(\"dragged\", e => {\n      this._resize(e.target, 1);\n    });\n    this.gripL.events.on(\"dragstart\", e => {\n      this._resizeStart(e.target);\n    });\n    this.gripR.events.on(\"dragstart\", e => {\n      this._resizeStart(e.target);\n    });\n    this.gripT.events.on(\"dragged\", e => {\n      this._rotate(e, 90);\n    });\n    this.gripB.events.on(\"dragged\", e => {\n      this._rotate(e, -90);\n    });\n    this.gripT.events.on(\"dragstart\", e => {\n      this._resizeStart(e.target);\n    });\n    this.gripB.events.on(\"dragstart\", e => {\n      this._resizeStart(e.target);\n    });\n  }\n  _resizeStart(grip) {\n    const sprite = this.get(\"sprite\");\n    if (sprite) {\n      this._is = sprite.get(\"scale\", 1);\n      this._ix = grip.x();\n      this._iw = this.width() / 2;\n    }\n  }\n  _resize(grip, c) {\n    const sprite = this.get(\"sprite\");\n    const spriteTemplate = this.get(\"spriteTemplate\");\n    if (sprite) {\n      const scale = Math.max(0.01, this._is * (1 + c * (grip.x() - this._ix) / this._iw));\n      if (spriteTemplate) {\n        spriteTemplate.set(\"scale\", scale);\n      } else {\n        sprite.set(\"scale\", scale);\n      }\n      sprite.states.lookup(\"default\").set(\"scale\", scale);\n      this._updatePositions();\n    }\n  }\n  _rotate(e, delta) {\n    const sprite = this.get(\"sprite\");\n    const spriteTemplate = this.get(\"spriteTemplate\");\n    if (sprite) {\n      const parent = this.parent;\n      if (parent) {\n        const rotationStep = this.get(\"rotationStep\", 10);\n        let angle = Math.round(($math.getAngle({\n          x: this.x(),\n          y: this.y()\n        }, parent.toLocal(e.point)) + delta) / rotationStep) * rotationStep;\n        if (spriteTemplate) {\n          spriteTemplate.set(\"rotation\", angle);\n        } else {\n          sprite.set(\"rotation\", angle);\n        }\n        sprite.states.lookup(\"default\").set(\"rotation\", angle);\n        this._updatePositions();\n      }\n    }\n  }\n  _createGrip(themeTag) {\n    const container = this.children.push(Container.new(this._root, {\n      themeTags: [\"grip\", themeTag],\n      setStateOnChildren: true,\n      draggable: true\n    }));\n    container.children.push(RoundedRectangle.new(this._root, {\n      themeTags: [\"outline\"],\n      centerX: p50,\n      centerY: p50\n    }));\n    container.children.push(RoundedRectangle.new(this._root, {\n      centerX: p50,\n      centerY: p50\n    }));\n    return container;\n  }\n  _updateChildren() {\n    super._updateChildren();\n    if (this.isDirty(\"sprite\")) {\n      const sprite = this.get(\"sprite\");\n      if (sprite) {\n        this.show(0);\n        this.setPrivate(\"visible\", true);\n        this._updatePositions();\n        const parent = sprite.parent;\n        if (parent) {\n          parent.children.moveValue(this, 0);\n        }\n        this._positionDP = sprite.events.on(\"positionchanged\", () => {\n          this._updatePositions();\n        });\n      } else {\n        this.hide(0);\n        this.setPrivate(\"visible\", false);\n        if (this._positionDP) {\n          this._positionDP.dispose();\n        }\n      }\n    }\n    if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\")) {\n      this._updatePositions();\n    }\n  }\n  _updatePositions() {\n    const sprite = this.get(\"sprite\");\n    if (sprite) {\n      let bounds = sprite.localBounds();\n      let scale = sprite.get(\"scale\", 1);\n      let d = 20;\n      let w = (bounds.right - bounds.left) * scale + d;\n      let h = (bounds.bottom - bounds.top) * scale + d;\n      let a = sprite.get(\"rotation\", 0);\n      const rectangle = this.rectangle;\n      let cx = sprite.get(\"centerX\", p50);\n      let cy = sprite.get(\"centerY\", p50);\n      let cxr = 0;\n      if (cx instanceof Percent) {\n        cxr = cx.value;\n      }\n      let cyr = 0;\n      if (cy instanceof Percent) {\n        cyr = cy.value;\n      }\n      rectangle.setAll({\n        centerX: cx,\n        centerY: cy,\n        width: w,\n        height: h\n      });\n      this.setAll({\n        x: sprite.x() + d * (cxr - 0.5) * $math.cos(a) - d * (cyr - 0.5) * $math.sin(a),\n        y: sprite.y() + d * (cyr - 0.5) * $math.cos(a) + d * (cxr - 0.5) * $math.sin(a),\n        width: w,\n        height: h,\n        rotation: a\n      });\n      this.gripT.setAll({\n        x: (0.5 - cxr) * w,\n        y: -cyr * h\n      });\n      this.gripB.setAll({\n        x: (0.5 - cxr) * w,\n        y: (1 - cyr) * h\n      });\n      this.gripL.setAll({\n        x: -cxr * w,\n        y: (0.5 - cyr) * h\n      });\n      this.gripR.setAll({\n        x: (1 - cxr) * w,\n        y: (0.5 - cyr) * h\n      });\n      this.rectangle.setAll({\n        width: w,\n        height: h\n      });\n    }\n  }\n}\nObject.defineProperty(SpriteResizer, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"SpriteResizer\"\n});\nObject.defineProperty(SpriteResizer, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Container.classNames.concat([SpriteResizer.className])\n});","map":{"version":3,"names":["Container","p50","Percent","RoundedRectangle","Rectangle","color","$math","SpriteResizer","constructor","Object","defineProperty","children","push","new","_root","themeTags","fillOpacity","fill","_createGrip","_afterNew","addTag","set","gripL","events","on","e","_resize","target","gripR","_resizeStart","gripT","_rotate","gripB","grip","sprite","get","_is","_ix","x","_iw","width","c","spriteTemplate","scale","Math","max","states","lookup","_updatePositions","delta","parent","rotationStep","angle","round","getAngle","y","toLocal","point","themeTag","container","setStateOnChildren","draggable","centerX","centerY","_updateChildren","isDirty","show","setPrivate","moveValue","_positionDP","hide","dispose","bounds","localBounds","d","w","right","left","h","bottom","top","a","rectangle","cx","cy","cxr","value","cyr","setAll","height","cos","sin","rotation","classNames","concat","className"],"sources":["C:\\Users\\Rizki\\binar-course\\cms-binar-platinum\\node_modules\\src\\.internal\\core\\render\\SpriteResizer.ts"],"sourcesContent":["import type { Sprite, ISpritePointerEvent } from \"./Sprite\";\r\nimport type { IDisposer } from \"../util/Disposer\";\r\n\r\nimport { Container, IContainerPrivate, IContainerSettings, IContainerEvents } from \"./Container\";\r\nimport { p50, Percent } from \"../util/Percent\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { Rectangle } from \"./Rectangle\";\r\nimport { color } from \"../util/Color\";\r\nimport type { Template } from \"../util/Template\";\r\n\r\nimport * as $math from \"../util/Math\";\r\n\r\nexport interface ISpriteResizerSettings extends IContainerSettings {\r\n\r\n\t/**\r\n\t * Target [[Sprite]] element.\r\n\t */\r\n\tsprite?: Sprite\r\n\r\n\t/**\r\n\t * Target [[Template]]. If a template is set, scale and rotation will be set on Template instead of a Sprite.\r\n\t */\r\n\tspriteTemplate?: Template<Sprite>\r\n\r\n\t/**\r\n\t * Rotation increment in degrees.\r\n\t * \r\n\t * @default 10\r\n\t */\r\n\trotationStep?: number;\r\n\r\n}\r\n\r\nexport interface ISpriteResizerPrivate extends IContainerPrivate {\r\n\r\n}\r\n\r\nexport interface ISpriteResizerEvents extends IContainerEvents {\r\n\r\n}\r\n\r\nexport class SpriteResizer extends Container {\r\n\r\n\tdeclare public _settings: ISpriteResizerSettings;\r\n\tdeclare public _privateSettings: ISpriteResizerPrivate;\r\n\tdeclare public _events: ISpriteResizerEvents;\r\n\r\n\tpublic static className: string = \"SpriteResizer\";\r\n\tpublic static classNames: Array<string> = Container.classNames.concat([SpriteResizer.className]);\r\n\r\n\tpublic readonly rectangle: Rectangle = this.children.push(Rectangle.new(this._root, { themeTags: [\"rectangle\"], fillOpacity: 0, fill: color(0xFFFFFF) }));\r\n\tpublic readonly gripL: Container = this._createGrip(\"left\");\r\n\tpublic readonly gripR: Container = this._createGrip(\"right\");\r\n\tpublic readonly gripT: Container = this._createGrip(\"top\");\r\n\tpublic readonly gripB: Container = this._createGrip(\"bottom\");\r\n\r\n\tprotected _is: number = 1;\r\n\tprotected _ix: number = 0;\r\n\tprotected _iw: number = 0;\r\n\r\n\tprotected _positionDP?: IDisposer;\r\n\r\n\tprotected _isHover: boolean = false;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.addTag(\"resizer\");\r\n\t\tthis.set(\"visible\", false);\r\n\r\n\t\tthis.gripL.events.on(\"dragged\", (e) => {\r\n\t\t\tthis._resize(e.target, -1);\r\n\t\t})\r\n\r\n\t\tthis.gripR.events.on(\"dragged\", (e) => {\r\n\t\t\tthis._resize(e.target, 1);\r\n\t\t})\r\n\r\n\t\tthis.gripL.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis._resizeStart(e.target);\r\n\t\t})\r\n\r\n\t\tthis.gripR.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis._resizeStart(e.target);\r\n\t\t})\r\n\r\n\t\tthis.gripT.events.on(\"dragged\", (e) => {\r\n\t\t\tthis._rotate(e, 90);\r\n\t\t})\r\n\r\n\t\tthis.gripB.events.on(\"dragged\", (e) => {\r\n\t\t\tthis._rotate(e, -90);\r\n\t\t})\r\n\r\n\t\tthis.gripT.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis._resizeStart(e.target);\r\n\t\t})\r\n\r\n\t\tthis.gripB.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis._resizeStart(e.target);\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _resizeStart(grip: Sprite) {\r\n\t\tconst sprite = this.get(\"sprite\");\r\n\t\tif (sprite) {\r\n\t\t\tthis._is = sprite.get(\"scale\", 1);\r\n\t\t\tthis._ix = grip.x();\r\n\t\t\tthis._iw = this.width() / 2;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _resize(grip: Sprite, c: number) {\r\n\t\tconst sprite = this.get(\"sprite\");\r\n\t\tconst spriteTemplate = this.get(\"spriteTemplate\");\r\n\t\tif (sprite) {\r\n\t\t\tconst scale = Math.max(0.01, this._is * (1 + c * (grip.x() - this._ix) / this._iw));\r\n\t\t\tif (spriteTemplate) {\r\n\t\t\t\tspriteTemplate.set(\"scale\", scale);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsprite.set(\"scale\", scale);\r\n\t\t\t}\r\n\t\t\tsprite.states.lookup(\"default\")!.set(\"scale\", scale);\r\n\t\t\tthis._updatePositions();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _rotate(e: ISpritePointerEvent, delta: number) {\r\n\t\tconst sprite = this.get(\"sprite\");\r\n\t\tconst spriteTemplate = this.get(\"spriteTemplate\");\r\n\t\tif (sprite) {\r\n\t\t\tconst parent = this.parent;\r\n\t\t\tif (parent) {\r\n\r\n\t\t\t\tconst rotationStep = this.get(\"rotationStep\", 10);\r\n\t\t\t\tlet angle = Math.round((($math.getAngle({ x: this.x(), y: this.y() }, parent.toLocal(e.point)) + delta) / rotationStep)) * rotationStep;\r\n\t\t\t\tif (spriteTemplate) {\r\n\t\t\t\t\tspriteTemplate.set(\"rotation\", angle);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsprite.set(\"rotation\", angle);\r\n\t\t\t\t}\r\n\t\t\t\tsprite.states.lookup(\"default\")!.set(\"rotation\", angle);\r\n\t\t\t\tthis._updatePositions();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _createGrip(themeTag: string) {\r\n\t\tconst container = this.children.push(Container.new(this._root, {\r\n\t\t\tthemeTags: [\"grip\", themeTag],\r\n\t\t\tsetStateOnChildren: true,\r\n\t\t\tdraggable: true\r\n\t\t}))\r\n\r\n\t\tcontainer.children.push(RoundedRectangle.new(this._root, {\r\n\t\t\tthemeTags: [\"outline\"],\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50\r\n\t\t}))\r\n\r\n\t\tcontainer.children.push(RoundedRectangle.new(this._root, {\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50\r\n\t\t}));\r\n\t\treturn container;\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"sprite\")) {\r\n\t\t\tconst sprite = this.get(\"sprite\");\r\n\t\t\tif (sprite) {\r\n\t\t\t\tthis.show(0);\r\n\t\t\t\tthis.setPrivate(\"visible\", true);\r\n\r\n\t\t\t\tthis._updatePositions();\r\n\r\n\t\t\t\tconst parent = sprite.parent;\r\n\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tparent.children.moveValue(this, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._positionDP = sprite.events.on(\"positionchanged\", () => {\r\n\t\t\t\t\tthis._updatePositions();\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.hide(0);\r\n\t\t\t\tthis.setPrivate(\"visible\", false);\r\n\r\n\t\t\t\tif (this._positionDP) {\r\n\t\t\t\t\tthis._positionDP.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isDirty(\"rotation\")) {\r\n\t\t\tthis._updatePositions();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updatePositions() {\r\n\t\tconst sprite = this.get(\"sprite\");\r\n\t\tif (sprite) {\r\n\t\t\tlet bounds = sprite.localBounds();\r\n\t\t\tlet scale = sprite.get(\"scale\", 1);\r\n\t\t\tlet d = 20\r\n\t\t\tlet w = (bounds.right - bounds.left) * scale + d;\r\n\t\t\tlet h = (bounds.bottom - bounds.top) * scale + d;\r\n\t\t\tlet a = sprite.get(\"rotation\", 0);\r\n\r\n\t\t\tconst rectangle = this.rectangle;\r\n\r\n\t\t\tlet cx = sprite.get(\"centerX\", p50);\r\n\t\t\tlet cy = sprite.get(\"centerY\", p50);\r\n\r\n\t\t\tlet cxr = 0;\r\n\t\t\tif (cx instanceof Percent) {\r\n\t\t\t\tcxr = cx.value;\r\n\t\t\t}\r\n\r\n\t\t\tlet cyr = 0;\r\n\t\t\tif (cy instanceof Percent) {\r\n\t\t\t\tcyr = cy.value;\r\n\t\t\t}\r\n\r\n\t\t\trectangle.setAll({ centerX: cx, centerY: cy, width: w, height: h });\r\n\t\t\tthis.setAll({ x: sprite.x() + d * (cxr - 0.5) * $math.cos(a) - d * (cyr - 0.5) * $math.sin(a), y: sprite.y() + d * (cyr - 0.5) * $math.cos(a) + d * (cxr - 0.5) * $math.sin(a), width: w, height: h, rotation: a });\r\n\r\n\t\t\tthis.gripT.setAll({ x: (0.5 - cxr) * w, y: -cyr * h });\r\n\t\t\tthis.gripB.setAll({ x: (0.5 - cxr) * w, y: (1 - cyr) * h });\r\n\t\t\tthis.gripL.setAll({ x: -cxr * w, y: (0.5 - cyr) * h });\r\n\t\t\tthis.gripR.setAll({ x: (1 - cxr) * w, y: (0.5 - cyr) * h });\r\n\r\n\t\t\tthis.rectangle.setAll({ width: w, height: h });\r\n\t\t}\r\n\t}\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}