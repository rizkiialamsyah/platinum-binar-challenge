{"ast":null,"code":"import { Scrollbar } from \"./Scrollbar\";\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n */\nexport class Slider extends Scrollbar {\n  _afterNew() {\n    this._addOrientationClass();\n    super._afterNew();\n    this.endGrip.setPrivate(\"visible\", false);\n    this.thumb.setPrivate(\"visible\", false);\n  }\n  /**\r\n   * @ignore\r\n   */\n  updateGrips() {\n    super.updateGrips();\n    const startGrip = this.startGrip;\n    this.endGrip.setAll({\n      x: startGrip.x(),\n      y: startGrip.y()\n    });\n    this.setRaw(\"end\", this.get(\"start\"));\n  }\n}\nObject.defineProperty(Slider, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Slider\"\n});\nObject.defineProperty(Slider, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Scrollbar.classNames.concat([Slider.className])\n});","map":{"version":3,"names":["Scrollbar","Slider","_afterNew","_addOrientationClass","endGrip","setPrivate","thumb","updateGrips","startGrip","setAll","x","y","setRaw","get","Object","defineProperty","classNames","concat","className"],"sources":["C:\\Users\\Rizki\\binar-course\\cms-binar-platinum\\node_modules\\src\\.internal\\core\\render\\Slider.ts"],"sourcesContent":["import { Scrollbar, IScrollbarPrivate, IScrollbarSettings, IScrollbarEvents } from \"./Scrollbar\";\r\n\r\nexport interface ISliderSettings extends IScrollbarSettings {\r\n}\r\n\r\nexport interface ISliderPrivate extends IScrollbarPrivate {\r\n}\r\n\r\nexport interface ISliderEvents extends IScrollbarEvents {\r\n}\r\n\r\n/**\r\n * A control that allows zooming chart's axes, or other uses requiring range\r\n * selection.\r\n */\r\nexport class Slider extends Scrollbar {\r\n\r\n\tdeclare public _settings: ISliderSettings;\r\n\tdeclare public _privateSettings: ISliderPrivate;\r\n\tdeclare public _events: ISliderEvents;\r\n\r\n\tpublic static className: string = \"Slider\";\r\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([Slider.className]);\r\n\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._addOrientationClass();\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.endGrip.setPrivate(\"visible\", false);\r\n\t\tthis.thumb.setPrivate(\"visible\", false);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateGrips() {\r\n\t\tsuper.updateGrips();\r\n\t\tconst startGrip = this.startGrip;\r\n\t\tthis.endGrip.setAll({ x: startGrip.x(), y: startGrip.y() });\r\n\t\tthis.setRaw(\"end\", this.get(\"start\"));\r\n\t}\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAiE,aAAa;AAWhG;;;;AAIA,OAAM,MAAOC,MAAO,SAAQD,SAAS;EAU1BE,SAASA,CAAA;IAClB,IAAI,CAACC,oBAAoB,EAAE;IAC3B,KAAK,CAACD,SAAS,EAAE;IAEjB,IAAI,CAACE,OAAO,CAACC,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC;IACzC,IAAI,CAACC,KAAK,CAACD,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC;EACxC;EAEA;;;EAGOE,WAAWA,CAAA;IACjB,KAAK,CAACA,WAAW,EAAE;IACnB,MAAMC,SAAS,GAAG,IAAI,CAACA,SAAS;IAChC,IAAI,CAACJ,OAAO,CAACK,MAAM,CAAC;MAAEC,CAAC,EAAEF,SAAS,CAACE,CAAC,EAAE;MAAEC,CAAC,EAAEH,SAAS,CAACG,CAAC;IAAE,CAAE,CAAC;IAC3D,IAAI,CAACC,MAAM,CAAC,KAAK,EAAE,IAAI,CAACC,GAAG,CAAC,OAAO,CAAC,CAAC;EACtC;;AApBAC,MAAA,CAAAC,cAAA,CAAAd,MAAA;;;;SAAkC;;AAClCa,MAAA,CAAAC,cAAA,CAAAd,MAAA;;;;SAA0CD,SAAS,CAACgB,UAAU,CAACC,MAAM,CAAC,CAAChB,MAAM,CAACiB,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}