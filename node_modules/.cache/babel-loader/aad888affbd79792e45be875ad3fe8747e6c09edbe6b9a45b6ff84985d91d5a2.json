{"ast":null,"code":"import { Sprite } from \"./Sprite\";\nimport * as $type from \"../util/Type\";\n/**\r\n * Displays an image.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/images/} for more info\r\n * @important\r\n */\nexport class Picture extends Sprite {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_display\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this._root._renderer.makePicture(undefined)\n    });\n  }\n  _changed() {\n    super._changed();\n    if (this.isDirty(\"width\")) {\n      const width = this.get(\"width\");\n      this._display.width = $type.isNumber(width) ? width : undefined;\n    }\n    if (this.isDirty(\"height\")) {\n      const height = this.get(\"height\");\n      this._display.height = $type.isNumber(height) ? height : undefined;\n    }\n    if (this.isDirty(\"shadowColor\")) {\n      this._display.clear();\n      const shadowColor = this.get(\"shadowColor\");\n      this._display.shadowColor = shadowColor == null ? undefined : shadowColor;\n    }\n    if (this.isDirty(\"shadowBlur\")) {\n      this._display.clear();\n      this._display.shadowBlur = this.get(\"shadowBlur\");\n    }\n    if (this.isDirty(\"shadowOffsetX\")) {\n      this._display.clear();\n      this._display.shadowOffsetX = this.get(\"shadowOffsetX\");\n    }\n    if (this.isDirty(\"shadowOffsetY\")) {\n      this._display.clear();\n      this._display.shadowOffsetY = this.get(\"shadowOffsetY\");\n    }\n    if (this.isDirty(\"shadowOpacity\")) {\n      this._display.clear();\n      this._display.shadowOpacity = this.get(\"shadowOpacity\");\n    }\n    if (this.isDirty(\"src\") || this.isDirty(\"cors\")) {\n      this._display.clear();\n      this._load();\n    }\n  }\n  _load() {\n    const src = this.get(\"src\");\n    if (src) {\n      const image = new Image();\n      image.crossOrigin = this.get(\"cors\", \"anonymous\");\n      image.src = src;\n      image.decode().then(() => {\n        this._display.image = image;\n        this._updateSize();\n      }).catch(_error => {\n        // TODO: maybe raise error?\n      });\n    }\n  }\n  _updateSize() {\n    super._updateSize();\n    const image = this._display.image;\n    if (image) {\n      let w = this.getPrivate(\"width\", this.get(\"width\"));\n      let h = this.getPrivate(\"height\", this.get(\"height\"));\n      const r = image.width && image.height ? image.width / image.height : 0;\n      if ($type.isNumber(w) && $type.isNumber(h)) {\n        this._display.width = w;\n        this._display.height = h;\n      } else if ($type.isNumber(w) && r) {\n        h = w / r;\n      } else if ($type.isNumber(h) && r) {\n        w = h * r;\n      } else {\n        w = image.width;\n        h = image.height;\n      }\n      if ($type.isNumber(w)) {\n        this._display.width = w;\n      }\n      if ($type.isNumber(h)) {\n        this._display.height = h;\n      }\n      this.markDirtyBounds();\n      this.markDirty();\n    }\n  }\n}\nObject.defineProperty(Picture, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Picture\"\n});\nObject.defineProperty(Picture, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Sprite.classNames.concat([Picture.className])\n});","map":{"version":3,"names":["Sprite","$type","Picture","constructor","Object","defineProperty","_root","_renderer","makePicture","undefined","_changed","isDirty","width","get","_display","isNumber","height","clear","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","shadowOpacity","_load","src","image","Image","crossOrigin","decode","then","_updateSize","catch","_error","w","getPrivate","h","r","markDirtyBounds","markDirty","classNames","concat","className"],"sources":["C:\\Users\\Rizki\\binar-course\\cms-binar-platinum\\node_modules\\src\\.internal\\core\\render\\Picture.ts"],"sourcesContent":["import type { IPicture } from \"./backend/Renderer\";\nimport type { Color } from \"../util/Color\";\n\nimport { Sprite, ISpriteSettings, ISpritePrivate } from \"./Sprite\";\n\nimport * as $type from \"../util/Type\";\n\nexport interface IPictureSettings extends ISpriteSettings {\n\n\t/**\n\t * A source URI of the image.\n\t *\n\t * Can be relative or absolute URL, or data-uri.\n\t */\n\tsrc?: string;\n\n\t/**\n\t * CORS settings for loading the image. Defaults to \"anonymous\".\n\t *\n\t * @since 5.3.6\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/crossOrigin} for more info\n\t */\n\tcors?: string | null;\n\n\t/**\n\t * Color of the element's shadow.\n\t *\n\t * For this to work at least one of the following needs to be set as well:\n\t * `shadowBlur`, `shadowOffsetX`, `shadowOffsetY`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowColor?: Color | null;\n\n\t/**\n\t * Blurriness of the the shadow.\n\t *\n\t * The bigger the number, the more blurry shadow will be.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowBlur?: number;\n\n\t/**\n\t * Horizontal shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetX?: number;\n\n\t/**\n\t * Vertical shadow offset in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOffsetY?: number;\n\n\t/**\n\t * Opacity of the shadow (0-1).\n\t *\n\t * If not set, will use the same as `fillOpacity` of the element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/shadows/} for more info\n\t */\n\tshadowOpacity?: number;\n\n}\n\nexport interface IPicturePrivate extends ISpritePrivate {\n}\n\n/**\n * Displays an image.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/images/} for more info\n * @important\n */\nexport class Picture extends Sprite {\n\n\tdeclare public _settings: IPictureSettings;\n\tdeclare public _privateSettings: IPicturePrivate;\n\n\tpublic _display: IPicture = this._root._renderer.makePicture(undefined);\n\n\tpublic static className: string = \"Picture\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Picture.className]);\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"width\")) {\n\t\t\tconst width = this.get(\"width\");\n\t\t\tthis._display.width = $type.isNumber(width) ? width : undefined;\n\t\t}\n\n\t\tif (this.isDirty(\"height\")) {\n\t\t\tconst height = this.get(\"height\");\n\t\t\tthis._display.height = $type.isNumber(height) ? height : undefined;\n\t\t}\n\n\t\tif (this.isDirty(\"shadowColor\")) {\n\t\t\tthis._display.clear();\n\t\t\tconst shadowColor = this.get(\"shadowColor\");\n\t\t\tthis._display.shadowColor = shadowColor == null ? undefined : shadowColor;\n\t\t}\n\n\t\tif (this.isDirty(\"shadowBlur\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowBlur = this.get(\"shadowBlur\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOffsetX\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOffsetX = this.get(\"shadowOffsetX\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOffsetY\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOffsetY = this.get(\"shadowOffsetY\");\n\t\t}\n\n\t\tif (this.isDirty(\"shadowOpacity\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._display.shadowOpacity = this.get(\"shadowOpacity\");\n\t\t}\n\n\t\tif (this.isDirty(\"src\") || this.isDirty(\"cors\")) {\n\t\t\tthis._display.clear();\n\t\t\tthis._load();\n\t\t}\n\t}\n\n\tprotected _load() {\n\t\tconst src = this.get(\"src\");\n\t\tif (src) {\n\t\t\tconst image = new Image();\n\t\t\timage.crossOrigin = this.get(\"cors\", \"anonymous\");\n\t\t\timage.src = src!;\n\t\t\timage.decode().then(() => {\n\t\t\t\tthis._display.image = image;\n\t\t\t\tthis._updateSize();\n\t\t\t}).catch((_error: any) => {\n\t\t\t\t// TODO: maybe raise error?\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\t\tsuper._updateSize();\n\n\t\tconst image = this._display.image;\n\t\tif (image) {\n\t\t\tlet w = this.getPrivate(\"width\", this.get(\"width\"));\n\t\t\tlet h = this.getPrivate(\"height\", this.get(\"height\"));\n\t\t\tconst r = image.width && image.height ? image.width / image.height : 0;\n\n\t\t\tif ($type.isNumber(w) && $type.isNumber(h)) {\n\t\t\t\tthis._display.width = w;\n\t\t\t\tthis._display.height = h;\n\t\t\t}\n\t\t\telse if ($type.isNumber(w) && r) {\n\t\t\t\th = w / r;\n\t\t\t}\n\t\t\telse if ($type.isNumber(h) && r) {\n\t\t\t\tw = h * r;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tw = image.width;\n\t\t\t\th = image.height;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(w)) {\n\t\t\t\tthis._display.width = w;\n\t\t\t}\n\t\t\tif ($type.isNumber(h)) {\n\t\t\t\tthis._display.height = h;\n\t\t\t}\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.markDirty();\n\t\t}\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}