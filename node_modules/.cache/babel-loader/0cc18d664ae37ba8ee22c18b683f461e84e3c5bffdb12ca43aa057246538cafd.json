{"ast":null,"code":"import { Graphics } from \"../../../core/render/Graphics\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport * as $utils from \"../../../core/util/Utils\";\n/**\r\n * Base class for an axis renderer.\r\n *\r\n * Should not be used on its own.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n */\nexport class AxisRenderer extends Graphics {\n  constructor() {\n    super(...arguments);\n    // save for quick access\n    Object.defineProperty(this, \"_axisLength\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 100\n    });\n    Object.defineProperty(this, \"_start\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_end\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"_inversed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_minSize\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    /**\r\n     * Chart the renderer is used in.\r\n     */\n    Object.defineProperty(this, \"chart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_lc\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"_ls\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_thumbDownPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_downStart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_downEnd\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A list of ticks in the axis.\r\n     *\r\n     * `ticks.template` can be used to configure ticks.\r\n     *\r\n     * @default new ListTemplate<AxisTick>\r\n     */\n    Object.defineProperty(this, \"ticks\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), () => AxisTick._new(this._root, {\n        themeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n      }, [this.ticks.template]))\n    });\n    /**\r\n     * A list of grid elements in the axis.\r\n     *\r\n     * `grid.template` can be used to configure grid.\r\n     *\r\n     * @default new ListTemplate<Grid>\r\n     */\n    Object.defineProperty(this, \"grid\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), () => Grid._new(this._root, {\n        themeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n      }, [this.grid.template]))\n    });\n    /**\r\n     * A list of fills in the axis.\r\n     *\r\n     * `axisFills.template` can be used to configure axis fills.\r\n     *\r\n     * @default new ListTemplate<Graphics>\r\n     */\n    Object.defineProperty(this, \"axisFills\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), () => Graphics._new(this._root, {\n        themeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n      }, [this.axisFills.template]))\n    });\n    /**\r\n     * A list of labels in the axis.\r\n     *\r\n     * `labels.template` can be used to configure axis labels.\r\n     *\r\n     * @default new ListTemplate<AxisLabel>\r\n     */\n    Object.defineProperty(this, \"labels\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), () => AxisLabel._new(this._root, {\n        themeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n      }, [this.labels.template]))\n    });\n    /**\r\n     * An [[Axis]] renderer is for.\r\n     */\n    Object.defineProperty(this, \"axis\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"thumb\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  /**\r\n   * @ignore\r\n   */\n  makeTick(dataItem, themeTags) {\n    const tick = this.ticks.make();\n    tick._setDataItem(dataItem);\n    dataItem.setRaw(\"tick\", tick);\n    tick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n    this.axis.labelsContainer.children.push(tick);\n    this.ticks.push(tick);\n    return tick;\n  }\n  /**\r\n   * @ignore\r\n   */\n  makeGrid(dataItem, themeTags) {\n    const grid = this.grid.make();\n    grid._setDataItem(dataItem);\n    dataItem.setRaw(\"grid\", grid);\n    grid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n    this.axis.gridContainer.children.push(grid);\n    this.grid.push(grid);\n    return grid;\n  }\n  /**\r\n   * @ignore\r\n   */\n  makeAxisFill(dataItem, themeTags) {\n    const axisFill = this.axisFills.make();\n    axisFill._setDataItem(dataItem);\n    axisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n    this.axis.gridContainer.children.push(axisFill);\n    dataItem.setRaw(\"axisFill\", axisFill);\n    this.axisFills.push(axisFill);\n    return axisFill;\n  }\n  /**\r\n   * @ignore\r\n   */\n  makeLabel(dataItem, themeTags) {\n    const label = this.labels.make();\n    label.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n    this.axis.labelsContainer.children.moveValue(label, 0);\n    label._setDataItem(dataItem);\n    dataItem.setRaw(\"label\", label);\n    this.labels.push(label);\n    return label;\n  }\n  axisLength() {\n    return 0;\n  }\n  /**\r\n   * @ignore\r\n   */\n  gridCount() {\n    return this.axisLength() / this.get(\"minGridDistance\", 50);\n  }\n  _updatePositions() {}\n  _afterNew() {\n    super._afterNew();\n    this.set(\"isMeasured\", false);\n    const thumb = this.thumb;\n    if (thumb) {\n      this._disposers.push(thumb.events.on(\"pointerdown\", event => {\n        this._handleThumbDown(event.originalEvent);\n      }));\n      this._disposers.push(thumb.events.on(\"globalpointerup\", event => {\n        this._handleThumbUp(event.originalEvent);\n      }));\n      this._disposers.push(thumb.events.on(\"globalpointermove\", event => {\n        this._handleThumbMove(event.originalEvent);\n      }));\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this.isDirty(\"pan\")) {\n      const thumb = this.thumb;\n      if (thumb) {\n        const labelsContainer = this.axis.labelsContainer;\n        const pan = this.get(\"pan\");\n        if (pan == \"zoom\") {\n          labelsContainer.children.push(thumb);\n        } else if (pan == \"none\") {\n          labelsContainer.children.removeValue(thumb);\n        }\n      }\n    }\n  }\n  _handleThumbDown(event) {\n    this._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({\n      x: event.clientX,\n      y: event.clientY\n    }));\n    const axis = this.axis;\n    this._downStart = axis.get(\"start\");\n    this._downEnd = axis.get(\"end\");\n  }\n  _handleThumbUp(_event) {\n    this._thumbDownPoint = undefined;\n  }\n  _handleThumbMove(event) {\n    const downPoint = this._thumbDownPoint;\n    if (downPoint) {\n      const point = this.toLocal(this._root.documentPointToRoot({\n        x: event.clientX,\n        y: event.clientY\n      }));\n      const downStart = this._downStart;\n      const downEnd = this._downEnd;\n      const extra = this._getPan(point, downPoint) * Math.min(1, downEnd - downStart) / 2;\n      this.axis.setAll({\n        start: downStart - extra,\n        end: downEnd + extra\n      });\n    }\n  }\n  _getPan(_point1, _point2) {\n    return 0;\n  }\n  /**\r\n   * Converts relative position (0-1) on axis to a pixel coordinate.\r\n   *\r\n   * @param position  Position (0-1)\r\n   * @return Coordinate (px)\r\n   */\n  positionToCoordinate(position) {\n    if (this._inversed) {\n      return (this._end - position) * this._axisLength;\n    } else {\n      return (position - this._start) * this._axisLength;\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  updateTooltipBounds(_tooltip) {}\n  _updateSize() {\n    this.markDirty();\n    this._clear = true;\n  }\n  toAxisPosition(position) {\n    const start = this._start || 0;\n    const end = this._end || 1;\n    position = position * (end - start);\n    if (!this.get(\"inversed\")) {\n      position = start + position;\n    } else {\n      position = end - position;\n    }\n    return position;\n  }\n  /**\r\n   * @ignore\r\n   */\n  fixPosition(position) {\n    if (this.get(\"inversed\")) {\n      return 1 - position;\n    }\n    return position;\n  }\n  _updateLC() {}\n  toggleVisibility(sprite, position, minPosition, maxPosition) {\n    let axis = this.axis;\n    const start = axis.get(\"start\", 0);\n    const end = axis.get(\"end\", 1);\n    let updatedStart = start + (end - start) * (minPosition - 0.0001);\n    let updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n    if (position < updatedStart || position > updatedEnd) {\n      sprite.setPrivate(\"visible\", false);\n    } else {\n      sprite.setPrivate(\"visible\", true);\n    }\n  }\n  _positionTooltip(tooltip, point) {\n    const chart = this.chart;\n    if (chart) {\n      if (chart.inPlot(point)) {\n        tooltip.set(\"pointTo\", this._display.toGlobal(point));\n      } else {\n        tooltip.hide();\n      }\n    }\n  }\n  processAxis() {}\n}\nObject.defineProperty(AxisRenderer, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"AxisRenderer\"\n});\nObject.defineProperty(AxisRenderer, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Graphics.classNames.concat([AxisRenderer.className])\n});","map":{"version":3,"names":["Graphics","Template","ListTemplate","AxisTick","Grid","AxisLabel","$utils","AxisRenderer","constructor","Object","defineProperty","new","_new","_root","themeTags","mergeTags","ticks","template","get","grid","axisFills","labels","makeTick","dataItem","tick","make","_setDataItem","setRaw","set","axis","labelsContainer","children","push","makeGrid","gridContainer","makeAxisFill","axisFill","makeLabel","label","moveValue","axisLength","gridCount","_updatePositions","_afterNew","thumb","_disposers","events","on","event","_handleThumbDown","originalEvent","_handleThumbUp","_handleThumbMove","_changed","isDirty","pan","removeValue","_thumbDownPoint","toLocal","documentPointToRoot","x","clientX","y","clientY","_downStart","_downEnd","_event","undefined","downPoint","point","downStart","downEnd","extra","_getPan","Math","min","setAll","start","end","_point1","_point2","positionToCoordinate","position","_inversed","_end","_axisLength","_start","updateTooltipBounds","_tooltip","_updateSize","markDirty","_clear","toAxisPosition","fixPosition","_updateLC","toggleVisibility","sprite","minPosition","maxPosition","updatedStart","updatedEnd","setPrivate","_positionTooltip","tooltip","chart","inPlot","_display","toGlobal","hide","processAxis","classNames","concat","className"],"sources":["C:\\Users\\Rizki\\binar-course\\cms-binar-platinum\\node_modules\\src\\.internal\\charts\\xy\\axes\\AxisRenderer.ts"],"sourcesContent":["import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}