{"ast":null,"code":"import { List } from \"./List\";\n/**\r\n * A [[List]] that holds components data.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\r\n */\nexport class ListData extends List {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * An optional processor for data.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\r\n     */\n    Object.defineProperty(this, \"processor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  /**\r\n   * @ignore\r\n   */\n  incrementRef() {}\n  /**\r\n   * @ignore\r\n   */\n  decrementRef() {}\n  _onPush(newValue) {\n    if (this.processor) {\n      this.processor.processRow(newValue);\n      //console.log(newValue)\n    }\n\n    super._onPush(newValue);\n  }\n  _onInsertIndex(index, newValue) {\n    if (this.processor) {\n      this.processor.processRow(newValue);\n    }\n    super._onInsertIndex(index, newValue);\n  }\n  _onSetIndex(index, oldValue, newValue) {\n    if (this.processor) {\n      this.processor.processRow(newValue);\n    }\n    super._onSetIndex(index, oldValue, newValue);\n  }\n}\n/**\r\n * @deprecated\r\n * @todo remove\r\n */\nexport class JsonData {\n  constructor(value) {\n    Object.defineProperty(this, \"processor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_value\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._value = value;\n  }\n  incrementRef() {}\n  decrementRef() {}\n}","map":{"version":3,"names":["List","ListData","constructor","Object","defineProperty","incrementRef","decrementRef","_onPush","newValue","processor","processRow","_onInsertIndex","index","_onSetIndex","oldValue","JsonData","value","_value"],"sources":["C:\\Users\\Rizki\\binar-course\\cms-binar-platinum\\node_modules\\src\\.internal\\core\\util\\Data.ts"],"sourcesContent":["import type { ICounterRef } from \"./Counter\";\nimport { List } from \"./List\";\nimport type { DataProcessor } from \"./DataProcessor\";\n\n/**\n * Defines interface for a [[List]] with a data processor.\n */\nexport interface IDataWithProcessor {\n\n\t/**\n\t * An optional processor for data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\n\t */\n\tprocessor?: DataProcessor;\n\n}\n\n/**\n * A [[List]] that holds components data.\n * \n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/} for more info\n */\nexport class ListData<T> extends List<T> implements ICounterRef, IDataWithProcessor {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic incrementRef(): void { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic decrementRef(): void { }\n\n\t/**\n\t * An optional processor for data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\n\t */\n\tpublic processor?: DataProcessor;\n\n\tprotected _onPush(newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t\t//console.log(newValue)\n\t\t}\n\t\tsuper._onPush(newValue);\n\t}\n\n\tprotected _onInsertIndex(index: number, newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t}\n\t\tsuper._onInsertIndex(index, newValue);\n\t}\n\n\tprotected _onSetIndex(index: number, oldValue: T, newValue: T) {\n\t\tif (this.processor) {\n\t\t\tthis.processor.processRow(newValue);\n\t\t}\n\t\tsuper._onSetIndex(index, oldValue, newValue);\n\t}\n}\n\n/**\n * @deprecated\n * @todo remove\n */\nexport class JsonData<T> implements ICounterRef, IDataWithProcessor {\n\tpublic incrementRef(): void { }\n\tpublic decrementRef(): void { }\n\n\tpublic processor?: DataProcessor;\n\tprotected _value: T;\n\n\tconstructor(value: T) {\n\t\tthis._value = value;\n\t}\n\n\t// TODO: how do we go about calling processor here?\n\n}\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,QAAQ;AAiB7B;;;;;AAKA,OAAM,MAAOC,QAAY,SAAQD,IAAO;EAAxCE,YAAA;;IAYC;;;;;IAKAC,MAAA,CAAAC,cAAA;;;;;;EAuBD;EAtCC;;;EAGOC,YAAYA,CAAA,GAAW;EAE9B;;;EAGOC,YAAYA,CAAA,GAAW;EASpBC,OAAOA,CAACC,QAAW;IAC5B,IAAI,IAAI,CAACC,SAAS,EAAE;MACnB,IAAI,CAACA,SAAS,CAACC,UAAU,CAACF,QAAQ,CAAC;MACnC;;;IAED,KAAK,CAACD,OAAO,CAACC,QAAQ,CAAC;EACxB;EAEUG,cAAcA,CAACC,KAAa,EAAEJ,QAAW;IAClD,IAAI,IAAI,CAACC,SAAS,EAAE;MACnB,IAAI,CAACA,SAAS,CAACC,UAAU,CAACF,QAAQ,CAAC;;IAEpC,KAAK,CAACG,cAAc,CAACC,KAAK,EAAEJ,QAAQ,CAAC;EACtC;EAEUK,WAAWA,CAACD,KAAa,EAAEE,QAAW,EAAEN,QAAW;IAC5D,IAAI,IAAI,CAACC,SAAS,EAAE;MACnB,IAAI,CAACA,SAAS,CAACC,UAAU,CAACF,QAAQ,CAAC;;IAEpC,KAAK,CAACK,WAAW,CAACD,KAAK,EAAEE,QAAQ,EAAEN,QAAQ,CAAC;EAC7C;;AAGD;;;;AAIA,OAAM,MAAOO,QAAQ;EAOpBb,YAAYc,KAAQ;IAHpBb,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IAGC,IAAI,CAACa,MAAM,GAAGD,KAAK;EACpB;EAROX,YAAYA,CAAA,GAAW;EACvBC,YAAYA,CAAA,GAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}