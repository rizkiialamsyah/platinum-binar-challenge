{"ast":null,"code":"import { Entity } from \"../../util/Entity\";\n/**\r\n * Base class for gradients.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\nexport class Gradient extends Entity {\n  _afterNew() {\n    // Applying themes because gradient will not have parent\n    super._afterNewApplyThemes();\n  }\n  /**\r\n   * @ignore\r\n   */\n  getFill(_target) {\n    return {\n      addColorStop: (_offset, _color) => {}\n    };\n  }\n  _changed() {\n    super._changed();\n    //if (this.isDirty(\"target\") && this.get(\"target\")) {\n    //\tthis.get(\"target\")!.events.on(\"boundschanged\", () => {\n    //\t});\n    //}\n  }\n  /**\r\n   * @ignore\r\n   */\n  getBounds(target) {\n    const gradientTarget = this.get(\"target\");\n    if (gradientTarget) {\n      let bounds = gradientTarget.globalBounds();\n      const p0 = target.toLocal({\n        x: bounds.left,\n        y: bounds.top\n      });\n      const p1 = target.toLocal({\n        x: bounds.right,\n        y: bounds.top\n      });\n      const p2 = target.toLocal({\n        x: bounds.right,\n        y: bounds.bottom\n      });\n      const p3 = target.toLocal({\n        x: bounds.left,\n        y: bounds.bottom\n      });\n      return {\n        left: Math.min(p0.x, p1.x, p2.x, p3.x),\n        top: Math.min(p0.y, p1.y, p2.y, p3.y),\n        right: Math.max(p0.x, p1.x, p2.x, p3.x),\n        bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n      };\n    }\n    return target._display.getLocalBounds();\n  }\n}\nObject.defineProperty(Gradient, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Gradient\"\n});\nObject.defineProperty(Gradient, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Entity.classNames.concat([Gradient.className])\n});","map":{"version":3,"names":["Entity","Gradient","_afterNew","_afterNewApplyThemes","getFill","_target","addColorStop","_offset","_color","_changed","getBounds","target","gradientTarget","get","bounds","globalBounds","p0","toLocal","x","left","y","top","p1","right","p2","bottom","p3","Math","min","max","_display","getLocalBounds","Object","defineProperty","classNames","concat","className"],"sources":["C:\\Users\\Rizki\\binar-course\\cms-binar-platinum\\node_modules\\src\\.internal\\core\\render\\gradients\\Gradient.ts"],"sourcesContent":["import type { IBounds } from \"../../util/IBounds\"\nimport type { IGradient, IGradientStop } from \"../backend/Renderer\";\nimport type { Sprite } from \"../Sprite\";\n\nimport { Entity, IEntitySettings, IEntityPrivate } from \"../../util/Entity\"\n\n\nexport interface IGradientSettings extends IEntitySettings {\n\n\t/**\n\t * A list of color steps for the gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n\t */\n\tstops?: Array<IGradientStop>;\n\n\t/**\n\t * Gradient target.\n\t */\n\ttarget?: Sprite;\n\n}\n\nexport interface IGradientPrivate extends IEntityPrivate {\n}\n\n/**\n * Base class for gradients.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n */\nexport abstract class Gradient extends Entity {\n\n\tdeclare public _settings: IGradientSettings;\n\tdeclare public _privateSettings: IGradientPrivate;\n\n\tpublic static className: string = \"Gradient\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Gradient.className]);\n\n\tprotected _afterNew() {\n\t\t// Applying themes because gradient will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getFill(_target: Sprite): IGradient {\n\t\treturn {\n\t\t\taddColorStop: (_offset: number, _color: string) => { }\n\t\t};\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\t//if (this.isDirty(\"target\") && this.get(\"target\")) {\n\t\t//\tthis.get(\"target\")!.events.on(\"boundschanged\", () => {\n\n\t\t//\t});\n\t\t//}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getBounds(target: Sprite): IBounds {\n\t\tconst gradientTarget = this.get(\"target\");\n\t\tif (gradientTarget) {\n\t\t\tlet bounds = gradientTarget.globalBounds();\n\n\t\t\tconst p0 = target.toLocal({ x: bounds.left, y: bounds.top });\n\t\t\tconst p1 = target.toLocal({ x: bounds.right, y: bounds.top });\n\t\t\tconst p2 = target.toLocal({ x: bounds.right, y: bounds.bottom });\n\t\t\tconst p3 = target.toLocal({ x: bounds.left, y: bounds.bottom });\n\n\t\t\treturn {\n\t\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t\t}\n\t\t}\n\t\treturn target._display.getLocalBounds();\n\t}\n\n}\n"],"mappings":"AAIA,SAASA,MAAM,QAAyC,mBAAmB;AAsB3E;;;;;AAKA,OAAM,MAAgBC,QAAS,SAAQD,MAAM;EAQlCE,SAASA,CAAA;IAClB;IACA,KAAK,CAACC,oBAAoB,EAAE;EAC7B;EAEA;;;EAGOC,OAAOA,CAACC,OAAe;IAC7B,OAAO;MACNC,YAAY,EAAEA,CAACC,OAAe,EAAEC,MAAc,KAAI,CAAG;KACrD;EACF;EAEOC,QAAQA,CAAA;IACd,KAAK,CAACA,QAAQ,EAAE;IAEhB;IACA;IAEA;IACA;EACD;EAEA;;;EAGOC,SAASA,CAACC,MAAc;IAC9B,MAAMC,cAAc,GAAG,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC;IACzC,IAAID,cAAc,EAAE;MACnB,IAAIE,MAAM,GAAGF,cAAc,CAACG,YAAY,EAAE;MAE1C,MAAMC,EAAE,GAAGL,MAAM,CAACM,OAAO,CAAC;QAAEC,CAAC,EAAEJ,MAAM,CAACK,IAAI;QAAEC,CAAC,EAAEN,MAAM,CAACO;MAAG,CAAE,CAAC;MAC5D,MAAMC,EAAE,GAAGX,MAAM,CAACM,OAAO,CAAC;QAAEC,CAAC,EAAEJ,MAAM,CAACS,KAAK;QAAEH,CAAC,EAAEN,MAAM,CAACO;MAAG,CAAE,CAAC;MAC7D,MAAMG,EAAE,GAAGb,MAAM,CAACM,OAAO,CAAC;QAAEC,CAAC,EAAEJ,MAAM,CAACS,KAAK;QAAEH,CAAC,EAAEN,MAAM,CAACW;MAAM,CAAE,CAAC;MAChE,MAAMC,EAAE,GAAGf,MAAM,CAACM,OAAO,CAAC;QAAEC,CAAC,EAAEJ,MAAM,CAACK,IAAI;QAAEC,CAAC,EAAEN,MAAM,CAACW;MAAM,CAAE,CAAC;MAE/D,OAAO;QACNN,IAAI,EAAEQ,IAAI,CAACC,GAAG,CAACZ,EAAE,CAACE,CAAC,EAAEI,EAAE,CAACJ,CAAC,EAAEM,EAAE,CAACN,CAAC,EAAEQ,EAAE,CAACR,CAAC,CAAC;QACtCG,GAAG,EAAEM,IAAI,CAACC,GAAG,CAACZ,EAAE,CAACI,CAAC,EAAEE,EAAE,CAACF,CAAC,EAAEI,EAAE,CAACJ,CAAC,EAAEM,EAAE,CAACN,CAAC,CAAC;QACrCG,KAAK,EAAEI,IAAI,CAACE,GAAG,CAACb,EAAE,CAACE,CAAC,EAAEI,EAAE,CAACJ,CAAC,EAAEM,EAAE,CAACN,CAAC,EAAEQ,EAAE,CAACR,CAAC,CAAC;QACvCO,MAAM,EAAEE,IAAI,CAACE,GAAG,CAACb,EAAE,CAACI,CAAC,EAAEE,EAAE,CAACF,CAAC,EAAEI,EAAE,CAACJ,CAAC,EAAEM,EAAE,CAACN,CAAC;OACvC;;IAEF,OAAOT,MAAM,CAACmB,QAAQ,CAACC,cAAc,EAAE;EACxC;;AAhDAC,MAAA,CAAAC,cAAA,CAAAhC,QAAA;;;;SAAkC;;AAClC+B,MAAA,CAAAC,cAAA,CAAAhC,QAAA;;;;SAA0CD,MAAM,CAACkC,UAAU,CAACC,MAAM,CAAC,CAAClC,QAAQ,CAACmC,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}