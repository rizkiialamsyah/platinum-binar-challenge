{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n/**\r\n * @ignore\r\n */\nfunction min(left, right) {\n  if (left == null) {\n    return right;\n  } else if (right == null) {\n    return left;\n  } else if (right < left) {\n    return right;\n  } else {\n    return left;\n  }\n}\n/**\r\n * @ignore\r\n */\nfunction max(left, right) {\n  if (left == null) {\n    return right;\n  } else if (right == null) {\n    return left;\n  } else if (right > left) {\n    return right;\n  } else {\n    return left;\n  }\n}\n/**\r\n * A base class for all XY chart series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\r\n */\nexport class XYSeries extends Series {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_xField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_yField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_xOpenField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_yOpenField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_xLowField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_xHighField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_yLowField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_yHighField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_axesDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_stackDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_selectionProcessed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_dataSets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_mainContainerMask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    /**\r\n     * A [[Container]] that us used to put series' elements in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(this, \"mainContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Container.new(this._root, {}))\n    });\n    /**\r\n     * A list of axis ranges that affect the series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     */\n    Object.defineProperty(this, \"axisRanges\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new List()\n    });\n    Object.defineProperty(this, \"_skipped\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_couldStackTo\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"_reallyStackedTo\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_stackedSeries\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_aLocationX0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_aLocationX1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"_aLocationY0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_aLocationY1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"_showBullets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(this, \"valueXFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"valueX\", \"openValueX\", \"lowValueX\", \"highValueX\"]\n    });\n    Object.defineProperty(this, \"valueYFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"valueY\", \"openValueY\", \"lowValueY\", \"highValueY\"]\n    });\n    Object.defineProperty(this, \"_valueXFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_valueYFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // used for full min/max\n    Object.defineProperty(this, \"_valueXShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_valueYShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // used for selection (uses working)\n    Object.defineProperty(this, \"__valueXShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"__valueYShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_emptyDataItem\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new DataItem(this, undefined, {})\n    });\n    Object.defineProperty(this, \"_dataSetId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltipFieldX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltipFieldY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n  }\n  _afterNew() {\n    this.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n    this.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n    this._setRawDefault(\"vcx\", 1);\n    this._setRawDefault(\"vcy\", 1);\n    // this can't go to themes, as data might be parsed before theme\n    this._setRawDefault(\"valueXShow\", \"valueXWorking\");\n    this._setRawDefault(\"valueYShow\", \"valueYWorking\");\n    this._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n    this._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n    this._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n    this._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n    this._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n    this._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n    this._setRawDefault(\"lowValueXGrouped\", \"low\");\n    this._setRawDefault(\"lowValueYGrouped\", \"low\");\n    this._setRawDefault(\"highValueXGrouped\", \"high\");\n    this._setRawDefault(\"highValueYGrouped\", \"high\");\n    super._afterNew();\n    this._settings.xAxis.series.push(this);\n    this._settings.yAxis.series.push(this);\n    this.set(\"maskContent\", true);\n    this._disposers.push(this.axisRanges.events.onAll(change => {\n      if (change.type === \"clear\") {\n        $array.each(change.oldValues, axisRange => {\n          this._removeAxisRange(axisRange);\n        });\n      } else if (change.type === \"push\") {\n        this._processAxisRange(change.newValue);\n      } else if (change.type === \"setIndex\") {\n        this._processAxisRange(change.newValue);\n      } else if (change.type === \"insertIndex\") {\n        this._processAxisRange(change.newValue);\n      } else if (change.type === \"removeIndex\") {\n        this._removeAxisRange(change.oldValue);\n      } else if (change.type === \"moveIndex\") {\n        this._processAxisRange(change.value);\n      } else {\n        throw new Error(\"Unknown IStreamEvent type\");\n      }\n    }));\n    const xAxis = this.get(\"xAxis\");\n    const yAxis = this.get(\"yAxis\");\n    this._disposers.push(xAxis.events.on(\"positionchanged\", () => {\n      this._fixPosition();\n    }));\n    this._disposers.push(yAxis.events.on(\"positionchanged\", () => {\n      this._fixPosition();\n    }));\n    if (!this.get(\"baseAxis\")) {\n      if (yAxis.isType(\"CategoryAxis\") || yAxis.isType(\"DateAxis\")) {\n        this.set(\"baseAxis\", yAxis);\n      } else {\n        this.set(\"baseAxis\", xAxis);\n      }\n    }\n    this.states.create(\"hidden\", {\n      opacity: 1,\n      visible: false\n    });\n    this._makeFieldNames();\n  }\n  _processAxisRange(axisRange) {\n    const container = Container.new(this._root, {});\n    axisRange.container = container;\n    this.children.push(container);\n    axisRange.series = this;\n    const axisDataItem = axisRange.axisDataItem;\n    axisDataItem.setRaw(\"isRange\", true);\n    const axis = axisDataItem.component;\n    if (axis) {\n      axis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n      const bullet = axisDataItem.get(\"bullet\");\n      if (bullet) {\n        const sprite = bullet.get(\"sprite\");\n        if (sprite) {\n          sprite.setPrivate(\"visible\", false);\n        }\n      }\n      const axisFill = axisDataItem.get(\"axisFill\");\n      if (axisFill) {\n        container.set(\"mask\", axisFill);\n      }\n      axis._seriesAxisRanges.push(axisDataItem);\n    }\n  }\n  _removeAxisRange(axisRange) {\n    const axisDataItem = axisRange.axisDataItem;\n    const axis = axisDataItem.component;\n    axis.disposeDataItem(axisDataItem);\n    $array.remove(axis._seriesAxisRanges, axisDataItem);\n    const container = axisRange.container;\n    if (container) {\n      container.dispose();\n    }\n  }\n  _updateFields() {\n    super._updateFields();\n    this._valueXFields = [];\n    this._valueYFields = [];\n    this._valueXShowFields = [];\n    this._valueYShowFields = [];\n    this.__valueXShowFields = [];\n    this.__valueYShowFields = [];\n    if (this.valueXFields) {\n      $array.each(this.valueXFields, key => {\n        const field = this.get(key + \"Field\");\n        if (field) {\n          this._valueXFields.push(key);\n          let field = this.get(key + \"Show\");\n          this.__valueXShowFields.push(field);\n          if (field.indexOf(\"Working\") != -1) {\n            this._valueXShowFields.push(field.split(\"Working\")[0]);\n          } else {\n            this._valueXShowFields.push(field);\n          }\n        }\n      });\n    }\n    if (this.valueYFields) {\n      $array.each(this.valueYFields, key => {\n        const field = this.get(key + \"Field\");\n        if (field) {\n          this._valueYFields.push(key);\n          let field = this.get(key + \"Show\");\n          this.__valueYShowFields.push(field);\n          if (field.indexOf(\"Working\") != -1) {\n            this._valueYShowFields.push(field.split(\"Working\")[0]);\n          } else {\n            this._valueYShowFields.push(field);\n          }\n        }\n      });\n    }\n  }\n  _dispose() {\n    super._dispose();\n    const chart = this.chart;\n    if (chart) {\n      chart.series.removeValue(this);\n    }\n    $array.removeFirst(this.get(\"xAxis\").series, this);\n    $array.removeFirst(this.get(\"yAxis\").series, this);\n  }\n  // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n  _min(key, value) {\n    let newValue = min(this.getPrivate(key), value);\n    this.setPrivate(key, newValue);\n  }\n  // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n  _max(key, value) {\n    let newValue = max(this.getPrivate(key), value);\n    this.setPrivate(key, newValue);\n  }\n  _shouldMakeBullet(dataItem) {\n    const xAxis = this.get(\"xAxis\");\n    const yAxis = this.get(\"yAxis\");\n    const baseAxis = this.get(\"baseAxis\");\n    if (!xAxis.inited || !yAxis.inited) {\n      return false;\n    }\n    const minBulletDistance = this.get(\"minBulletDistance\", 0);\n    if (minBulletDistance > 0) {\n      let startIndex = this.startIndex();\n      let endIndex = this.endIndex();\n      let count = endIndex - startIndex;\n      if (xAxis == baseAxis) {\n        if (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n          return false;\n        }\n      } else if (yAxis == baseAxis) {\n        if (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n          return false;\n        }\n      }\n    }\n    if (dataItem.get(this._xField) != null && dataItem.get(this._yField) != null) {\n      return true;\n    }\n    return false;\n  }\n  _makeFieldNames() {\n    const xAxis = this.get(\"xAxis\");\n    const yAxis = this.get(\"yAxis\");\n    const xName = xAxis.getPrivate(\"name\");\n    const xCapName = $utils.capitalizeFirst(xName);\n    const yName = yAxis.getPrivate(\"name\");\n    const yCapName = $utils.capitalizeFirst(yName);\n    const xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\");\n    const yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\");\n    const open = \"open\";\n    const low = \"low\";\n    const high = \"high\";\n    const show = \"Show\";\n    if (xAxis.className === \"ValueAxis\") {\n      this._xField = this.get(xName + xLetter + show);\n      this._xOpenField = this.get(open + xCapName + xLetter + show);\n      this._xLowField = this.get(low + xCapName + xLetter + show);\n      this._xHighField = this.get(high + xCapName + xLetter + show);\n    } else {\n      this._xField = xName + xLetter;\n      this._xOpenField = open + xCapName + xLetter;\n      this._xLowField = low + xCapName + xLetter;\n      this._xHighField = high + xCapName + xLetter;\n    }\n    if (yAxis.className === \"ValueAxis\") {\n      this._yField = this.get(yName + yLetter + show);\n      this._yOpenField = this.get(open + yCapName + yLetter + show);\n      this._yLowField = this.get(low + yCapName + yLetter + show);\n      this._yHighField = this.get(high + yCapName + yLetter + show);\n    } else {\n      this._yField = yName + yLetter;\n      this._yOpenField = open + yCapName + yLetter;\n      this._yLowField = low + yCapName + yLetter;\n      this._yHighField = high + yCapName + yLetter;\n    }\n  }\n  _fixVC() {\n    const xAxis = this.get(\"xAxis\");\n    const yAxis = this.get(\"yAxis\");\n    const baseAxis = this.get(\"baseAxis\");\n    const hiddenState = this.states.lookup(\"hidden\");\n    const sequencedInterpolation = this.get(\"sequencedInterpolation\");\n    if (hiddenState) {\n      let value = 0;\n      if (sequencedInterpolation) {\n        value = 0.999999999999; // makes animate, good for stacked\n      }\n\n      if (xAxis === baseAxis) {\n        hiddenState.set(\"vcy\", value);\n      } else if (yAxis === baseAxis) {\n        hiddenState.set(\"vcx\", value);\n      } else {\n        hiddenState.set(\"vcy\", value);\n        hiddenState.set(\"vcx\", value);\n      }\n    }\n  }\n  _handleMaskBullets() {\n    if (this.isDirty(\"maskBullets\")) {\n      this.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n    }\n  }\n  _fixPosition() {\n    const xAxis = this.get(\"xAxis\");\n    const yAxis = this.get(\"yAxis\");\n    this.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent.get(\"paddingLeft\", 0));\n    this.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent.get(\"paddingTop\", 0));\n    this.bulletsContainer.set(\"y\", this.y());\n    this.bulletsContainer.set(\"x\", this.x());\n  }\n  _prepareChildren() {\n    super._prepareChildren();\n    if (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\" || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\"))) {\n      this._updateFields();\n      this._makeFieldNames();\n      this._valuesDirty = true;\n    }\n    this.set(\"width\", this.get(\"xAxis\").width());\n    this.set(\"height\", this.get(\"yAxis\").height());\n    this._handleMaskBullets();\n    const xAxis = this.get(\"xAxis\");\n    const yAxis = this.get(\"yAxis\");\n    const baseAxis = this.get(\"baseAxis\");\n    const tooltipPositionX = this.get(\"tooltipPositionX\");\n    let tooltipFieldX;\n    switch (tooltipPositionX) {\n      case \"open\":\n        tooltipFieldX = this._xOpenField;\n        break;\n      case \"low\":\n        tooltipFieldX = this._xLowField;\n        break;\n      case \"high\":\n        tooltipFieldX = this._xHighField;\n        break;\n      default:\n        tooltipFieldX = this._xField;\n    }\n    this._tooltipFieldX = tooltipFieldX;\n    const tooltipPositionY = this.get(\"tooltipPositionY\");\n    let tooltipFieldY;\n    switch (tooltipPositionY) {\n      case \"open\":\n        tooltipFieldY = this._yOpenField;\n        break;\n      case \"low\":\n        tooltipFieldY = this._yLowField;\n        break;\n      case \"high\":\n        tooltipFieldY = this._yHighField;\n        break;\n      default:\n        tooltipFieldY = this._yField;\n    }\n    this._tooltipFieldY = tooltipFieldY;\n    if (this.isDirty(\"baseAxis\")) {\n      this._fixVC();\n    }\n    this._fixPosition();\n    const stacked = this.get(\"stacked\");\n    if (this.isDirty(\"stacked\")) {\n      if (stacked) {\n        if (this._valuesDirty && !this._dataProcessed) {} else {\n          this._stack();\n        }\n      } else {\n        this._unstack();\n      }\n    }\n    if (this._valuesDirty && !this._dataProcessed) {\n      this._dataProcessed = true;\n      if (stacked) {\n        this._stack();\n      }\n      $array.each(this.dataItems, dataItem => {\n        $array.each(this._valueXShowFields, key => {\n          let value = dataItem.get(key);\n          if (value != null) {\n            if (stacked) {\n              value += this.getStackedXValue(dataItem, key);\n            }\n            this._min(\"minX\", value);\n            this._max(\"maxX\", value);\n          }\n        });\n        $array.each(this._valueYShowFields, key => {\n          let value = dataItem.get(key);\n          if (value != null) {\n            if (stacked) {\n              value += this.getStackedYValue(dataItem, key);\n            }\n            this._min(\"minY\", value);\n            this._max(\"maxY\", value);\n          }\n        });\n        xAxis.processSeriesDataItem(dataItem, this._valueXFields);\n        yAxis.processSeriesDataItem(dataItem, this._valueYFields);\n      });\n      xAxis._seriesValuesDirty = true;\n      yAxis._seriesValuesDirty = true;\n      if (!this.get(\"ignoreMinMax\")) {\n        if (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n          xAxis.markDirtyExtremes();\n        }\n        if (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n          yAxis.markDirtyExtremes();\n        }\n      }\n      this._markStakedDirtyStack();\n      //this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n      if (!this.get(\"tooltipDataItem\")) {\n        this.updateLegendValue(undefined);\n      }\n    }\n    if (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n      this._markStakedDirtyStack();\n    }\n    if (!this._dataGrouped) {\n      xAxis._groupSeriesData(this);\n      yAxis._groupSeriesData(this);\n      this._dataGrouped = true;\n    }\n    if (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n      let startIndex = this.startIndex();\n      let endIndex = this.endIndex();\n      let minBulletDistance = this.get(\"minBulletDistance\", 0);\n      if (minBulletDistance > 0 && baseAxis) {\n        if (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n          this._showBullets = true;\n        } else {\n          this._showBullets = false;\n        }\n      }\n      if ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n        this._selectionProcessed = true;\n        const vcx = this.get(\"vcx\", 1);\n        const vcy = this.get(\"vcy\", 1);\n        const stacked = this.get(\"stacked\", false);\n        const outOfSelection = this.getPrivate(\"outOfSelection\");\n        if (baseAxis === xAxis) {\n          yAxis._calculateTotals();\n          this.setPrivateRaw(\"selectionMinY\", undefined);\n          this.setPrivateRaw(\"selectionMaxY\", undefined);\n          if (!outOfSelection) {\n            for (let i = startIndex; i < endIndex; i++) {\n              this.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n            }\n          } else {\n            yAxis.markDirtySelectionExtremes();\n          }\n        } else if (baseAxis === yAxis) {\n          xAxis._calculateTotals();\n          this.setPrivateRaw(\"selectionMinX\", undefined);\n          this.setPrivateRaw(\"selectionMaxX\", undefined);\n          if (!outOfSelection) {\n            for (let i = startIndex; i < endIndex; i++) {\n              this.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n            }\n          } else {\n            yAxis.markDirtySelectionExtremes();\n          }\n        }\n        if (baseAxis === xAxis) {\n          if (this.get(\"valueYShow\") !== \"valueYWorking\") {\n            const selectionMinY = this.getPrivate(\"selectionMinY\");\n            if (selectionMinY != null) {\n              this.setPrivateRaw(\"minY\", selectionMinY);\n              yAxis.markDirtyExtremes();\n            }\n            const selectionMaxY = this.getPrivate(\"selectionMaxY\");\n            if (selectionMaxY != null) {\n              this.setPrivateRaw(\"maxY\", selectionMaxY);\n              yAxis.markDirtyExtremes();\n            }\n          }\n        } else if (baseAxis === yAxis) {\n          if (this.get(\"valueXShow\") !== \"valueXWorking\") {\n            const selectionMinX = this.getPrivate(\"selectionMinX\");\n            if (selectionMinX != null) {\n              this.setPrivateRaw(\"minX\", selectionMinX);\n              yAxis.markDirtyExtremes();\n            }\n            const selectionMaxX = this.getPrivate(\"selectionMaxX\");\n            if (selectionMaxX != null) {\n              this.setPrivateRaw(\"maxX\", selectionMaxX);\n              xAxis.markDirtyExtremes();\n            }\n          }\n        }\n        if (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n          xAxis.markDirtySelectionExtremes();\n        }\n        if (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n          yAxis.markDirtySelectionExtremes();\n        }\n        // this.updateLegendValue(undefined); flickers while panning\n      }\n    }\n  }\n\n  _makeRangeMask() {\n    if (this.axisRanges.length > 0) {\n      let mainContainerMask = this._mainContainerMask;\n      if (mainContainerMask == null) {\n        mainContainerMask = this.children.push(Graphics.new(this._root, {}));\n        this._mainContainerMask = mainContainerMask;\n        mainContainerMask.set(\"draw\", (display, target) => {\n          const parent = this.parent;\n          if (parent) {\n            const w = this._root.container.width();\n            const h = this._root.container.height();\n            display.moveTo(-w, -h);\n            display.lineTo(-w, h * 2);\n            display.lineTo(w * 2, h * 2);\n            display.lineTo(w * 2, -h);\n            display.lineTo(-w, -h);\n            this.axisRanges.each(axisRange => {\n              const fill = axisRange.axisDataItem.get(\"axisFill\");\n              if (parent) {\n                if (fill) {\n                  let draw = fill.get(\"draw\");\n                  if (draw) {\n                    draw(display, target);\n                  }\n                }\n              }\n            });\n          }\n          this.mainContainer._display.mask = mainContainerMask._display;\n        });\n      }\n      mainContainerMask.markDirty();\n      mainContainerMask._markDirtyKey(\"fill\");\n    } else {\n      this.mainContainer._display.mask = null;\n    }\n  }\n  _updateChildren() {\n    super._updateChildren();\n    // save for performance\n    this._x = this.x();\n    this._y = this.y();\n    this._makeRangeMask();\n  }\n  _stack() {\n    const chart = this.chart;\n    if (chart) {\n      const seriesIndex = chart.series.indexOf(this);\n      this._couldStackTo = [];\n      if (seriesIndex > 0) {\n        let series;\n        for (let i = seriesIndex - 1; i >= 0; i--) {\n          series = chart.series.getIndex(i);\n          if (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n            this._couldStackTo.push(series);\n            if (!series.get(\"stacked\")) {\n              break;\n            }\n          }\n        }\n      }\n      this._stackDataItems();\n    }\n  }\n  _unstack() {\n    $object.each(this._reallyStackedTo, (_key, value) => {\n      delete value._stackedSeries[this.uid];\n    });\n    this._reallyStackedTo = {};\n    $array.each(this.dataItems, dataItem => {\n      dataItem.setRaw(\"stackToItemY\", undefined);\n      dataItem.setRaw(\"stackToItemX\", undefined);\n    });\n  }\n  _stackDataItems() {\n    // this works only with the same number of data @todo: search by date/category?\n    const baseAxis = this.get(\"baseAxis\");\n    const xAxis = this.get(\"xAxis\");\n    const yAxis = this.get(\"yAxis\");\n    let field;\n    let stackToItemKey;\n    if (baseAxis === xAxis) {\n      field = \"valueY\";\n      stackToItemKey = \"stackToItemY\";\n    } else if (baseAxis === yAxis) {\n      field = \"valueX\";\n      stackToItemKey = \"stackToItemX\";\n    }\n    let len = this._couldStackTo.length;\n    let index = 0;\n    const stackToNegative = this.get(\"stackToNegative\");\n    this._reallyStackedTo = {};\n    $array.each(this.dataItems, dataItem => {\n      for (let s = 0; s < len; s++) {\n        let stackToSeries = this._couldStackTo[s];\n        let stackToItem = stackToSeries.dataItems[index];\n        let value = dataItem.get(field);\n        if (stackToItem) {\n          let stackValue = stackToItem.get(field);\n          if (stackToNegative) {\n            if ($type.isNumber(value)) {\n              if ($type.isNumber(stackValue)) {\n                if (value >= 0 && stackValue >= 0) {\n                  dataItem.setRaw(stackToItemKey, stackToItem);\n                  this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n                  stackToSeries._stackedSeries[this.uid] = this;\n                  break;\n                }\n                if (value < 0 && stackValue < 0) {\n                  dataItem.setRaw(stackToItemKey, stackToItem);\n                  this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n                  stackToSeries._stackedSeries[this.uid] = this;\n                  break;\n                }\n              }\n            } else {\n              break;\n            }\n          } else {\n            if ($type.isNumber(value) && $type.isNumber(stackValue)) {\n              dataItem.setRaw(stackToItemKey, stackToItem);\n              this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n              stackToSeries._stackedSeries[this.uid] = this;\n              break;\n            }\n          }\n        }\n      }\n      index++;\n    });\n  }\n  processXSelectionDataItem(dataItem, vcx, stacked) {\n    $array.each(this.__valueXShowFields, key => {\n      let value = dataItem.get(key);\n      if (value != null) {\n        if (stacked) {\n          value += this.getStackedXValueWorking(dataItem, key);\n        }\n        this._min(\"selectionMinX\", value);\n        this._max(\"selectionMaxX\", value * vcx);\n      }\n    });\n  }\n  processYSelectionDataItem(dataItem, vcy, stacked) {\n    $array.each(this.__valueYShowFields, key => {\n      let value = dataItem.get(key);\n      if (value != null) {\n        if (stacked) {\n          value += this.getStackedYValueWorking(dataItem, key);\n        }\n        this._min(\"selectionMinY\", value);\n        this._max(\"selectionMaxY\", value * vcy);\n      }\n    });\n  }\n  /**\r\n   * @ignore\r\n   */\n  getStackedYValueWorking(dataItem, key) {\n    const stackToItem = dataItem.get(\"stackToItemY\");\n    if (stackToItem) {\n      const stackedToSeries = stackToItem.component;\n      return stackToItem.get(key, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n    }\n    return 0;\n  }\n  /**\r\n   * @ignore\r\n   */\n  getStackedXValueWorking(dataItem, key) {\n    const stackToItem = dataItem.get(\"stackToItemX\");\n    if (stackToItem) {\n      const stackedToSeries = stackToItem.component;\n      return stackToItem.get(key, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n    }\n    return 0;\n  }\n  /**\r\n   * @ignore\r\n   */\n  getStackedYValue(dataItem, key) {\n    const stackToItem = dataItem.get(\"stackToItemY\");\n    if (stackToItem) {\n      return stackToItem.get(key, 0) + this.getStackedYValue(stackToItem, key);\n    }\n    return 0;\n  }\n  /**\r\n   * @ignore\r\n   */\n  getStackedXValue(dataItem, key) {\n    const stackToItem = dataItem.get(\"stackToItemX\");\n    if (stackToItem) {\n      return stackToItem.get(key, 0) + this.getStackedXValue(stackToItem, key);\n    }\n    return 0;\n  }\n  /**\r\n   * @ignore\r\n   */\n  createLegendMarker(_dataItem) {\n    this.updateLegendMarker();\n  }\n  _markDirtyAxes() {\n    this._axesDirty = true;\n    this.markDirty();\n  }\n  _markDataSetDirty() {\n    this._afterDataChange();\n    this._valuesDirty = true;\n    this._dataProcessed = false;\n    this._aggregatesCalculated = false;\n    this.markDirty();\n  }\n  _clearDirty() {\n    super._clearDirty();\n    this._axesDirty = false;\n    this._selectionProcessed = false;\n    this._stackDirty = false;\n    this._dataProcessed = false;\n  }\n  _positionBullet(bullet) {\n    let sprite = bullet.get(\"sprite\");\n    if (sprite) {\n      let dataItem = sprite.dataItem;\n      let locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n      let locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n      let xAxis = this.get(\"xAxis\");\n      let yAxis = this.get(\"yAxis\");\n      const positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n      const positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1));\n      let point = this.getPoint(positionX, positionY);\n      let left = dataItem.get(\"left\", point.x);\n      let right = dataItem.get(\"right\", point.x);\n      let top = dataItem.get(\"top\", point.y);\n      let bottom = dataItem.get(\"bottom\", point.y);\n      if (this._shouldShowBullet(positionX, positionY)) {\n        if (!bullet.getPrivate(\"hidden\")) {\n          sprite.setPrivate(\"visible\", true);\n        } else {\n          sprite.setPrivate(\"visible\", false);\n        }\n        let w = right - left;\n        let h = bottom - top;\n        if (sprite.isType(\"Label\")) {\n          sprite.setPrivate(\"maxWidth\", Math.abs(w));\n          sprite.setPrivate(\"maxHeight\", Math.abs(h));\n        }\n        let x = left + w * locationX;\n        let y = bottom - h * locationY;\n        sprite.set(\"x\", x);\n        sprite.set(\"y\", y);\n      } else {\n        sprite.setPrivate(\"visible\", false);\n      }\n    }\n  }\n  _shouldShowBullet(_positionX, _positionY) {\n    return this._showBullets;\n  }\n  /**\r\n   * @ignore\r\n   */\n  setDataSet(id) {\n    if (this._dataSets[id]) {\n      this._handleDataSetChange();\n      this._dataItems = this._dataSets[id];\n      this._markDataSetDirty();\n      this._dataSetId = id;\n      const type = \"datasetchanged\";\n      if (this.events.isEnabled(type)) {\n        this.events.dispatch(type, {\n          type: type,\n          target: this,\n          id: id\n        });\n      }\n    }\n  }\n  _handleDataSetChange() {\n    if (this.bullets.length > 0) {\n      $array.each(this._dataItems, dataItem => {\n        let bullets = dataItem.bullets;\n        if (bullets) {\n          $array.each(bullets, bullet => {\n            if (bullet) {\n              let sprite = bullet.get(\"sprite\");\n              if (sprite) {\n                sprite.setPrivate(\"visible\", false);\n              }\n            }\n          });\n        }\n      });\n    }\n    this._selectionProcessed = false; // for totals to be calculated\n  }\n  /**\r\n   * Shows hidden series.\r\n   *\r\n   * @param   duration  Duration of animation in milliseconds\r\n   * @return            Animation promise\r\n   */\n  show(duration) {\n    const _super = Object.create(null, {\n      show: {\n        get: () => super.show\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      this._fixVC();\n      let promises = [];\n      promises.push(_super.show.call(this, duration).then(() => {\n        this._isShowing = false;\n        let xAxis = this.get(\"xAxis\");\n        let yAxis = this.get(\"yAxis\");\n        let baseAxis = this.get(\"baseAxis\");\n        if (yAxis !== baseAxis) {\n          yAxis.markDirtySelectionExtremes();\n        }\n        if (xAxis !== baseAxis) {\n          xAxis.markDirtySelectionExtremes();\n        }\n      }));\n      promises.push(this.bulletsContainer.show(duration));\n      promises.push(this._sequencedShowHide(true, duration));\n      yield Promise.all(promises);\n    });\n  }\n  /**\r\n   * Hides series.\r\n   *\r\n   * @param   duration  Duration of animation in milliseconds\r\n   * @return            Animation promise\r\n   */\n  hide(duration) {\n    const _super = Object.create(null, {\n      hide: {\n        get: () => super.hide\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      this._fixVC();\n      let promises = [];\n      promises.push(_super.hide.call(this, duration).then(() => {\n        this._isHiding = false;\n      }));\n      promises.push(this.bulletsContainer.hide(duration));\n      promises.push(this._sequencedShowHide(false, duration));\n      yield Promise.all(promises);\n    });\n  }\n  /**\r\n   * Shows series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n  showDataItem(dataItem, duration) {\n    const _super = Object.create(null, {\n      showDataItem: {\n        get: () => super.showDataItem\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      const promises = [_super.showDataItem.call(this, dataItem, duration)];\n      if (!$type.isNumber(duration)) {\n        duration = this.get(\"stateAnimationDuration\", 0);\n      }\n      const easing = this.get(\"stateAnimationEasing\");\n      $array.each(this._valueFields, key => {\n        promises.push(dataItem.animate({\n          key: key + \"Working\",\n          to: dataItem.get(key),\n          duration: duration,\n          easing: easing\n        }).waitForStop());\n      });\n      yield Promise.all(promises);\n    });\n  }\n  /**\r\n   * Hides series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n  hideDataItem(dataItem, duration) {\n    const _super = Object.create(null, {\n      hideDataItem: {\n        get: () => super.hideDataItem\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      const promises = [_super.hideDataItem.call(this, dataItem, duration)];\n      const hiddenState = this.states.create(\"hidden\", {});\n      if (!$type.isNumber(duration)) {\n        duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n      }\n      const easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n      const xAxis = this.get(\"xAxis\");\n      const yAxis = this.get(\"yAxis\");\n      const baseAxis = this.get(\"baseAxis\");\n      const stacked = this.get(\"stacked\");\n      if (baseAxis === xAxis || !baseAxis) {\n        $array.each(this._valueYFields, key => {\n          let min = yAxis.getPrivate(\"min\");\n          let baseValue = yAxis.baseValue();\n          if ($type.isNumber(min) && min > baseValue) {\n            baseValue = min;\n          }\n          if (stacked) {\n            baseValue = 0;\n          }\n          let value = dataItem.get(key);\n          if (value != null) {\n            promises.push(dataItem.animate({\n              key: key + \"Working\",\n              to: baseValue,\n              duration: duration,\n              easing: easing\n            }).waitForStop());\n          }\n        });\n      }\n      if (baseAxis === yAxis || !baseAxis) {\n        let min = xAxis.getPrivate(\"min\");\n        let baseValue = xAxis.baseValue();\n        if ($type.isNumber(min) && min > baseValue) {\n          baseValue = min;\n        }\n        if (stacked) {\n          baseValue = 0;\n        }\n        $array.each(this._valueXFields, key => {\n          let value = dataItem.get(key);\n          if (value != null) {\n            promises.push(dataItem.animate({\n              key: key + \"Working\",\n              to: baseValue,\n              duration: duration,\n              easing: easing\n            }).waitForStop());\n          }\n        });\n      }\n      yield Promise.all(promises);\n    });\n  }\n  _markDirtyStack() {\n    this._stackDirty = true;\n    this.markDirty();\n    this._markStakedDirtyStack();\n  }\n  _markStakedDirtyStack() {\n    const stackedSeries = this._stackedSeries;\n    if (stackedSeries) {\n      $object.each(stackedSeries, (_key, value) => {\n        if (!value._stackDirty) {\n          value._markDirtyStack();\n        }\n      });\n    }\n  }\n  _afterChanged() {\n    super._afterChanged();\n    if (this._skipped) {\n      this._markDirtyAxes();\n      this._skipped = false;\n    }\n  }\n  /**\r\n   * Shows a tooltip for specific data item.\r\n   *\r\n   * @param  dataItem  Data item\r\n   */\n  showDataItemTooltip(dataItem) {\n    this.updateLegendMarker(dataItem);\n    this.updateLegendValue(dataItem);\n    const tooltip = this.get(\"tooltip\");\n    if (tooltip) {\n      if (!this.isHidden()) {\n        tooltip._setDataItem(dataItem);\n        if (dataItem) {\n          let locationX = this.get(\"locationX\", 0);\n          let locationY = this.get(\"locationY\", 1);\n          let itemLocationX = dataItem.get(\"locationX\", locationX);\n          let itemLocationY = dataItem.get(\"locationY\", locationY);\n          const xAxis = this.get(\"xAxis\");\n          const yAxis = this.get(\"yAxis\");\n          const vcx = this.get(\"vcx\", 1);\n          const vcy = this.get(\"vcy\", 1);\n          const xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n          const yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n          const point = this.getPoint(xPos, yPos);\n          let show = true;\n          $array.each(this._valueFields, field => {\n            if (dataItem.get(field) == null) {\n              show = false;\n            }\n          });\n          if (show) {\n            const chart = this.chart;\n            if (chart && chart.inPlot(point)) {\n              tooltip.label.text.markDirtyText();\n              tooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n              tooltip.set(\"pointTo\", this._display.toGlobal({\n                x: point.x,\n                y: point.y\n              }));\n            } else {\n              tooltip._setDataItem(undefined);\n            }\n          } else {\n            tooltip._setDataItem(undefined);\n          }\n        }\n      } else {\n        this.hideTooltip();\n      }\n    }\n  }\n  hideTooltip() {\n    const tooltip = this.get(\"tooltip\");\n    if (tooltip) {\n      tooltip.set(\"tooltipTarget\", this);\n    }\n    return super.hideTooltip();\n  }\n  _getTooltipTarget(dataItem) {\n    if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n      const bullets = dataItem.bullets;\n      if (bullets && bullets.length > 0) {\n        const bullet = bullets[0];\n        const sprite = bullet.get(\"sprite\");\n        if (sprite) {\n          return sprite;\n        }\n      }\n    }\n    return this;\n  }\n  /**\r\n   * @ignore\r\n   */\n  updateLegendValue(dataItem) {\n    const legendDataItem = this.get(\"legendDataItem\");\n    if (legendDataItem) {\n      const label = legendDataItem.get(\"label\");\n      if (label) {\n        let txt = \"\";\n        if (dataItem) {\n          label._setDataItem(dataItem);\n          txt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n        } else {\n          label._setDataItem(this._emptyDataItem);\n          txt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n        }\n        label.set(\"text\", txt);\n      }\n      const valueLabel = legendDataItem.get(\"valueLabel\");\n      if (valueLabel) {\n        let txt = \"\";\n        if (dataItem) {\n          valueLabel._setDataItem(dataItem);\n          txt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n        } else {\n          valueLabel._setDataItem(this._emptyDataItem);\n          txt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n        }\n        valueLabel.set(\"text\", txt);\n      }\n    }\n  }\n  _getItemReaderLabel() {\n    let text = \"X: {\" + this._xField;\n    if (this.get(\"xAxis\").isType(\"DateAxis\")) {\n      text += \".formatDate()\";\n    }\n    text += \"}; Y: {\" + this._yField;\n    if (this.get(\"yAxis\").isType(\"DateAxis\")) {\n      text += \".formatDate()\";\n    }\n    text += \"}\";\n    return text;\n  }\n  /**\r\n   * @ignore\r\n   */\n  getPoint(positionX, positionY) {\n    let x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n    let y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n    // if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n    let max = 999999999;\n    if (y < -max) {\n      y = -max;\n    }\n    if (y > max) {\n      y = max;\n    }\n    if (x < -max) {\n      x = -max;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n  _shouldInclude(_position) {\n    return true;\n  }\n  /**\r\n   * @ignore\r\n   */\n  handleCursorHide() {\n    this.hideTooltip();\n    this.updateLegendValue(undefined);\n    this.updateLegendMarker(undefined);\n  }\n  _afterDataChange() {\n    super._afterDataChange();\n    this.get(\"xAxis\")._markDirtyKey(\"start\");\n    this.get(\"yAxis\")._markDirtyKey(\"start\");\n    this.resetExtremes();\n  }\n  // todo description\n  resetExtremes() {\n    this.setPrivate(\"selectionMinX\", undefined);\n    this.setPrivate(\"selectionMaxX\", undefined);\n    this.setPrivate(\"selectionMinY\", undefined);\n    this.setPrivate(\"selectionMaxY\", undefined);\n    this.setPrivate(\"minX\", undefined);\n    this.setPrivate(\"minY\", undefined);\n    this.setPrivate(\"maxX\", undefined);\n    this.setPrivate(\"maxY\", undefined);\n  }\n  /**\r\n   * Creates and returns an axis range object.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n   * @param   axisDataItem  Axis data item\r\n   * @return                Axis range\r\n   */\n  createAxisRange(axisDataItem) {\n    return this.axisRanges.push({\n      axisDataItem: axisDataItem\n    });\n  }\n  /**\r\n   * A list of series's main (ungrouped) data items.\r\n   *\r\n   * @return  Data items\r\n   */\n  get mainDataItems() {\n    return this._mainDataItems;\n  }\n}\nObject.defineProperty(XYSeries, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"XYSeries\"\n});\nObject.defineProperty(XYSeries, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Series.classNames.concat([XYSeries.className])\n});","map":{"version":3,"names":["DataItem","Series","List","Container","Graphics","$type","$object","$array","$utils","min","left","right","max","XYSeries","constructor","Object","defineProperty","children","push","new","_root","undefined","_afterNew","fields","valueFields","_setRawDefault","_settings","xAxis","series","yAxis","set","_disposers","axisRanges","events","onAll","change","type","each","oldValues","axisRange","_removeAxisRange","_processAxisRange","newValue","oldValue","value","Error","get","on","_fixPosition","isType","states","create","opacity","visible","_makeFieldNames","container","axisDataItem","setRaw","axis","component","bullet","sprite","setPrivate","axisFill","_seriesAxisRanges","disposeDataItem","remove","dispose","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","key","field","indexOf","split","valueYFields","_dispose","chart","removeValue","removeFirst","_min","getPrivate","_max","_shouldMakeBullet","dataItem","baseAxis","inited","minBulletDistance","startIndex","endIndex","count","axisLength","_xField","_yField","xName","xCapName","capitalizeFirst","yName","yCapName","xLetter","yLetter","open","low","high","show","className","_xOpenField","_xLowField","_xHighField","_yOpenField","_yLowField","_yHighField","_fixVC","hiddenState","lookup","sequencedInterpolation","_handleMaskBullets","isDirty","bulletsContainer","x","relativeToValue","width","parent","y","height","_prepareChildren","_valuesDirty","tooltipPositionX","tooltipFieldX","_tooltipFieldX","tooltipPositionY","tooltipFieldY","_tooltipFieldY","stacked","_dataProcessed","_stack","_unstack","dataItems","getStackedXValue","getStackedYValue","processSeriesDataItem","_seriesValuesDirty","isPrivateDirty","markDirtyExtremes","_markStakedDirtyStack","updateLegendValue","_dataGrouped","_groupSeriesData","_stackDirty","_showBullets","_psi","_pei","_selectionProcessed","vcx","vcy","outOfSelection","_calculateTotals","setPrivateRaw","i","processYSelectionDataItem","markDirtySelectionExtremes","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","length","mainContainerMask","_mainContainerMask","display","target","w","h","moveTo","lineTo","fill","draw","mainContainer","_display","mask","markDirty","_markDirtyKey","_updateChildren","_x","_y","seriesIndex","_couldStackTo","getIndex","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","len","index","stackToNegative","s","stackToSeries","stackToItem","stackValue","isNumber","getStackedXValueWorking","getStackedYValueWorking","stackedToSeries","createLegendMarker","_dataItem","updateLegendMarker","_markDirtyAxes","_axesDirty","_markDataSetDirty","_afterDataChange","_aggregatesCalculated","_clearDirty","_positionBullet","locationX","locationY","positionX","getDataItemPositionX","positionY","getDataItemPositionY","point","getPoint","top","bottom","_shouldShowBullet","Math","abs","_positionX","_positionY","setDataSet","id","_dataSets","_handleDataSetChange","_dataItems","_dataSetId","isEnabled","dispatch","bullets","duration","promises","_super","call","then","_isShowing","_sequencedShowHide","Promise","all","hide","_isHiding","showDataItem","easing","_valueFields","animate","to","waitForStop","hideDataItem","baseValue","_markDirtyStack","stackedSeries","_afterChanged","_skipped","showDataItemTooltip","tooltip","isHidden","_setDataItem","itemLocationX","itemLocationY","xPos","_aLocationX0","_aLocationX1","yPos","_aLocationY0","_aLocationY1","inPlot","label","text","markDirtyText","_getTooltipTarget","toGlobal","hideTooltip","legendDataItem","txt","_emptyDataItem","valueLabel","_getItemReaderLabel","positionToCoordinate","_shouldInclude","_position","handleCursorHide","resetExtremes","createAxisRange","mainDataItems","_mainDataItems","classNames","concat"],"sources":["C:\\Users\\Rizki\\binar-course\\cms-binar-platinum\\node_modules\\src\\.internal\\charts\\xy\\series\\XYSeries.ts"],"sourcesContent":["import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t *\n\t * **IMPORTANT:** `xAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t *\n\t * **IMPORTANT:** `yAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis._disposers.push(xAxis.events.on(\"positionchanged\", () => {\n\t\t\tthis._fixPosition();\n\t\t}))\n\n\t\tthis._disposers.push(yAxis.events.on(\"positionchanged\", () => {\n\t\t\tthis._fixPosition();\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (!xAxis.inited || !yAxis.inited) {\n\t\t\treturn false\n\t\t}\n\t\tconst minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\tif (minBulletDistance > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tlet count = endIndex - startIndex;\n\n\t\t\tif (xAxis == baseAxis) {\n\t\t\t\tif (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (yAxis == baseAxis) {\n\t\t\t\tif (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tprotected _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\" || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\"))) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}