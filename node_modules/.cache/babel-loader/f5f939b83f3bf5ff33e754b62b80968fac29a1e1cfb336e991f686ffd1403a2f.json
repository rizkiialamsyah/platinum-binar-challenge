{"ast":null,"code":"/**\r\n * @ignore\r\n */\nexport class MonotoneXTension {\n  constructor(context, tension) {\n    Object.defineProperty(this, \"_line\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_point\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_context\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_x0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_x1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_y0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_y1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_t0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_tension\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    this._context = context;\n    this._tension = tension;\n  }\n  areaStart() {\n    this._line = 0;\n  }\n  areaEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;\n    this._point = 0;\n  }\n  lineEnd() {\n    switch (this._point) {\n      case 2:\n        this._context.lineTo(this._x1, this._y1);\n        break;\n      case 3:\n        point(this, this._t0, slope2(this, this._t0));\n        break;\n    }\n    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n  point(x, y) {\n    let t1 = NaN;\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n        break;\n      case 1:\n        this._point = 2;\n        break;\n      case 2:\n        this._point = 3;\n        point(this, slope2(this, t1 = slope3(this, x, y)), t1);\n        break;\n      default:\n        point(this, this._t0, t1 = slope3(this, x, y));\n        break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n/**\r\n * @ignore\r\n */\nexport function curveMonotoneXTension(tension) {\n  function monotoneXTension(context) {\n    return new MonotoneXTension(context, tension);\n  }\n  return monotoneXTension;\n}\n/**\r\n * @ignore\r\n */\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n/**\r\n * @ignore\r\n */\nfunction slope3(that, x2, y2) {\n  let h0 = that._x1 - that._x0;\n  let h1 = x2 - that._x1;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n/**\r\n * @ignore\r\n */\nfunction slope2(that, t) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n/**\r\n * @ignore\r\n */\nfunction point(that, t0, t1) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}","map":{"version":3,"names":["MonotoneXTension","constructor","context","tension","Object","defineProperty","_context","_tension","areaStart","_line","areaEnd","NaN","lineStart","_x0","_x1","_y0","_y1","_t0","_point","lineEnd","lineTo","point","slope2","closePath","x","y","t1","moveTo","slope3","curveMonotoneXTension","monotoneXTension","sign","that","x2","y2","h0","h1","s0","s1","p","Math","min","abs","t","h","t0","x0","y0","x1","y1","dx","bezierCurveTo"],"sources":["C:\\Users\\Rizki\\binar-course\\cms-binar-platinum\\node_modules\\src\\.internal\\core\\render\\MonotoneXTension.ts"],"sourcesContent":["/**\n * @ignore\n */\nexport class MonotoneXTension {\n\n  constructor(context: CanvasRenderingContext2D, tension: number) {\n    this._context = context;\n    this._tension = tension;\n  }\n\n  public _line = 0;\n  public _point = 0;\n  public _context: any;\n  public _x0 = 0;\n  public _x1 = 0;\n  public _y0 = 0;\n  public _y1 = 0;\n  public _t0 = 0;\n\n  public _tension: number = 0;\n\n  public areaStart() {\n    this._line = 0;\n  }\n\n  public areaEnd() {\n    this._line = NaN;\n  }\n\n  public lineStart() {\n    this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n    this._point = 0;\n  }\n\n  public lineEnd() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n\n  public point(x: number, y: number) {\n    let t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneXTension(tension: number) {\n\n  function monotoneXTension(context: any) {\n    return new MonotoneXTension(context, tension);\n  }\n\n  return monotoneXTension;\n}\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneXTension, x2: number, y2: number) {\n  let h0 = (that._x1 - that._x0) as any;\n  let h1 = (x2 - that._x1) as any;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneXTension, t: number) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneXTension, t0: number, t1: number) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}