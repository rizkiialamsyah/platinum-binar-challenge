{"ast":null,"code":"import { Graphics } from \"./Graphics\";\n/**\r\n * Draws a Ellipse.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\nexport class Ellipse extends Graphics {\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"radiusX\") || this.isDirty(\"radiusY\") || this.isDirty(\"rotation\")) {\n      this._clear = true;\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this._clear) {\n      this._display.drawEllipse(0, 0, Math.abs(this.get(\"radiusX\")), Math.abs(this.get(\"radiusY\")));\n    }\n  }\n}\nObject.defineProperty(Ellipse, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Ellipse\"\n});\nObject.defineProperty(Ellipse, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Graphics.classNames.concat([Ellipse.className])\n});","map":{"version":3,"names":["Graphics","Ellipse","_beforeChanged","isDirty","_clear","_changed","_display","drawEllipse","Math","abs","get","Object","defineProperty","classNames","concat","className"],"sources":["C:\\Users\\Rizki\\binar-course\\cms-binar-platinum\\node_modules\\src\\.internal\\core\\render\\Ellipse.ts"],"sourcesContent":["import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\r\n\r\nexport interface IEllipseSettings extends IGraphicsSettings {\r\n\r\n\t/**\r\n\t * The ellipse's major-axis radius. Must be non-negative.\r\n\t */\r\n\r\n\tradiusX: number\r\n\r\n\t/**\r\n\t * The ellipse's minor-axis radius. Must be non-negative.\r\n\t */\r\n\tradiusY: number\r\n}\r\n\r\nexport interface IEllipsePrivate extends IGraphicsPrivate {\r\n}\r\n\r\n/**\r\n * Draws a Ellipse.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Ellipse extends Graphics {\r\n\r\n\tdeclare public _settings: IEllipseSettings;\r\n\tdeclare public _privateSettings: IEllipsePrivate;\r\n\r\n\tpublic static className: string = \"Ellipse\";\r\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Ellipse.className]);\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\r\n\t\tif (this.isDirty(\"radiusX\") || this.isDirty(\"radiusY\") || this.isDirty(\"rotation\")) {\r\n\t\t\tthis._clear = true;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _changed() {\r\n\t\tsuper._changed();\r\n\r\n\t\tif (this._clear) {\r\n\t\t\tthis._display.drawEllipse(0, 0, Math.abs(this.get(\"radiusX\")), Math.abs(this.get(\"radiusY\")));\r\n\t\t}\r\n\t}\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAA6C,YAAY;AAmB1E;;;;;;AAMA,OAAM,MAAOC,OAAQ,SAAQD,QAAQ;EAQ7BE,cAAcA,CAAA;IACpB,KAAK,CAACA,cAAc,EAAE;IAEtB,IAAI,IAAI,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,UAAU,CAAC,EAAE;MACnF,IAAI,CAACC,MAAM,GAAG,IAAI;;EAEpB;EAEOC,QAAQA,CAAA;IACd,KAAK,CAACA,QAAQ,EAAE;IAEhB,IAAI,IAAI,CAACD,MAAM,EAAE;MAChB,IAAI,CAACE,QAAQ,CAACC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAEC,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAEF,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;;EAE/F;;AAjBAC,MAAA,CAAAC,cAAA,CAAAX,OAAA;;;;SAAkC;;AAClCU,MAAA,CAAAC,cAAA,CAAAX,OAAA;;;;SAA0CD,QAAQ,CAACa,UAAU,CAACC,MAAM,CAAC,CAACb,OAAO,CAACc,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}