{"ast":null,"code":"import { Graphics } from \"./Graphics\";\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\nexport class Rectangle extends Graphics {\n  _beforeChanged() {\n    super._beforeChanged();\n    if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n      this._clear = true;\n    }\n  }\n  _changed() {\n    super._changed();\n    if (this._clear && !this.get(\"draw\")) {\n      this._draw();\n    }\n  }\n  _draw() {\n    this._display.drawRect(0, 0, this.width(), this.height());\n  }\n  _updateSize() {\n    this.markDirty();\n    this._clear = true;\n  }\n}\nObject.defineProperty(Rectangle, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Rectangle\"\n});\nObject.defineProperty(Rectangle, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Graphics.classNames.concat([Rectangle.className])\n});","map":{"version":3,"names":["Graphics","Rectangle","_beforeChanged","isDirty","isPrivateDirty","_clear","_changed","get","_draw","_display","drawRect","width","height","_updateSize","markDirty","Object","defineProperty","classNames","concat","className"],"sources":["C:\\Users\\Rizki\\binar-course\\cms-binar-platinum\\node_modules\\src\\.internal\\core\\render\\Rectangle.ts"],"sourcesContent":["import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\n\nexport interface IRectangleSettings extends IGraphicsSettings {\n}\n\nexport interface IRectanglePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a rectangle.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Rectangle extends Graphics {\n\n\tdeclare public _settings: IRectangleSettings;\n\tdeclare public _privateSettings: IRectanglePrivate;\n\n\tpublic static className: string = \"Rectangle\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Rectangle.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear && !this.get(\"draw\")) {\n\t\t\tthis._draw();\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tthis._display.drawRect(0, 0, this.width(), this.height());\n\t}\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAA6C,YAAY;AAQ1E;;;;;;AAMA,OAAM,MAAOC,SAAU,SAAQD,QAAQ;EAQ/BE,cAAcA,CAAA;IACpB,KAAK,CAACA,cAAc,EAAE;IAEtB,IAAI,IAAI,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAACC,cAAc,CAAC,OAAO,CAAC,IAAI,IAAI,CAACA,cAAc,CAAC,QAAQ,CAAC,EAAE;MACrH,IAAI,CAACC,MAAM,GAAG,IAAI;;EAEpB;EAEOC,QAAQA,CAAA;IACd,KAAK,CAACA,QAAQ,EAAE;IAEhB,IAAI,IAAI,CAACD,MAAM,IAAI,CAAC,IAAI,CAACE,GAAG,CAAC,MAAM,CAAC,EAAE;MACrC,IAAI,CAACC,KAAK,EAAE;;EAEd;EAEUA,KAAKA,CAAA;IACd,IAAI,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACC,KAAK,EAAE,EAAE,IAAI,CAACC,MAAM,EAAE,CAAC;EAC1D;EAEOC,WAAWA,CAAA;IACjB,IAAI,CAACC,SAAS,EAAE;IAChB,IAAI,CAACT,MAAM,GAAG,IAAI;EACnB;;AA1BAU,MAAA,CAAAC,cAAA,CAAAf,SAAA;;;;SAAkC;;AAClCc,MAAA,CAAAC,cAAA,CAAAf,SAAA;;;;SAA0CD,QAAQ,CAACiB,UAAU,CAACC,MAAM,CAAC,CAACjB,SAAS,CAACkB,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}