{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Entity } from \"../util/Entity\";\nimport { Template } from \"../util/Template\";\nimport { Percent } from \"../util/Percent\";\nimport { EventDispatcher } from \"../util/EventDispatcher\";\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\nimport { waitForAnimations } from \"../util/Animation\";\nimport * as $utils from \"../util/Utils\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $object from \"../util/Object\";\nimport * as $math from \"../util/Math\";\n//import { populateString } from \"../util/PopulateString\";\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\nclass SpriteEventDispatcher extends EventDispatcher {\n  constructor(sprite) {\n    super();\n    Object.defineProperty(this, \"_sprite\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_rendererDisposers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_dispatchParents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    this._sprite = sprite;\n  }\n  _makePointerEvent(key, event) {\n    return {\n      type: key,\n      originalEvent: event.event,\n      point: event.point,\n      simulated: event.simulated,\n      native: event.native,\n      target: this._sprite\n    };\n  }\n  _onRenderer(key, dispatch) {\n    // TODO: is this OK? it'd be good not to require to set this on each individual element\n    this._sprite.set(\"interactive\", true);\n    this._sprite._display.interactive = true;\n    let events = this._rendererDisposers[key];\n    if (events === undefined) {\n      const disposer = this._sprite._display.on(key, e => {\n        dispatch.call(this, e);\n      });\n      events = this._rendererDisposers[key] = new CounterDisposer(() => {\n        delete this._rendererDisposers[key];\n        disposer.dispose();\n      });\n    }\n    return events.increment();\n  }\n  _on(once, type, callback, context, shouldClone, dispatch) {\n    const info = super._on(once, type, callback, context, shouldClone, dispatch);\n    const rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\n    if (rendererEvent !== undefined) {\n      info.disposer = new MultiDisposer([info.disposer, this._onRenderer(type, rendererEvent)]);\n    }\n    return info;\n  }\n  /**\r\n   * Will stop any bubbling up of the event to element's parents.\r\n   *\r\n   * Should be called in an event handler, e.g.:\r\n   *\r\n   * ```TypeScript\r\n   * element.events.on(\"pointerdown\", function(ev) {\r\n   *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n   *   // ...\r\n   *   ev.target.events.stopParentDispatch();\r\n   * });\r\n   * ```\r\n   * ```JavaScript\r\n   * element.events.on(\"pointerdown\", function(ev) {\r\n   *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n   *   // ...\r\n   *   ev.target.events.stopParentDispatch();\r\n   * });\r\n   * ```\r\n   */\n  stopParentDispatch() {\n    this._dispatchParents = false;\n  }\n  /**\r\n   * @ignore\r\n   */\n  dispatchParents(type, event) {\n    const old = this._dispatchParents;\n    this._dispatchParents = true;\n    try {\n      this.dispatch(type, event);\n      if (this._dispatchParents && this._sprite.parent) {\n        this._sprite.parent.events.dispatchParents(type, event);\n      }\n    } finally {\n      this._dispatchParents = old;\n    }\n  }\n}\nObject.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: {\n    \"click\": function (event) {\n      if (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\n        this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\n      }\n    },\n    \"rightclick\": function (event) {\n      if (this.isEnabled(\"rightclick\")) {\n        this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\n      }\n    },\n    \"middleclick\": function (event) {\n      if (this.isEnabled(\"middleclick\")) {\n        this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\n      }\n    },\n    \"dblclick\": function (event) {\n      this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\n    },\n    \"pointerover\": function (event) {\n      if (this.isEnabled(\"pointerover\")) {\n        this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\n      }\n    },\n    \"pointerout\": function (event) {\n      if (this.isEnabled(\"pointerout\")) {\n        this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\n      }\n    },\n    \"pointerdown\": function (event) {\n      this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\n    },\n    \"pointerup\": function (event) {\n      if (this.isEnabled(\"pointerup\")) {\n        this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\n      }\n    },\n    \"globalpointerup\": function (event) {\n      if (this.isEnabled(\"globalpointerup\")) {\n        this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\n      }\n    },\n    \"globalpointermove\": function (event) {\n      if (this.isEnabled(\"globalpointermove\")) {\n        this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\n      }\n    },\n    \"wheel\": function (event) {\n      this.dispatchParents(\"wheel\", {\n        type: \"wheel\",\n        target: this._sprite,\n        originalEvent: event.event,\n        point: event.point\n      });\n    }\n  }\n});\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\nexport class Sprite extends Entity {\n  constructor() {\n    super(...arguments);\n    Object.defineProperty(this, \"_adjustedLocalBounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }\n    });\n    Object.defineProperty(this, \"_localBounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }\n    });\n    Object.defineProperty(this, \"_parent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_dataItem\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_templateField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_sizeDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    // Will be true only when dragging\n    Object.defineProperty(this, \"_isDragging\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    // The event when the dragging starts\n    Object.defineProperty(this, \"_dragEvent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // The position when dragging starts\n    Object.defineProperty(this, \"_dragPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_isHidden\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_isShowing\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_isHiding\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_isDown\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"_downPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_downPoints\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_toggleDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_dragDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltipDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_hoverDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_focusDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltipMoveDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_tooltipPointerDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_statesHandled\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n  _afterNew() {\n    this.setPrivateRaw(\"visible\", true);\n    super._afterNew();\n  }\n  _markDirtyKey(key) {\n    super._markDirtyKey(key);\n    if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\n      this.markDirtyBounds();\n      this._addPercentagePositionChildren();\n      this.markDirtyPosition();\n    }\n  }\n  _markDirtyPrivateKey(key) {\n    super._markDirtyPrivateKey(key);\n    if (key == \"x\" || key == \"y\") {\n      this.markDirtyPosition();\n    }\n  }\n  _removeTemplateField() {\n    if (this._templateField) {\n      this._templateField._removeObjectTemplate(this);\n    }\n  }\n  _createEvents() {\n    return new SpriteEventDispatcher(this);\n  }\n  _processTemplateField() {\n    let template;\n    const field = this.get(\"templateField\");\n    if (field) {\n      const dataItem = this.dataItem;\n      if (dataItem) {\n        const context = dataItem.dataContext;\n        if (context) {\n          template = context[field];\n          if (!(template instanceof Template) && template) {\n            template = Template.new(template);\n          }\n        }\n      }\n    }\n    if (this._templateField !== template) {\n      this._removeTemplateField();\n      this._templateField = template;\n      if (template) {\n        template._setObjectTemplate(this);\n      }\n      this._applyTemplates();\n    }\n  }\n  // TODO change this to run before the element is added to the parent, so that way\n  //      it doesn't need to apply the themes twice\n  _setDataItem(dataItem) {\n    const oldDataItem = this._dataItem;\n    this._dataItem = dataItem;\n    this._processTemplateField();\n    const eventType = \"dataitemchanged\";\n    if (dataItem != oldDataItem) {\n      if (this.events.isEnabled(eventType)) {\n        this.events.dispatch(eventType, {\n          type: eventType,\n          target: this,\n          oldDataItem: oldDataItem,\n          newDataItem: dataItem\n        });\n      }\n    }\n  }\n  /**\r\n   * A [[DataItem]] used for this element.\r\n   *\r\n   * NOTE: data item is being assigned automatically in most cases where it\r\n   * matters. Use this accessor to set data item only if you know what you're\r\n   * doing.\r\n   *\r\n   * @param  value  Data item\r\n   */\n  set dataItem(value) {\n    this._setDataItem(value);\n  }\n  /**\r\n   * @return DataItem\r\n   */\n  get dataItem() {\n    if (this._dataItem) {\n      return this._dataItem;\n    } else {\n      let parent = this._parent;\n      while (parent) {\n        if (parent._dataItem) {\n          return parent._dataItem;\n        } else {\n          parent = parent._parent;\n        }\n      }\n    }\n  }\n  _addPercentageSizeChildren() {\n    let parent = this.parent;\n    if (parent) {\n      if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\n        $array.pushOne(parent._percentageSizeChildren, this);\n      } else {\n        $array.removeFirst(parent._percentageSizeChildren, this);\n      }\n    }\n  }\n  _addPercentagePositionChildren() {\n    let parent = this.parent;\n    if (parent) {\n      if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\n        $array.pushOne(parent._percentagePositionChildren, this);\n      } else {\n        $array.removeFirst(parent._percentagePositionChildren, this);\n      }\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirtyPosition() {\n    this._root._addDirtyPosition(this);\n  }\n  updatePivotPoint() {\n    const bounds = this._localBounds;\n    if (bounds) {\n      const centerX = this.get(\"centerX\");\n      if (centerX != null) {\n        this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\n      }\n      const centerY = this.get(\"centerY\");\n      if (centerY != null) {\n        this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\n      }\n    }\n  }\n  _beforeChanged() {\n    super._beforeChanged();\n    // handling states in beforeChanged, otherwise states is not applied without animated theme\n    this._handleStates();\n    if (this.isDirty(\"tooltip\")) {\n      const previous = this._prevSettings.tooltip;\n      if (previous) {\n        previous.dispose();\n      }\n    }\n    if (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\n      this._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\n      this.markDirtyLayer();\n    }\n    if (this.isDirty(\"tooltipPosition\")) {\n      const tooltipMoveDp = this._tooltipMoveDp;\n      if (tooltipMoveDp) {\n        tooltipMoveDp.dispose();\n        this._tooltipMoveDp = undefined;\n      }\n      const tooltipPointerDp = this._tooltipPointerDp;\n      if (tooltipPointerDp) {\n        tooltipPointerDp.dispose();\n        this._tooltipPointerDp = undefined;\n      }\n      if (this.get(\"tooltipPosition\") == \"pointer\") {\n        this._tooltipPointerDp = new MultiDisposer([this.events.on(\"pointerover\", () => {\n          this._tooltipMoveDp = this.events.on(\"globalpointermove\", e => {\n            this.showTooltip(e.point);\n          });\n        }), this.events.on(\"pointerout\", () => {\n          const tooltipMoveDp = this._tooltipMoveDp;\n          if (tooltipMoveDp) {\n            tooltipMoveDp.dispose();\n            this._tooltipMoveDp = undefined;\n          }\n        })]);\n      }\n    }\n  }\n  _handleStates() {\n    if (!this._statesHandled) {\n      if (this.isDirty(\"active\")) {\n        if (this.get(\"active\")) {\n          this.states.applyAnimate(\"active\");\n          this.set(\"ariaChecked\", true);\n        } else {\n          if (!this.isHidden()) {\n            this.states.applyAnimate(\"default\");\n          }\n          this.set(\"ariaChecked\", false);\n        }\n        this.markDirtyAccessibility();\n      }\n      if (this.isDirty(\"disabled\")) {\n        if (this.get(\"disabled\")) {\n          this.states.applyAnimate(\"disabled\");\n          this.set(\"ariaChecked\", false);\n        } else {\n          if (!this.isHidden()) {\n            this.states.applyAnimate(\"default\");\n          }\n          this.set(\"ariaChecked\", true);\n        }\n        this.markDirtyAccessibility();\n      }\n      this._statesHandled = true;\n    }\n  }\n  _changed() {\n    super._changed();\n    const display = this._display;\n    const events = this.events;\n    if (this.isDirty(\"draggable\")) {\n      const draggable = this.get(\"draggable\");\n      if (draggable) {\n        this.set(\"interactive\", true);\n        this._dragDp = new MultiDisposer([events.on(\"pointerdown\", ev => {\n          this.dragStart(ev);\n        }), events.on(\"globalpointermove\", ev => {\n          this.dragMove(ev);\n        }), events.on(\"globalpointerup\", ev => {\n          this.dragStop(ev);\n        })]);\n      } else {\n        if (this._dragDp) {\n          this._dragDp.dispose();\n          this._dragDp = undefined;\n        }\n      }\n      display.cancelTouch = draggable ? true : false;\n    }\n    if (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\n      const tooltipText = this.get(\"tooltipText\");\n      const tooltipHTML = this.get(\"tooltipHTML\");\n      const showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\n      if (this._tooltipDp) {\n        this._tooltipDp.dispose();\n        this._tooltipDp = undefined;\n      }\n      if (tooltipText || tooltipHTML) {\n        if (showTooltipOn == \"click\") {\n          this._tooltipDp = new MultiDisposer([events.on(\"click\", () => {\n            this.setTimeout(() => this.showTooltip(), 10);\n          }), $utils.addEventListener(document, \"click\", _ev => {\n            this.hideTooltip();\n          })]);\n        } else if (showTooltipOn == \"always\") {\n          // nothing\n        } else {\n          this._tooltipDp = new MultiDisposer([events.on(\"pointerover\", () => {\n            this.showTooltip();\n          }), events.on(\"pointerout\", () => {\n            this.hideTooltip();\n          })]);\n        }\n      }\n    }\n    if (this.isDirty(\"toggleKey\")) {\n      let toggleKey = this.get(\"toggleKey\");\n      if (toggleKey && toggleKey != \"none\") {\n        this._toggleDp = events.on(\"click\", () => {\n          if (!this._isDragging) {\n            this.set(toggleKey, !this.get(toggleKey));\n          }\n        });\n      } else {\n        if (this._toggleDp) {\n          this._toggleDp.dispose();\n          this._toggleDp = undefined;\n        }\n      }\n    }\n    if (this.isDirty(\"opacity\")) {\n      display.alpha = Math.max(0, this.get(\"opacity\", 1));\n    }\n    if (this.isDirty(\"rotation\")) {\n      this.markDirtyBounds();\n      display.angle = this.get(\"rotation\", 0);\n    }\n    if (this.isDirty(\"scale\")) {\n      this.markDirtyBounds();\n      display.scale = this.get(\"scale\", 0);\n    }\n    if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\n      this.markDirtyBounds();\n      this.updatePivotPoint();\n    }\n    if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\n      if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n        display.visible = false;\n        this.hideTooltip();\n      } else {\n        display.visible = true;\n      }\n      this.markDirtyBounds();\n      if (this.get(\"focusable\")) {\n        this.markDirtyAccessibility();\n      }\n    }\n    if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\n      this.markDirtyBounds();\n      this._addPercentageSizeChildren();\n      const parent = this.parent;\n      if (parent) {\n        if (this.isDirty(\"width\") && this.get(\"width\") instanceof Percent || this.isDirty(\"height\") && this.get(\"height\") instanceof Percent) {\n          parent.markDirty();\n          parent._prevWidth = 0;\n        }\n      }\n      this._sizeDirty = true;\n    }\n    if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\n      this.markDirtyBounds();\n      this._sizeDirty = true;\n    }\n    if (this._sizeDirty) {\n      this._updateSize();\n    }\n    if (this.isDirty(\"wheelable\")) {\n      const wheelable = this.get(\"wheelable\");\n      if (wheelable) {\n        this.set(\"interactive\", true);\n      }\n      display.wheelable = wheelable ? true : false;\n    }\n    // Accessibility\n    if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\n      if (this.get(\"focusable\")) {\n        this._root._registerTabindexOrder(this);\n      } else {\n        this._root._unregisterTabindexOrder(this);\n      }\n    }\n    if (this.isDirty(\"filter\")) {\n      //this.markDirtyBounds();\n      display.filter = this.get(\"filter\");\n    }\n    if (this.isDirty(\"cursorOverStyle\")) {\n      display.cursorOverStyle = this.get(\"cursorOverStyle\");\n    }\n    if (this.isDirty(\"hoverOnFocus\")) {\n      if (this.get(\"hoverOnFocus\")) {\n        this._focusDp = new MultiDisposer([events.on(\"focus\", () => {\n          // TODO: proper hover, not just tooltip\n          this.showTooltip();\n        }), events.on(\"blur\", () => {\n          // TODO: proper hover, not just tooltip\n          this.hideTooltip();\n        })]);\n      } else {\n        if (this._focusDp) {\n          this._focusDp.dispose();\n          this._focusDp = undefined;\n        }\n      }\n    }\n    if (this.isDirty(\"focusable\")) {\n      if (this.get(\"focusable\")) {\n        this._root._registerTabindexOrder(this);\n      } else {\n        this._root._unregisterTabindexOrder(this);\n      }\n      this.markDirtyAccessibility();\n    }\n    if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\n      // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\n      // @todo make sure ariaLabel gets populated in Root\n      this.markDirtyAccessibility();\n    }\n    if (this.isDirty(\"exportable\")) {\n      display.exportable = this.get(\"exportable\");\n    }\n    if (this.isDirty(\"interactive\")) {\n      const events = this.events;\n      if (this.get(\"interactive\")) {\n        this._hoverDp = new MultiDisposer([events.on(\"click\", ev => {\n          if ($utils.isTouchEvent(ev.originalEvent)) {\n            if (!this.getPrivate(\"touchHovering\")) {\n              this.setTimeout(() => {\n                this._handleOver();\n                if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\n                  this.showTooltip();\n                }\n                this.setPrivateRaw(\"touchHovering\", true);\n                this.events.dispatch(\"pointerover\", {\n                  type: \"pointerover\",\n                  target: ev.target,\n                  originalEvent: ev.originalEvent,\n                  point: ev.point,\n                  simulated: ev.simulated\n                });\n              }, 10);\n            }\n          }\n        }), events.on(\"globalpointerup\", ev => {\n          if ($utils.isTouchEvent(ev.originalEvent)) {\n            if (this.getPrivate(\"touchHovering\")) {\n              this._handleOut();\n              if (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\n                this.hideTooltip();\n              }\n              this.setPrivateRaw(\"touchHovering\", false);\n              this.events.dispatch(\"pointerout\", {\n                type: \"pointerout\",\n                target: ev.target,\n                originalEvent: ev.originalEvent,\n                point: ev.point,\n                simulated: ev.simulated\n              });\n            }\n          }\n          if (this._isDown) {\n            this._handleUp(ev);\n          }\n          //this._isDown = false;\n        }), events.on(\"pointerover\", () => {\n          this._handleOver();\n        }), events.on(\"pointerout\", () => {\n          this._handleOut();\n        }), events.on(\"pointerdown\", e => {\n          this._handleDown(e);\n        })]);\n      } else {\n        this._display.interactive = false;\n        if (this._hoverDp) {\n          this._hoverDp.dispose();\n          this._hoverDp = undefined;\n        }\n      }\n    }\n    if (this.isDirty(\"forceInactive\")) {\n      this._display.inactive = this.get(\"forceInactive\", false);\n    }\n    if (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\n      this.showTooltip();\n    }\n  }\n  /**\r\n   * @ignore\r\n   * @todo should this be user-accessible?\r\n   */\n  dragStart(e) {\n    this._dragEvent = e;\n    this.events.stopParentDispatch();\n  }\n  /**\r\n   * @ignore\r\n   * @todo should this be user-accessible?\r\n   */\n  dragStop(e) {\n    this._dragEvent = undefined;\n    this._dragPoint = undefined;\n    this.events.stopParentDispatch();\n    if (this._isDragging) {\n      this._isDragging = false;\n      const type = \"dragstop\";\n      if (this.events.isEnabled(type)) {\n        this.events.dispatch(type, {\n          type: type,\n          target: this,\n          originalEvent: e.originalEvent,\n          point: e.point,\n          simulated: e.simulated\n        });\n      }\n    }\n  }\n  _handleOver() {\n    if (!this.isHidden()) {\n      if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\n        this.states.applyAnimate(\"hoverActive\");\n      } else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\n        this.states.applyAnimate(\"hoverDisabled\");\n      } else {\n        this.states.applyAnimate(\"hover\");\n      }\n      if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\n        this.states.applyAnimate(\"down\");\n      }\n    }\n  }\n  _handleOut() {\n    if (!this.isHidden()) {\n      if (this.get(\"active\") && this.states.lookup(\"active\")) {\n        this.states.applyAnimate(\"active\");\n      } else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n        this.states.applyAnimate(\"disabled\");\n      } else {\n        if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\n          this.states.applyAnimate(\"default\");\n        }\n      }\n      if (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\n        this.states.applyAnimate(\"down\");\n      }\n    }\n  }\n  _handleUp(e) {\n    if (!this.isHidden()) {\n      if (this.get(\"active\") && this.states.lookup(\"active\")) {\n        this.states.applyAnimate(\"active\");\n      } else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n        this.states.applyAnimate(\"disabled\");\n      } else if (this.states.lookup(\"down\")) {\n        if (this.isHover()) {\n          this.states.applyAnimate(\"hover\");\n        } else {\n          this.states.applyAnimate(\"default\");\n        }\n      }\n      // @todo remove this once migrated to _downPoints\n      this._downPoint = undefined;\n      const pointerId = $utils.getPointerId(e.originalEvent);\n      delete this._downPoints[pointerId];\n      if ($object.keys(this._downPoints).length == 0) {\n        this._isDown = false;\n      }\n    }\n  }\n  _hasMoved(e) {\n    // @todo remove this once migrated to _downPoints\n    // if (this._downPoint) {\n    // \tconst x = Math.abs(this._downPoint.x - e.point.x);\n    // \tconst y = Math.abs(this._downPoint.y - e.point.y);\n    // \treturn (x > 5) || (y > 5);\n    // }\n    const pointerId = $utils.getPointerId(e.originalEvent);\n    const downPoint = this._downPoints[pointerId];\n    if (downPoint) {\n      const x = Math.abs(downPoint.x - e.point.x);\n      const y = Math.abs(downPoint.y - e.point.y);\n      return x > 5 || y > 5;\n    }\n    return false;\n  }\n  _hasDown() {\n    return $object.keys(this._downPoints).length > 0;\n  }\n  _handleDown(e) {\n    const parent = this.parent;\n    if (parent && !this.get(\"draggable\")) {\n      parent._handleDown(e);\n    }\n    if (this.get(\"interactive\") && !this.isHidden()) {\n      if (this.states.lookup(\"down\")) {\n        this.states.applyAnimate(\"down\");\n      }\n      this._downPoint = {\n        x: e.point.x,\n        y: e.point.y\n      };\n      // @todo remove this once migrated to _downPoints\n      this._isDown = true;\n      const pointerId = $utils.getPointerId(e.originalEvent);\n      this._downPoints[pointerId] = {\n        x: e.point.x,\n        y: e.point.y\n      };\n    }\n  }\n  /**\r\n   * @ignore\r\n   * @todo should this be user-accessible?\r\n   */\n  dragMove(e) {\n    let dragEvent = this._dragEvent;\n    if (dragEvent) {\n      if (dragEvent.simulated && !e.simulated) {\n        return true;\n      }\n      let angle = 0;\n      let parent = this.parent;\n      while (parent != null) {\n        angle += parent.get(\"rotation\", 0);\n        parent = parent.parent;\n      }\n      let x = e.point.x - dragEvent.point.x;\n      let y = e.point.y - dragEvent.point.y;\n      const events = this.events;\n      if (dragEvent.simulated && !this._isDragging) {\n        this._isDragging = true;\n        this._dragEvent = e;\n        this._dragPoint = {\n          x: this.x(),\n          y: this.y()\n        };\n        const type = \"dragstart\";\n        if (events.isEnabled(type)) {\n          events.dispatch(type, {\n            type: type,\n            target: this,\n            originalEvent: e.originalEvent,\n            point: e.point,\n            simulated: e.simulated\n          });\n        }\n      }\n      if (this._isDragging) {\n        let dragPoint = this._dragPoint;\n        this.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\n        this.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\n        const type = \"dragged\";\n        if (events.isEnabled(type)) {\n          events.dispatch(type, {\n            type: type,\n            target: this,\n            originalEvent: e.originalEvent,\n            point: e.point,\n            simulated: e.simulated\n          });\n        }\n      } else {\n        if (Math.hypot(x, y) > 5) {\n          this._isDragging = true;\n          this._dragEvent = e;\n          this._dragPoint = {\n            x: this.x(),\n            y: this.y()\n          };\n          const type = \"dragstart\";\n          if (events.isEnabled(type)) {\n            events.dispatch(type, {\n              type: type,\n              target: this,\n              originalEvent: e.originalEvent,\n              point: e.point,\n              simulated: e.simulated\n            });\n          }\n        }\n      }\n    }\n  }\n  _updateSize() {}\n  _getBounds() {\n    this._localBounds = this._display.getLocalBounds();\n  }\n  /**\r\n   * Returns depth (how deep in the hierachy of the content tree) of this\r\n   * element.\r\n   *\r\n   * @return Depth\r\n   */\n  depth() {\n    let self = this.parent;\n    let depth = 0;\n    while (true) {\n      if (self) {\n        ++depth;\n        self = self.parent;\n      } else {\n        return depth;\n      }\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirtySize() {\n    this._sizeDirty = true;\n    this.markDirty();\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirtyBounds() {\n    if (this.get(\"isMeasured\")) {\n      const display = this._display;\n      this._root._addDirtyBounds(this);\n      display.isMeasured = true;\n      display.invalidateBounds();\n      const parent = this.parent;\n      if (parent && this.get(\"position\") != \"absolute\") {\n        if (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\n          parent.markDirtyBounds();\n        }\n      }\n      if (this.get(\"focusable\") && this.isFocus()) {\n        this.markDirtyAccessibility();\n      }\n    }\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirtyAccessibility() {\n    //if (this._root.focused(this)) {\n    this._root._invalidateAccessibility(this);\n    //}\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirtyLayer() {\n    //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\n    this._display.markDirtyLayer(true);\n  }\n  /**\r\n   * @ignore\r\n   */\n  markDirty() {\n    super.markDirty();\n    this.markDirtyLayer();\n  }\n  _updateBounds() {\n    const oldBounds = this._adjustedLocalBounds;\n    let newBounds;\n    // if display.visible == false, it still returns bounds\n    if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n      newBounds = {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      };\n      this._localBounds = newBounds;\n      this._adjustedLocalBounds = newBounds;\n    } else {\n      this._getBounds();\n      this._fixMinBounds(this._localBounds);\n      this.updatePivotPoint();\n      this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\n      newBounds = this._adjustedLocalBounds;\n    }\n    if (!oldBounds || oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom) {\n      const eventType = \"boundschanged\";\n      if (this.events.isEnabled(eventType)) {\n        this.events.dispatch(eventType, {\n          type: eventType,\n          target: this\n        });\n      }\n      if (this.parent) {\n        this.parent.markDirty();\n        this.parent.markDirtyBounds();\n      }\n    }\n  }\n  _fixMinBounds(bounds) {\n    let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\n    let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\n    if ($type.isNumber(minWidth)) {\n      if (bounds.right - bounds.left < minWidth) {\n        bounds.right = bounds.left + minWidth;\n      }\n    }\n    if ($type.isNumber(minHeight)) {\n      if (bounds.bottom - bounds.top < minHeight) {\n        bounds.bottom = bounds.top + minHeight;\n      }\n    }\n    let privateWidth = this.getPrivate(\"width\");\n    let privateHeight = this.getPrivate(\"height\");\n    if ($type.isNumber(privateWidth)) {\n      if (privateWidth > 0) {\n        bounds.right = bounds.left + privateWidth;\n      } else {\n        bounds.left = bounds.right + privateWidth;\n      }\n    }\n    if ($type.isNumber(privateHeight)) {\n      if (privateHeight > 0) {\n        bounds.bottom = bounds.top + privateHeight;\n      } else {\n        bounds.top = bounds.bottom + privateHeight;\n      }\n    }\n  }\n  _removeParent(parent) {\n    if (parent) {\n      parent.children.removeValue(this);\n      $array.removeFirst(parent._percentageSizeChildren, this);\n      $array.removeFirst(parent._percentagePositionChildren, this);\n    }\n  }\n  _clearDirty() {\n    super._clearDirty();\n    this._sizeDirty = false;\n    this._statesHandled = false;\n  }\n  /**\r\n   * Simulate hover over element.\r\n   */\n  hover() {\n    this.showTooltip();\n    this._handleOver();\n  }\n  /**\r\n   * Simulate unhover over element.\r\n   */\n  unhover() {\n    this.hideTooltip();\n    this._handleOut();\n  }\n  /**\r\n   * Shows element's [[Tooltip]].\r\n   */\n  showTooltip(point) {\n    const tooltip = this.getTooltip();\n    const tooltipText = this.get(\"tooltipText\");\n    const tooltipHTML = this.get(\"tooltipHTML\");\n    if ((tooltipText || tooltipHTML) && tooltip) {\n      const tooltipPosition = this.get(\"tooltipPosition\");\n      const tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\n      if (tooltipPosition == \"fixed\" || !point) {\n        this._display._setMatrix();\n        point = this.toGlobal(tooltipTarget._getTooltipPoint());\n      }\n      tooltip.set(\"pointTo\", point);\n      tooltip.set(\"tooltipTarget\", tooltipTarget);\n      if (!tooltip.get(\"x\")) {\n        tooltip.set(\"x\", point.x);\n      }\n      if (!tooltip.get(\"y\")) {\n        tooltip.set(\"y\", point.y);\n      }\n      if (tooltipText) {\n        tooltip.label.set(\"text\", tooltipText);\n      }\n      if (tooltipHTML) {\n        tooltip.label.set(\"html\", tooltipHTML);\n      }\n      const dataItem = this.dataItem;\n      if (dataItem) {\n        tooltip.label._setDataItem(dataItem);\n      }\n      if (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\n        this.hideTooltip();\n        return;\n      }\n      tooltip.label.text.markDirtyText();\n      const promise = tooltip.show();\n      this.setPrivateRaw(\"showingTooltip\", true);\n      return promise;\n    }\n  }\n  /**\r\n   * Hides element's [[Tooltip]].\r\n   */\n  hideTooltip() {\n    const tooltip = this.getTooltip();\n    if (tooltip) {\n      if (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this)) {\n        let timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\n        const promise = tooltip.hide(timeout);\n        this.setPrivateRaw(\"showingTooltip\", false);\n        return promise;\n      }\n    }\n  }\n  _getTooltipPoint() {\n    const bounds = this._localBounds;\n    if (bounds) {\n      let x = 0;\n      let y = 0;\n      if (!this.get(\"isMeasured\")) {\n        x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\n        y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\n      } else {\n        x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\n        y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\n      }\n      return {\n        x,\n        y\n      };\n    }\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n  /**\r\n   * Returns [[Tooltip]] used for this element.\r\n   *\r\n   * @return Tooltip\r\n   */\n  getTooltip() {\n    let tooltip = this.get(\"tooltip\");\n    if (!tooltip) {\n      let parent = this.parent;\n      if (parent) {\n        return parent.getTooltip();\n      }\n    } else {\n      return tooltip;\n    }\n  }\n  _updatePosition() {\n    const parent = this.parent;\n    let dx = this.get(\"dx\", 0);\n    let dy = this.get(\"dy\", 0);\n    let x = this.get(\"x\");\n    let _x = this.getPrivate(\"x\");\n    let xx = 0;\n    let yy = 0;\n    const position = this.get(\"position\");\n    if (x instanceof Percent) {\n      if (parent) {\n        x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\n      } else {\n        x = 0;\n      }\n    }\n    if ($type.isNumber(x)) {\n      xx = x + dx;\n    } else {\n      if (_x != null) {\n        xx = _x;\n      } else if (parent) {\n        if (position == \"relative\") {\n          xx = parent.get(\"paddingLeft\", 0) + dx;\n        }\n      }\n    }\n    let y = this.get(\"y\");\n    let _y = this.getPrivate(\"y\");\n    if (y instanceof Percent) {\n      if (parent) {\n        y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\n      } else {\n        y = 0;\n      }\n    }\n    if ($type.isNumber(y)) {\n      yy = y + dy;\n    } else {\n      if (_y != null) {\n        yy = _y;\n      } else if (parent) {\n        if (position == \"relative\") {\n          yy = parent.get(\"paddingTop\", 0) + dy;\n        }\n      }\n    }\n    const display = this._display;\n    if (display.x != xx || display.y != yy) {\n      display.invalidateBounds();\n      display.x = xx;\n      display.y = yy;\n      const eventType = \"positionchanged\";\n      if (this.events.isEnabled(eventType)) {\n        this.events.dispatch(eventType, {\n          type: eventType,\n          target: this\n        });\n      }\n    }\n    // Update tooltip position together with the Sprite\n    if (this.getPrivate(\"showingTooltip\")) {\n      this.showTooltip();\n    }\n  }\n  /**\r\n   * Returns element's actual X position in pixels.\r\n   *\r\n   * @return X (px)\r\n   */\n  x() {\n    let x = this.get(\"x\");\n    let _x = this.getPrivate(\"x\");\n    const parent = this.parent;\n    if (parent) {\n      if (x instanceof Percent) {\n        return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\n      } else {\n        if (!$type.isNumber(x)) {\n          if (_x != null) {\n            return _x;\n          } else {\n            return parent.get(\"paddingLeft\", this._display.x);\n          }\n        } else {\n          return x;\n        }\n      }\n    }\n    return this._display.x;\n  }\n  /**\r\n   * Returns element's actual Y position in pixels.\r\n   *\r\n   * @return Y (px)\r\n   */\n  y() {\n    let _y = this.getPrivate(\"y\");\n    if (_y != null) {\n      return _y;\n    }\n    let y = this.get(\"y\");\n    const parent = this.parent;\n    if (parent) {\n      if (y instanceof Percent) {\n        return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\n      } else {\n        if (!$type.isNumber(y)) {\n          if (_y != null) {\n            return _y;\n          } else {\n            return parent.get(\"paddingTop\", this._display.y);\n          }\n        } else {\n          return y;\n        }\n      }\n    }\n    return this._display.y;\n  }\n  _dispose() {\n    super._dispose();\n    this._display.dispose();\n    this._removeTemplateField();\n    this._removeParent(this.parent);\n    this._root._removeFocusElement(this);\n    const tooltip = this.get(\"tooltip\");\n    if (tooltip) {\n      tooltip.dispose();\n    }\n    this.markDirty();\n  }\n  /**\r\n   * @ignore\r\n   */\n  adjustedLocalBounds() {\n    this._fixMinBounds(this._adjustedLocalBounds);\n    return this._adjustedLocalBounds;\n  }\n  /**\r\n   * Returns local coordinates of the element's bounds.\r\n   *\r\n   * @ignore\r\n   * @return Global bounds\r\n   */\n  localBounds() {\n    return this._localBounds;\n  }\n  /**\r\n   * Returns adjusted local coordinates of the element's bounds.\r\n   *\r\n   * @ignore\r\n   * @return Global bounds\r\n   */\n  bounds() {\n    const bounds = this._adjustedLocalBounds;\n    const x = this.x();\n    const y = this.y();\n    return {\n      left: bounds.left + x,\n      right: bounds.right + x,\n      top: bounds.top + y,\n      bottom: bounds.bottom + y\n    };\n  }\n  /**\r\n   * Returns global coordinates of the element's bounds.\r\n   *\r\n   * @ignore\r\n   * @return Global bounds\r\n   */\n  globalBounds() {\n    const bounds = this.localBounds();\n    const p0 = this.toGlobal({\n      x: bounds.left,\n      y: bounds.top\n    });\n    const p1 = this.toGlobal({\n      x: bounds.right,\n      y: bounds.top\n    });\n    const p2 = this.toGlobal({\n      x: bounds.right,\n      y: bounds.bottom\n    });\n    const p3 = this.toGlobal({\n      x: bounds.left,\n      y: bounds.bottom\n    });\n    return {\n      left: Math.min(p0.x, p1.x, p2.x, p3.x),\n      top: Math.min(p0.y, p1.y, p2.y, p3.y),\n      right: Math.max(p0.x, p1.x, p2.x, p3.x),\n      bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n    };\n  }\n  _onShow(_duration) {}\n  _onHide(_duration) {}\n  /**\r\n   * Plays initial reveal animation regardless if element is currently hidden\r\n   * or visible.\r\n   *\r\n   * @param   duration  Duration of the animation in milliseconds\r\n   * @param   delay     Delay showing of the element by X milliseconds\r\n   * @return            Promise\r\n   */\n  appear(duration, delay) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.hide(0);\n      if (delay) {\n        return new Promise((success, _error) => {\n          this.setTimeout(() => {\n            success(this.show(duration));\n          }, delay);\n        });\n      } else {\n        return this.show(duration);\n      }\n    });\n  }\n  /**\r\n   * Shows currently hidden element and returns a `Promise` which completes\r\n   * when all showing animations are finished.\r\n   *\r\n   * ```TypeScript\r\n   * series.show().then(function(ev) {\r\n   *   console.log(\"Series is now fully visible\");\r\n   * })\r\n   * ```\r\n   * ```JavaScript\r\n   * series.show().then(function(ev) {\r\n   *   console.log(\"Series is now fully visible\");\r\n   * })\r\n   * ```\r\n   *\r\n   * @return Promise\r\n   */\n  show(duration) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._isShowing) {\n        this._isHidden = false;\n        this._isShowing = true;\n        this._isHiding = false;\n        if (this.states.lookup(\"default\").get(\"visible\")) {\n          this.set(\"visible\", true);\n        }\n        this._onShow(duration);\n        const animations = this.states.applyAnimate(\"default\", duration);\n        yield waitForAnimations(animations);\n        this._isShowing = false;\n      }\n    });\n  }\n  /**\r\n   * Hides the element and returns a `Promise` which completes when all hiding\r\n   * animations are finished.\r\n   *\r\n   * ```TypeScript\r\n   * series.hide().then(function(ev) {\r\n   *   console.log(\"Series finished hiding\");\r\n   * })\r\n   * ```\r\n   * ```JavaScript\r\n   * series.hide().then(function(ev) {\r\n   *   console.log(\"Series finished hiding\");\r\n   * })\r\n   * ```\r\n   *\r\n   * @return Promise\r\n   */\n  hide(duration) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._isHiding && !this._isHidden) {\n        this._isHiding = true;\n        this._isShowing = false;\n        let state = this.states.lookup(\"hidden\");\n        if (!state) {\n          state = this.states.create(\"hidden\", {\n            \"opacity\": 0,\n            \"visible\": false\n          });\n        }\n        this._isHidden = true;\n        this._onHide(duration);\n        const animations = this.states.applyAnimate(\"hidden\", duration);\n        yield waitForAnimations(animations);\n        this._isHiding = false;\n      }\n    });\n  }\n  /**\r\n   * Returns `true` if this element is currently hidden.\r\n   *\r\n   * @return Is hidden?\r\n   */\n  isHidden() {\n    return this._isHidden;\n  }\n  /**\r\n   * Returns `true` if this element is currently animating to a default state.\r\n   *\r\n   * @return Is showing?\r\n   */\n  isShowing() {\n    return this._isShowing;\n  }\n  /**\r\n   * Returns `true` if this element is currently animating to a hidden state.\r\n   *\r\n   * @return Is hiding?\r\n   */\n  isHiding() {\n    return this._isHiding;\n  }\n  /**\r\n   * Returns `true` if this element is currently hovered by a pointer.\r\n   *\r\n   * @return Is hovered?\r\n   */\n  isHover() {\n    return this._display.hovering();\n  }\n  /**\r\n   * Returns `true` if this element does currently have focus.\r\n   *\r\n   * @return Is focused?\r\n   */\n  isFocus() {\n    return this._root.focused(this);\n  }\n  /**\r\n   * Returns `true` if this element is currently being dragged.\r\n   *\r\n   * @return Is dragged?\r\n   */\n  isDragging() {\n    return this._isDragging;\n  }\n  /**\r\n   * Returns `false` if if either public or private setting `visible` is set\r\n   * to `false`, or `forceHidden` is set to `true`.\r\n   *\r\n   * @return Visible?\r\n   */\n  isVisible() {\n    if (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\n      return true;\n    }\n    return false;\n  }\n  /**\r\n   * Same as `isVisible()`, except it checks all ascendants, too.\r\n   *\r\n   * @since 5.2.7\r\n   * @return Visible?\r\n   */\n  isVisibleDeep() {\n    return this._parent ? this._parent.isVisibleDeep() && this.isVisible() : this.isVisible();\n  }\n  /**\r\n   * Returns an actual opacity of the element, taking into account all parents.\r\n   *\r\n   * @return Opacity\r\n   * @since 5.2.11\r\n   */\n  compositeOpacity() {\n    const opacity = this.get(\"opacity\", 1);\n    return this._parent ? this._parent.compositeOpacity() * opacity : opacity;\n  }\n  /**\r\n   * Returns width of this element in pixels.\r\n   *\r\n   * @return Width (px)\r\n   */\n  width() {\n    let width = this.get(\"width\");\n    let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n    let minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\n    let privateWidth = this.getPrivate(\"width\");\n    let w = 0;\n    if ($type.isNumber(privateWidth)) {\n      w = privateWidth;\n    } else {\n      if (width == null) {\n        if (this._adjustedLocalBounds) {\n          w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\n        }\n      } else {\n        if (width instanceof Percent) {\n          const parent = this.parent;\n          if (parent) {\n            w = parent.innerWidth() * width.value;\n          } else {\n            w = this._root.width() * width.value;\n          }\n        } else if ($type.isNumber(width)) {\n          w = width;\n        }\n      }\n    }\n    if ($type.isNumber(minWidth)) {\n      w = Math.max(minWidth, w);\n    }\n    if ($type.isNumber(maxWidth)) {\n      w = Math.min(maxWidth, w);\n    }\n    return w;\n  }\n  /**\r\n   * Returns maximum allowed width of this element in pixels.\r\n   *\r\n   * @return Maximum width (px)\r\n   */\n  maxWidth() {\n    let maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n    if ($type.isNumber(maxWidth)) {\n      return maxWidth;\n    } else {\n      let width = this.get(\"width\");\n      if ($type.isNumber(width)) {\n        return width;\n      }\n    }\n    const parent = this.parent;\n    if (parent) {\n      return parent.innerWidth();\n    }\n    return this._root.width();\n  }\n  /**\r\n   * Returns maximum allowed height of this element in pixels.\r\n   *\r\n   * @return Maximum height (px)\r\n   */\n  maxHeight() {\n    let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n    if ($type.isNumber(maxHeight)) {\n      return maxHeight;\n    } else {\n      let height = this.get(\"height\");\n      if ($type.isNumber(height)) {\n        return height;\n      }\n    }\n    const parent = this.parent;\n    if (parent) {\n      return parent.innerHeight();\n    }\n    return this._root.height();\n  }\n  /**\r\n   * Returns height of this element in pixels.\r\n   *\r\n   * @return Height (px)\r\n   */\n  height() {\n    let height = this.get(\"height\");\n    let maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n    let minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\n    let privateHeight = this.getPrivate(\"height\");\n    let h = 0;\n    if ($type.isNumber(privateHeight)) {\n      h = privateHeight;\n    } else {\n      if (height == null) {\n        if (this._adjustedLocalBounds) {\n          h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\n        }\n      } else {\n        if (height instanceof Percent) {\n          const parent = this.parent;\n          if (parent) {\n            h = parent.innerHeight() * height.value;\n          } else {\n            h = this._root.height() * height.value;\n          }\n        } else if ($type.isNumber(height)) {\n          h = height;\n        }\n      }\n    }\n    if ($type.isNumber(minHeight)) {\n      h = Math.max(minHeight, h);\n    }\n    if ($type.isNumber(maxHeight)) {\n      h = Math.min(maxHeight, h);\n    }\n    return h;\n  }\n  _findStaticTemplate(f) {\n    // templateField overrides template\n    if (this._templateField && f(this._templateField)) {\n      return this._templateField;\n    }\n    return super._findStaticTemplate(f);\n  }\n  _walkParents(f) {\n    if (this._parent) {\n      this._walkParent(f);\n    }\n  }\n  _walkParent(f) {\n    if (this._parent) {\n      this._parent._walkParent(f);\n    }\n    f(this);\n  }\n  /**\r\n   * Parent [[Container]] of this element.\r\n   *\r\n   * @return Parent container\r\n   */\n  get parent() {\n    return this._parent;\n  }\n  _setParent(parent) {\n    let updateChildren = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const prevParent = this._parent;\n    if (parent !== prevParent) {\n      this.markDirtyBounds();\n      parent.markDirty();\n      this._parent = parent;\n      if (updateChildren) {\n        this._removeParent(prevParent);\n        if (parent) {\n          this._addPercentageSizeChildren();\n          this._addPercentagePositionChildren();\n        }\n      }\n      this.markDirtyPosition();\n      this._applyThemes();\n    }\n  }\n  /**\r\n   * Returns an instance of [[NumberFormatter]] used in this element.\r\n   *\r\n   * If this element does not have it set, global one form [[Root]] is used.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n   * @return NumberFormatter instace\r\n   */\n  getNumberFormatter() {\n    return this.get(\"numberFormatter\", this._root.numberFormatter);\n  }\n  /**\r\n   * Returns an instance of [[DateFormatter]] used in this element.\r\n   *\r\n   * If this element does not have it set, global one form [[Root]] is used.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n   * @return DateFormatter instace\r\n   */\n  getDateFormatter() {\n    return this.get(\"dateFormatter\", this._root.dateFormatter);\n  }\n  /**\r\n   * Returns an instance of [[DurationFormatter]] used in this element.\r\n   *\r\n   * If this element does not have it set, global one form [[Root]] is used.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n   * @return DurationFormatter instace\r\n   */\n  getDurationFormatter() {\n    return this.get(\"durationFormatter\", this._root.durationFormatter);\n  }\n  /**\r\n   * Converts X/Y coordinate within this element to a global coordinate.\r\n   *\r\n   * @param  point  Local coordinate\r\n   * @return        Global coordinate\r\n   */\n  toGlobal(point) {\n    return this._display.toGlobal(point);\n  }\n  /**\r\n   * Converts global X/Y coordinate to a coordinate within this element.\r\n   *\r\n   * @param  point  Global coordinate\r\n   * @return        Local coordinate\r\n   */\n  toLocal(point) {\n    return this._display.toLocal(point);\n  }\n  _getDownPoint() {\n    const id = this._getDownPointId();\n    if (id) {\n      return this._downPoints[id];\n    }\n  }\n  _getDownPointId() {\n    if (this._downPoints) {\n      return $object.keysOrdered(this._downPoints, (a, b) => {\n        if (a > b) {\n          return 1;\n        }\n        if (a < b) {\n          return -1;\n        }\n        return 0;\n      })[0];\n    }\n  }\n  /**\r\n   * Moves sprite to the end of the parent's children array.\r\n   *\r\n   * Depending on `layout` setting of the parten container, it may effect the\r\n   * positioning or overlapping order of the elements.\r\n   */\n  toFront() {\n    const parent = this.parent;\n    if (parent) {\n      parent.children.moveValue(this, parent.children.length - 1);\n    }\n  }\n  /**\r\n   * Moves sprite to the beginning of the parent's children array.\r\n   *\r\n   * Depending on `layout` setting of the parten container, it may effect the\r\n   * positioning or overlapping order of the elements.\r\n   */\n  toBack() {\n    const parent = this.parent;\n    if (parent) {\n      parent.children.moveValue(this, 0);\n    }\n  }\n}\nObject.defineProperty(Sprite, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Sprite\"\n});\nObject.defineProperty(Sprite, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Entity.classNames.concat([Sprite.className])\n});","map":{"version":3,"names":["Entity","Template","Percent","EventDispatcher","MultiDisposer","CounterDisposer","waitForAnimations","$utils","$array","$type","$object","$math","SpriteEventDispatcher","constructor","sprite","Object","defineProperty","_sprite","_makePointerEvent","key","event","type","originalEvent","point","simulated","native","target","_onRenderer","dispatch","set","_display","interactive","events","_rendererDisposers","undefined","disposer","on","e","call","dispose","increment","_on","once","callback","context","shouldClone","info","rendererEvent","RENDERER_EVENTS","stopParentDispatch","_dispatchParents","dispatchParents","old","parent","click","isEnabled","isDragging","_hasDown","_hasMoved","rightclick","middleclick","dblclick","pointerover","pointerout","pointerdown","pointerup","globalpointerup","globalpointermove","wheel","Sprite","left","right","top","bottom","_afterNew","setPrivateRaw","_markDirtyKey","markDirtyBounds","_addPercentagePositionChildren","markDirtyPosition","_markDirtyPrivateKey","_removeTemplateField","_templateField","_removeObjectTemplate","_createEvents","_processTemplateField","template","field","get","dataItem","dataContext","new","_setObjectTemplate","_applyTemplates","_setDataItem","oldDataItem","_dataItem","eventType","newDataItem","value","_parent","_addPercentageSizeChildren","pushOne","_percentageSizeChildren","removeFirst","_percentagePositionChildren","_root","_addDirtyPosition","updatePivotPoint","bounds","_localBounds","centerX","pivot","x","relativeToValue","centerY","y","_beforeChanged","_handleStates","isDirty","previous","_prevSettings","tooltip","setLayer","markDirtyLayer","tooltipMoveDp","_tooltipMoveDp","tooltipPointerDp","_tooltipPointerDp","showTooltip","_statesHandled","states","applyAnimate","isHidden","markDirtyAccessibility","_changed","display","draggable","_dragDp","ev","dragStart","dragMove","dragStop","cancelTouch","tooltipText","tooltipHTML","showTooltipOn","_tooltipDp","setTimeout","addEventListener","document","_ev","hideTooltip","toggleKey","_toggleDp","_isDragging","alpha","Math","max","angle","scale","isPrivateDirty","getPrivate","visible","markDirty","_prevWidth","_sizeDirty","_updateSize","wheelable","_registerTabindexOrder","_unregisterTabindexOrder","filter","cursorOverStyle","_focusDp","exportable","_hoverDp","isTouchEvent","_handleOver","_handleOut","_isDown","_handleUp","_handleDown","inactive","_dragEvent","_dragPoint","lookup","isHover","_downPoint","pointerId","getPointerId","_downPoints","keys","length","downPoint","abs","dragEvent","dragPoint","cos","sin","hypot","_getBounds","getLocalBounds","depth","self","markDirtySize","_addDirtyBounds","isMeasured","invalidateBounds","isFocus","_invalidateAccessibility","_updateBounds","oldBounds","_adjustedLocalBounds","newBounds","_fixMinBounds","getAdjustedBounds","minWidth","minHeight","isNumber","privateWidth","privateHeight","_removeParent","children","removeValue","_clearDirty","hover","unhover","getTooltip","tooltipPosition","tooltipTarget","_setMatrix","toGlobal","_getTooltipPoint","label","width","height","text","markDirtyText","promise","show","timeout","hide","_updatePosition","dx","dy","_x","xx","yy","position","innerWidth","_y","innerHeight","_dispose","_removeFocusElement","adjustedLocalBounds","localBounds","globalBounds","p0","p1","p2","p3","min","_onShow","_duration","_onHide","appear","duration","delay","Promise","success","_error","_isShowing","_isHidden","_isHiding","animations","state","create","isShowing","isHiding","hovering","focused","isVisible","isVisibleDeep","compositeOpacity","opacity","maxWidth","w","maxHeight","h","_findStaticTemplate","f","_walkParents","_walkParent","_setParent","updateChildren","arguments","prevParent","_applyThemes","getNumberFormatter","numberFormatter","getDateFormatter","dateFormatter","getDurationFormatter","durationFormatter","toLocal","_getDownPoint","id","_getDownPointId","keysOrdered","a","b","toFront","moveValue","toBack","classNames","concat","className"],"sources":["C:\\Users\\Rizki\\binar-course\\cms-binar-platinum\\node_modules\\src\\.internal\\core\\render\\Sprite.ts"],"sourcesContent":["import type { IDisplayObject, IRendererEvents, IRendererEvent, IPointerEvent, IMargin } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { Container } from \"./Container\";\nimport type { IAccessibilitySettings } from \"../util/Accessibility\";\nimport type { NumberFormatter } from \"../util/NumberFormatter\";\nimport type { DateFormatter } from \"../util/DateFormatter\";\nimport type { DurationFormatter } from \"../util/DurationFormatter\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\nimport type { Graphics } from \"./Graphics\";\nimport type { IPoint } from \"../util/IPoint\";\nimport type { ListTemplate } from \"../util/List\";\n\nimport type { Tooltip } from \"./Tooltip\";\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../util/Entity\";\nimport { Template } from \"../util/Template\";\nimport { Percent } from \"../util/Percent\";\nimport { EventDispatcher, Events, EventListener } from \"../util/EventDispatcher\";\nimport { IDisposer, MultiDisposer, CounterDisposer } from \"../util/Disposer\";\nimport { waitForAnimations } from \"../util/Animation\";\n\nimport * as $utils from \"../util/Utils\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $object from \"../util/Object\";\nimport * as $math from \"../util/Math\";\n//import { populateString } from \"../util/PopulateString\";\n\n\n/**\n * An [[EventDispatcher]] for [[Sprite]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\n */\nclass SpriteEventDispatcher<Target, E extends Events<Target, ISpriteEvents>> extends EventDispatcher<E> {\n\tprotected static RENDERER_EVENTS: { [K in keyof IRendererEvents]?: <E extends Events<Sprite, ISpriteEvents>>(this: SpriteEventDispatcher<Sprite, E>, event: IRendererEvents[K]) => void } = {\n\t\t\"click\": function(event) {\n\t\t\tif (this.isEnabled(\"click\") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\n\t\t\t\tthis.dispatch(\"click\", this._makePointerEvent(\"click\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"rightclick\": function(event) {\n\t\t\tif (this.isEnabled(\"rightclick\")) {\n\t\t\t\tthis.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"middleclick\": function(event) {\n\t\t\tif (this.isEnabled(\"middleclick\")) {\n\t\t\t\tthis.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"dblclick\": function(event) {\n\t\t\tthis.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\n\t\t},\n\n\t\t\"pointerover\": function(event) {\n\t\t\tif (this.isEnabled(\"pointerover\")) {\n\t\t\t\tthis.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"pointerout\": function(event) {\n\t\t\tif (this.isEnabled(\"pointerout\")) {\n\t\t\t\tthis.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"pointerdown\": function(event) {\n\t\t\tthis.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\n\t\t},\n\n\t\t\"pointerup\": function(event) {\n\t\t\tif (this.isEnabled(\"pointerup\")) {\n\t\t\t\tthis.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"globalpointerup\": function(event) {\n\t\t\tif (this.isEnabled(\"globalpointerup\")) {\n\t\t\t\tthis.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"globalpointermove\": function(event) {\n\t\t\tif (this.isEnabled(\"globalpointermove\")) {\n\t\t\t\tthis.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"wheel\": function(event) {\n\t\t\tthis.dispatchParents(\"wheel\", {\n\t\t\t\ttype: \"wheel\",\n\t\t\t\ttarget: this._sprite,\n\t\t\t\toriginalEvent: event.event,\n\t\t\t\tpoint: event.point,\n\t\t\t});\n\t\t},\n\t};\n\n\tprotected _sprite: Sprite;\n\n\tprotected _rendererDisposers: { [K in keyof IRendererEvents]?: CounterDisposer } = {};\n\n\tprotected _dispatchParents: boolean = true;\n\n\tconstructor(sprite: Sprite) {\n\t\tsuper();\n\t\tthis._sprite = sprite;\n\t}\n\n\tprotected _makePointerEvent<K extends keyof E>(key: K, event: IRendererEvent<IPointerEvent>): ISpritePointerEvent & { type: K } {\n\t\treturn {\n\t\t\ttype: key,\n\t\t\toriginalEvent: event.event,\n\t\t\tpoint: event.point,\n\t\t\tsimulated: event.simulated,\n\t\t\tnative: event.native,\n\t\t\ttarget: this._sprite\n\t\t};\n\t}\n\n\tprotected _onRenderer<Key extends keyof IRendererEvents>(key: Key, dispatch: (this: this, event: IRendererEvents[Key]) => void): IDisposer {\n\t\t// TODO: is this OK? it'd be good not to require to set this on each individual element\n\t\tthis._sprite.set(\"interactive\", true);\n\t\tthis._sprite._display.interactive = true;\n\n\t\tlet events = this._rendererDisposers[key];\n\n\t\tif (events === undefined) {\n\t\t\tconst disposer = this._sprite._display.on(key, (e) => {\n\t\t\t\tdispatch.call(this, e);\n\t\t\t});\n\n\t\t\tevents = this._rendererDisposers[key] = new CounterDisposer(() => {\n\t\t\t\tdelete this._rendererDisposers[key];\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn events.increment();\n\t}\n\n\tprotected _on<C, Key extends keyof E>(once: boolean, type: Key | null, callback: any, context: C, shouldClone: boolean, dispatch: (type: Key, event: E[Key]) => void): EventListener {\n\t\tconst info = super._on(once, type, callback, context, shouldClone, dispatch);\n\n\t\tconst rendererEvent = (SpriteEventDispatcher.RENDERER_EVENTS as any)[type];\n\t\tif (rendererEvent !== undefined) {\n\t\t\tinfo.disposer = new MultiDisposer([\n\t\t\t\tinfo.disposer,\n\t\t\t\tthis._onRenderer(type as any, rendererEvent),\n\t\t\t]);\n\t\t}\n\n\t\treturn info;\n\t}\n\n\t/**\n\t * Will stop any bubbling up of the event to element's parents.\n\t *\n\t * Should be called in an event handler, e.g.:\n\t *\n\t * ```TypeScript\n\t * element.events.on(\"pointerdown\", function(ev) {\n\t *   // Do something here and prevent from \"pointerdown\" bubbling up\n\t *   // ...\n\t *   ev.target.events.stopParentDispatch();\n\t * });\n\t * ```\n\t * ```JavaScript\n\t * element.events.on(\"pointerdown\", function(ev) {\n\t *   // Do something here and prevent from \"pointerdown\" bubbling up\n\t *   // ...\n\t *   ev.target.events.stopParentDispatch();\n\t * });\n\t * ```\n\t */\n\tpublic stopParentDispatch() {\n\t\tthis._dispatchParents = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dispatchParents<Key extends keyof E>(type: Key, event: E[Key]): void {\n\t\tconst old = this._dispatchParents;\n\n\t\tthis._dispatchParents = true;\n\n\t\ttry {\n\t\t\tthis.dispatch(type, event);\n\n\t\t\tif (this._dispatchParents && this._sprite.parent) {\n\t\t\t\tthis._sprite.parent.events.dispatchParents(type as any, event);\n\t\t\t}\n\n\t\t} finally {\n\t\t\tthis._dispatchParents = old;\n\t\t}\n\t}\n}\n\n\nexport interface ISpriteSettings extends IEntitySettings, IAccessibilitySettings {\n\n\t/**\n\t * X position relative to parent.\n\t */\n\tx?: number | Percent | null;\n\n\t/**\n\t * Y position relative to parent.\n\t */\n\ty?: number | Percent | null;\n\n\t/**\n\t * Element's absolute width in pixels (numeric value) or relative width to\n\t * parent ([[Percent]]);\n\t */\n\twidth?: number | Percent | null;\n\n\t/**\n\t * Element's absolute height in pixels (numeric value) or relative height to\n\t * parent ([[Percent]]);\n\t */\n\theight?: number | Percent | null;\n\n\t/**\n\t * Maximum allowed width in pixels.\n\t */\n\tmaxWidth?: number | null;\n\n\t/**\n\t * Maximum allowed height in pixels.\n\t */\n\tmaxHeight?: number | null;\n\n\t/**\n\t * Minimum allowed width in pixels.\n\t */\n\tminWidth?: number | null;\n\n\t/**\n\t * Minimum allowed height in pixels.\n\t */\n\tminHeight?: number | null;\n\n\t/**\n\t * Opacity. 0 - fully transparent; 1 - fully opaque.\n\t */\n\topacity?: number;\n\n\t/**\n\t * Rotation in degrees.\n\t */\n\trotation?: number;\n\n\t/**\n\t * Scale.\n\t *\n\t * Setting to a value less than 1 will shrink object.\n\t */\n\tscale?: number;\n\n\t/**\n\t * X coordinate of the center of the element relative to itself.\n\t *\n\t * Center coordinates will affect placement as well as rotation pivot point.\n\t */\n\tcenterX?: number | Percent;\n\n\t/**\n\t * Y coordinate of the center of the element relative to itself.\n\t *\n\t * Center coordinates will affect placement as well as rotation pivot point.\n\t */\n\tcenterY?: number | Percent;\n\n\t/**\n\t * Left margin in pixels.\n\t */\n\tmarginLeft?: number;\n\n\t/**\n\t * Right margin in pixels.\n\t */\n\tmarginRight?: number;\n\n\t/**\n\t * Top margin in pixels.\n\t */\n\tmarginTop?: number;\n\n\t/**\n\t * Bottom margin in pixels.\n\t */\n\tmarginBottom?: number;\n\n\t/**\n\t * Is element visible?\n\t */\n\tvisible?: boolean;\n\n\t/**\n\t * Positioning of the element.\n\t *\n\t * `\"absolute\"` means element will not participate in parent layout scheme,\n\t * and will be positioned solely accoridng its `x` and `y` settings.\n\t */\n\tposition?: \"absolute\" | \"relative\";\n\n\t/**\n\t * Horizontal shift in pixels. Can be negative to shift leftward.\n\t */\n\tdx?: number;\n\n\t/**\n\t * Vertical shift in pixels. Can be negative to shift upward.\n\t */\n\tdy?: number;\n\n\t/**\n\t * Should this element accept user interaction events?\n\t */\n\tinteractive?: boolean;\n\n\t/**\n\t * Text to show in a tooltip when hovered.\n\t */\n\ttooltipText?: string;\n\n\t/**\n\t * HTML content to show in a tooltip when hovered.\n\t *\n\t * @since 5.2.11\n\t */\n\ttooltipHTML?: string;\n\n\t/**\n\t * Tooltip pointer X coordinate relative to the element itself.\n\t */\n\ttooltipX?: number | Percent;\n\n\t/**\n\t * Tooltip pointer Y coordinate relative to the element itself.\n\t */\n\ttooltipY?: number | Percent;\n\n\t/**\n\t * [[Tooltip]] instance.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * Tooltip position.\n\t */\n\ttooltipPosition?: \"fixed\" | \"pointer\";\n\n\t/**\n\t * If set to `false` element will not be measured and cannot participate in\n\t * layout schemes.\n\t */\n\tisMeasured?: boolean;\n\n\t/**\n\t * Allows binding element's settings to data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/template-fields/} for more info\n\t */\n\ttemplateField?: string;\n\n\t/**\n\t * If set to `true`, user will be able to drag this element. It will also\n\t * disable default drag events over the area of this element.\n\t */\n\tdraggable?: boolean;\n\n\t/**\n\t * If set to `true`, mouse wheel events will be triggered over the element. It\n\t * will also disable page scrolling using mouse wheel when pointer is over\n\t * the element.\n\t */\n\twheelable?: boolean;\n\n\t/**\n\t * An instance of [[NumberFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tnumberFormatter?: NumberFormatter | undefined;\n\n\t/**\n\t * An instance of [[DateFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tdateFormatter?: DateFormatter | undefined;\n\n\t/**\n\t * An instance of [[DurationFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tdurationFormatter?: DurationFormatter | undefined;\n\n\t/**\n\t * If set, element will toggle specified boolean setting between `true` and\n\t * `false` when clicked/touched.\n\t */\n\ttoggleKey?: \"disabled\" | \"active\" | \"none\" | undefined;\n\n\t/**\n\t * Indicates if element is currently active.\n\t */\n\tactive?: boolean;\n\n\t/**\n\t * Indicates if element is disabled.\n\t */\n\tdisabled?: boolean;\n\n\t/**\n\t * An SVG filter to apply to the element.\n\t *\n\t * IMPORTANT: SVG filters are not supported in some browsers, e.g. Safari.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter} for more info\n\t * @ignore todo: figure out if we still need this\n\t */\n\tfilter?: string;\n\n\t/**\n\t * A named mouse cursor style to show when hovering this element.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor} for more info\n\t */\n\tcursorOverStyle?: string;\n\n\t/**\n\t * If set to `false` this element will not appear in exported snapshots of\n\t * the chart.\n\t */\n\texportable?: boolean;\n\n\t/**\n\t * Numeric layer to put element in.\n\t *\n\t * Elements with higher number will appear in front of the ones with lower\n\t * numer.\n\t *\n\t * If not set, will inherit layer from its ascendants.\n\t */\n\tlayer?: number;\n\n\t/**\n\t * Margins for the layer.\n\t *\n\t * Can be used to make the layer larger/or smaller than default chart size.\n\t *\n\t * @since @5.2.39\n\t */\n\tlayerMargin?: IMargin;\n\n\t/**\n\t * If set to `true` the element will be hidden regardless of `visible` or\n\t * even if `show()` is called.\n\t */\n\tforceHidden?: boolean;\n\n\t/**\n\t * If set to `true` the element will be inactive - absolutely oblivious\n\t * to all interactions, even if there are related events set, or\n\t * the `interactive: true` is set.\n\t *\n\t * @since 5.0.21\n\t */\n\tforceInactive?: boolean;\n\n\t/**\n\t * Defines when tooltip is shown over the element.\n\t *\n\t * Available options:\n\t * * `\"hover\"` (default) - tooltip is shown when element is hovered by a pointer or touched. It is hidden as soon as element is not hovered anymore, or touch occurs outside it.\n\t * * `\"always\"` - a tooltip will always be shown over the element, without any interactions. Please note that if you need to show tooltips for multiple elements at the same time, you need to explicitly create a `Tooltip` instance and set element's `tooltip` setting with it.\n\t * * '\"click\"' - a tooltip will only appear when target element is clicked/tapped. Tooltip will hide when clicking anywhere else on the page.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Sticky_tooltips} for more info\n\t * @default \"hover\"\n\t * @since 5.0.16\n\t */\n\tshowTooltipOn?: \"hover\" | \"always\" | \"click\";\n\n\t/**\n\t * If set to `true`, an element will try to draw itself in such way, that it\n\t * looks crisp on screen, with minimal anti-aliasing.\n\t *\n\t * It will round x/y position so it is positioned fine \"on pixel\".\n\t *\n\t * It will also adjust `strokeWidth` based on device pixel ratio or zoom,\n\t * so the line might look thinner than expected.\n\t *\n\t * NOTE: this is might not universally work, especially when set on several\n\t * objects that are supposed to fit perfectly with each other.\n\t *\n\t * @default false\n\t * @since 5.3.0\n\t */\n\tcrisp?: boolean;\n\n}\n\nexport interface ISpritePrivate extends IEntityPrivate {\n\t/**\n\t * @ignore\n\t */\n\tcustomData?: any;\n\n\t/**\n\t * @ignore\n\t */\n\tx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\ty?: number;\n\n\t/**\n\t * @ignore\n\t */\n\twidth?: number;\n\n\t/**\n\t * @ignore\n\t */\n\theight?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvisible?: boolean;\n\n\t/**\n\t * Is element currently showing a tooltip?\n\t */\n\tshowingTooltip?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\ttouchHovering?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tfocusElement?: {\n\t\tdom: HTMLDivElement,\n\t\tdisposers: Array<IDisposer>,\n\t};\n\n\t/**\n\t * An element tooltip should inherit its colors from.\n\t */\n\ttooltipTarget?: Graphics;\n\n\t/**\n\t * @ignore\n\t */\n\tlist?: ListTemplate<Sprite>;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxWidth?: number | null;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxHeight?: number | null;\n\n\t/**\n\t * @ignore\n\t */\n\tminWidth?: number | null;\n\n\t/**\n\t * @ignore\n\t */\n\tminHeight?: number | null;\n}\n\n/**\n * An interface defining event objects that originate from pinter interactions.\n */\nexport interface ISpritePointerEvent {\n\n\t/**\n\t * Original event object that caused the interaction, e.g. [[MouseEvent]].\n\t */\n\toriginalEvent: IPointerEvent;\n\n\t/**\n\t * A point where event originated.\n\t */\n\tpoint: IPoint;\n\n\t/**\n\t * Is it a simulated event, e.g. if the event was generated by code rather\n\t * then actual user interaction.\n\t */\n\tsimulated: boolean;\n\n\t/**\n\t * Whether event originated in chart's container or its children.\n\t */\n\tnative?: boolean;\n\n\t/**\n\t * The element on which the event occurred.\n\t */\n\ttarget: Sprite;\n\n}\n\nexport interface ISpriteEvents extends IEntityEvents {\n\n\t/**\n\t * Invoked when element's data item changes.\n\t */\n\tdataitemchanged: {\n\t\toldDataItem: DataItem<IComponentDataItem> | undefined,\n\t\tnewDataItem: DataItem<IComponentDataItem> | undefined\n\t};\n\n\t/**\n\t * Invoked when element's position (X/Y) changes.\n\t */\n\tpositionchanged: {};\n\n\t/**\n\t * Invoked when element's bounds change due to any manipulation to it.\n\t */\n\tboundschanged: {};\n\n\t/**\n\t * Invoked when element dragging starts.\n\t */\n\tdragstart: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element dragging stops.\n\t */\n\tdragstop: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element ois being dragged.\n\t */\n\tdragged: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked or tapped.\n\t */\n\tclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked width the right mouse button.\n\t */\n\trightclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked with the middle mouse button.\n\t */\n\tmiddleclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is doubleclicked or tapped twice quickly.\n\t */\n\tdblclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer moves over the element.\n\t */\n\tpointerover: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer moves outside the element.\n\t */\n\tpointerout: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is pressed or touch starts over the element.\n\t */\n\tpointerdown: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is released or touch stops over the element.\n\t */\n\tpointerup: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is released or touch stops in the window, even\n\t * outside of the element or even chart area.\n\t */\n\tglobalpointerup: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer is moving anywhere in the window, even outside of the\n\t * element or even chart area.\n\t */\n\tglobalpointermove: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when mouse wheel is spinned while pointer is over the element.\n\t */\n\twheel: {\n\t\toriginalEvent: WheelEvent;\n\t\tpoint: IPoint;\n\t};\n\n\t/**\n\t * Invoked when element gains focus.\n\t */\n\tfocus: {\n\t\toriginalEvent: FocusEvent;\n\t\ttarget: Sprite;\n\t};\n\n\t/**\n\t * Invoked when element loses focus.\n\t */\n\tblur: {\n\t\toriginalEvent: FocusEvent;\n\t\ttarget: Sprite;\n\t};\n\n}\n\n/**\n * A base class for all visual elements.\n *\n * @important\n */\nexport abstract class Sprite extends Entity {\n\tdeclare public _settings: ISpriteSettings;\n\tdeclare public _privateSettings: ISpritePrivate;\n\tdeclare public _events: ISpriteEvents;\n\n\tdeclare public events: SpriteEventDispatcher<this, Events<this, this[\"_events\"]>>;\n\n\tpublic abstract _display: IDisplayObject;\n\n\tpublic _adjustedLocalBounds: IBounds = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tprotected _localBounds: IBounds = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tpublic static className: string = \"Sprite\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Sprite.className]);\n\n\tpublic _parent: Container | undefined;\n\tprotected _dataItem: DataItem<IComponentDataItem> | undefined;\n\n\tprotected _templateField: Template<this> | undefined;\n\n\tprotected _sizeDirty: boolean = false;\n\n\t// Will be true only when dragging\n\tprotected _isDragging: boolean = false;\n\n\t// The event when the dragging starts\n\tprotected _dragEvent: ISpritePointerEvent | undefined;\n\n\t// The position when dragging starts\n\tprotected _dragPoint: IPoint | undefined;\n\n\tprotected _isHidden: boolean = false;\n\n\tprotected _isShowing: boolean = false;\n\n\tprotected _isHiding: boolean = false;\n\n\tprotected _isDown: boolean = false;\n\tpublic _downPoint: IPoint | undefined;\n\n\tpublic _downPoints: { [index: number]: IPoint } = {};\n\n\tpublic _toggleDp: IDisposer | undefined;\n\n\tprotected _dragDp: MultiDisposer | undefined;\n\n\tprotected _tooltipDp: MultiDisposer | undefined;\n\n\tprotected _hoverDp: MultiDisposer | undefined;\n\n\tprotected _focusDp: MultiDisposer | undefined;\n\n\tprotected _tooltipMoveDp: IDisposer | undefined;\n\n\tprotected _tooltipPointerDp: MultiDisposer | undefined;\n\n\tprotected _statesHandled: boolean = false;\n\n\tprotected _afterNew() {\n\t\tthis.setPrivateRaw(\"visible\", true);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tsuper._markDirtyKey(key);\n\t\tif (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._addPercentagePositionChildren();\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tsuper._markDirtyPrivateKey(key);\n\t\tif (key == \"x\" || key == \"y\") {\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n\n\tprotected _removeTemplateField(): void {\n\t\tif (this._templateField) {\n\t\t\tthis._templateField._removeObjectTemplate(this);\n\t\t}\n\t}\n\n\tprotected _createEvents(): SpriteEventDispatcher<this, Events<this, this[\"_events\"]>> {\n\t\treturn new SpriteEventDispatcher(this);\n\t}\n\n\tpublic _processTemplateField(): void {\n\t\tlet template;\n\n\t\tconst field = this.get(\"templateField\");\n\n\t\tif (field) {\n\t\t\tconst dataItem = this.dataItem;\n\t\t\tif (dataItem) {\n\t\t\t\tconst context = dataItem.dataContext;\n\t\t\t\tif (context) {\n\t\t\t\t\ttemplate = (context as any)[field];\n\n\t\t\t\t\tif (!(template instanceof Template) && template) {\n\t\t\t\t\t\ttemplate = Template.new(template);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._templateField !== template) {\n\t\t\tthis._removeTemplateField();\n\n\t\t\tthis._templateField = template;\n\n\t\t\tif (template) {\n\t\t\t\ttemplate._setObjectTemplate(this);\n\t\t\t}\n\n\t\t\tthis._applyTemplates();\n\t\t}\n\t}\n\n\t// TODO change this to run before the element is added to the parent, so that way\n\t//      it doesn't need to apply the themes twice\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tconst oldDataItem = this._dataItem\n\t\tthis._dataItem = dataItem;\n\t\tthis._processTemplateField();\n\t\tconst eventType = \"dataitemchanged\";\n\t\tif (dataItem != oldDataItem) {\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, {\n\t\t\t\t\ttype: eventType,\n\t\t\t\t\ttarget: this,\n\t\t\t\t\toldDataItem: oldDataItem,\n\t\t\t\t\tnewDataItem: dataItem\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A [[DataItem]] used for this element.\n\t *\n\t * NOTE: data item is being assigned automatically in most cases where it\n\t * matters. Use this accessor to set data item only if you know what you're\n\t * doing.\n\t *\n\t * @param  value  Data item\n\t */\n\tpublic set dataItem(value: DataItem<IComponentDataItem> | undefined) {\n\t\tthis._setDataItem(value);\n\t}\n\n\t/**\n\t * @return DataItem\n\t */\n\tpublic get dataItem(): DataItem<IComponentDataItem> | undefined {\n\t\tif (this._dataItem) {\n\t\t\treturn this._dataItem;\n\n\t\t} else {\n\t\t\tlet parent = this._parent;\n\n\t\t\twhile (parent) {\n\t\t\t\tif (parent._dataItem) {\n\t\t\t\t\treturn parent._dataItem;\n\n\t\t\t\t} else {\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _addPercentageSizeChildren() {\n\t\tlet parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\n\t\t\t\t$array.pushOne(parent._percentageSizeChildren, this);\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(parent._percentageSizeChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _addPercentagePositionChildren() {\n\t\tlet parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\n\t\t\t\t$array.pushOne(parent._percentagePositionChildren, this);\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(parent._percentagePositionChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyPosition() {\n\t\tthis._root._addDirtyPosition(this);\n\t}\n\n\tprotected updatePivotPoint() {\n\t\tconst bounds = this._localBounds;\n\t\tif (bounds) {\n\t\t\tconst centerX = this.get(\"centerX\");\n\t\t\tif (centerX != null) {\n\t\t\t\tthis._display.pivot.x = bounds.left + $utils.relativeToValue(centerX!, bounds.right - bounds.left);\n\t\t\t}\n\n\t\t\tconst centerY = this.get(\"centerY\");\n\t\t\tif (centerY != null) {\n\t\t\t\tthis._display.pivot.y = bounds.top + $utils.relativeToValue(centerY!, bounds.bottom - bounds.top);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\t// handling states in beforeChanged, otherwise states is not applied without animated theme\n\t\tthis._handleStates();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst previous = this._prevSettings.tooltip;\n\t\t\tif (previous) {\n\t\t\t\tprevious.dispose();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"layer\") || this.isDirty(\"layerMargin\")) {\n\t\t\tthis._display.setLayer(this.get(\"layer\"), this.get(\"layerMargin\"));\n\t\t\tthis.markDirtyLayer();\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipPosition\")) {\n\t\t\tconst tooltipMoveDp = this._tooltipMoveDp;\n\t\t\tif (tooltipMoveDp) {\n\t\t\t\ttooltipMoveDp.dispose();\n\t\t\t\tthis._tooltipMoveDp = undefined;\n\t\t\t}\n\n\t\t\tconst tooltipPointerDp = this._tooltipPointerDp;\n\t\t\tif (tooltipPointerDp) {\n\t\t\t\ttooltipPointerDp.dispose();\n\t\t\t\tthis._tooltipPointerDp = undefined;\n\t\t\t}\n\n\t\t\tif (this.get(\"tooltipPosition\") == \"pointer\") {\n\t\t\t\tthis._tooltipPointerDp = new MultiDisposer([\n\t\t\t\t\tthis.events.on(\"pointerover\", () => {\n\t\t\t\t\t\tthis._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\n\t\t\t\t\t\t\tthis.showTooltip(e.point);\n\t\t\t\t\t\t})\n\t\t\t\t\t}),\n\n\t\t\t\t\tthis.events.on(\"pointerout\", () => {\n\t\t\t\t\t\tconst tooltipMoveDp = this._tooltipMoveDp;\n\t\t\t\t\t\tif (tooltipMoveDp) {\n\t\t\t\t\t\t\ttooltipMoveDp.dispose();\n\t\t\t\t\t\t\tthis._tooltipMoveDp = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t})])\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleStates() {\n\t\tif (!this._statesHandled) {\n\t\t\tif (this.isDirty(\"active\")) {\n\t\t\t\tif (this.get(\"active\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t\t\tthis.set(\"ariaChecked\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!this.isHidden()) {\n\t\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.set(\"ariaChecked\", false);\n\t\t\t\t}\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"disabled\")) {\n\t\t\t\tif (this.get(\"disabled\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t\t\tthis.set(\"ariaChecked\", false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!this.isHidden()) {\n\t\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.set(\"ariaChecked\", true);\n\t\t\t\t}\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t\tthis._statesHandled = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst display = this._display;\n\t\tconst events = this.events;\n\n\t\tif (this.isDirty(\"draggable\")) {\n\t\t\tconst draggable = this.get(\"draggable\");\n\t\t\tif (draggable) {\n\t\t\t\tthis.set(\"interactive\", true);\n\n\t\t\t\tthis._dragDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"pointerdown\", (ev) => {\n\t\t\t\t\t\tthis.dragStart(ev);\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointermove\", (ev) => {\n\t\t\t\t\t\tthis.dragMove(ev);\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointerup\", (ev) => {\n\t\t\t\t\t\tthis.dragStop(ev);\n\t\t\t\t\t})])\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._dragDp) {\n\t\t\t\t\tthis._dragDp.dispose();\n\t\t\t\t\tthis._dragDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdisplay.cancelTouch = draggable ? true : false;\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipText\") || this.isDirty(\"tooltipHTML\") || this.isDirty(\"showTooltipOn\")) {\n\t\t\tconst tooltipText = this.get(\"tooltipText\");\n\t\t\tconst tooltipHTML = this.get(\"tooltipHTML\");\n\t\t\tconst showTooltipOn = this.get(\"showTooltipOn\", \"hover\");\n\t\t\tif (this._tooltipDp) {\n\t\t\t\tthis._tooltipDp.dispose();\n\t\t\t\tthis._tooltipDp = undefined;\n\t\t\t}\n\t\t\tif (tooltipText || tooltipHTML) {\n\t\t\t\tif (showTooltipOn == \"click\") {\n\t\t\t\t\tthis._tooltipDp = new MultiDisposer([\n\t\t\t\t\t\tevents.on(\"click\", () => {\n\t\t\t\t\t\t\tthis.setTimeout(() => this.showTooltip(), 10);\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t$utils.addEventListener(document, \"click\", (_ev: MouseEvent) => {\n\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t})\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t\telse if (showTooltipOn == \"always\") {\n\t\t\t\t\t// nothing\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._tooltipDp = new MultiDisposer([\n\t\t\t\t\t\tevents.on(\"pointerover\", () => {\n\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tevents.on(\"pointerout\", () => {\n\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t})\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"toggleKey\")) {\n\t\t\tlet toggleKey = this.get(\"toggleKey\") as any;\n\t\t\tif (toggleKey && toggleKey != \"none\") {\n\t\t\t\tthis._toggleDp = events.on(\"click\", () => {\n\t\t\t\t\tif (!this._isDragging) {\n\t\t\t\t\t\tthis.set(toggleKey, !this.get(toggleKey));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._toggleDp) {\n\t\t\t\t\tthis._toggleDp.dispose();\n\t\t\t\t\tthis._toggleDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (this.isDirty(\"opacity\")) {\n\t\t\tdisplay.alpha = Math.max(0, this.get(\"opacity\", 1));\n\t\t}\n\n\t\tif (this.isDirty(\"rotation\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tdisplay.angle = this.get(\"rotation\", 0);\n\t\t}\n\n\t\tif (this.isDirty(\"scale\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tdisplay.scale = this.get(\"scale\", 0);\n\t\t}\n\n\t\tif (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.updatePivotPoint();\n\t\t}\n\n\t\tif (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\n\t\t\tif (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n\t\t\t\tdisplay.visible = false;\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.visible = true;\n\t\t\t}\n\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._addPercentageSizeChildren();\n\n\t\t\tconst parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\tif ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\n\t\t\t\t\tparent.markDirty();\n\t\t\t\t\tparent._prevWidth = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._sizeDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"minWidth\") || this.isDirty(\"minHeight\") || this.isPrivateDirty(\"maxWidth\") || this.isPrivateDirty(\"maxHeight\") || this.isPrivateDirty(\"minWidth\") || this.isPrivateDirty(\"minHeight\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._sizeDirty = true;\n\t\t}\n\n\t\tif (this._sizeDirty) {\n\t\t\tthis._updateSize();\n\t\t}\n\n\t\tif (this.isDirty(\"wheelable\")) {\n\t\t\tconst wheelable = this.get(\"wheelable\");\n\t\t\tif (wheelable) {\n\t\t\t\tthis.set(\"interactive\", true);\n\t\t\t}\n\t\t\tdisplay.wheelable = wheelable ? true : false;\n\t\t}\n\n\t\t// Accessibility\n\t\tif (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis._root._registerTabindexOrder(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._unregisterTabindexOrder(this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"filter\")) {\n\t\t\t//this.markDirtyBounds();\n\t\t\tdisplay.filter = this.get(\"filter\");\n\t\t}\n\n\t\tif (this.isDirty(\"cursorOverStyle\")) {\n\t\t\tdisplay.cursorOverStyle = this.get(\"cursorOverStyle\");\n\t\t}\n\n\t\tif (this.isDirty(\"hoverOnFocus\")) {\n\t\t\tif (this.get(\"hoverOnFocus\")) {\n\t\t\t\tthis._focusDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"focus\", () => {\n\t\t\t\t\t\t// TODO: proper hover, not just tooltip\n\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"blur\", () => {\n\t\t\t\t\t\t// TODO: proper hover, not just tooltip\n\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t})])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._focusDp) {\n\t\t\t\t\tthis._focusDp.dispose();\n\t\t\t\t\tthis._focusDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"focusable\")) {\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis._root._registerTabindexOrder(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._unregisterTabindexOrder(this);\n\t\t\t}\n\t\t\tthis.markDirtyAccessibility();\n\t\t}\n\n\t\tif (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueMin\") || this.isDirty(\"ariaValueMax\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\") || this.isDirty(\"ariaControls\")) {\n\t\t\t// display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\n\t\t\t// @todo make sure ariaLabel gets populated in Root\n\t\t\tthis.markDirtyAccessibility();\n\t\t}\n\n\t\tif (this.isDirty(\"exportable\")) {\n\t\t\tdisplay.exportable = this.get(\"exportable\");\n\t\t}\n\n\t\tif (this.isDirty(\"interactive\")) {\n\t\t\tconst events = this.events;\n\t\t\tif (this.get(\"interactive\")) {\n\t\t\t\tthis._hoverDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"click\", (ev) => {\n\t\t\t\t\t\tif ($utils.isTouchEvent(ev.originalEvent)) {\n\t\t\t\t\t\t\tif (!this.getPrivate(\"touchHovering\")) {\n\t\t\t\t\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\t\t\t\t\tthis._handleOver();\n\t\t\t\t\t\t\t\t\tif (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\n\t\t\t\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.setPrivateRaw(\"touchHovering\", true);\n\t\t\t\t\t\t\t\t\tthis.events.dispatch(\"pointerover\", {\n\t\t\t\t\t\t\t\t\t\ttype: \"pointerover\",\n\t\t\t\t\t\t\t\t\t\ttarget: ev.target,\n\t\t\t\t\t\t\t\t\t\toriginalEvent: ev.originalEvent,\n\t\t\t\t\t\t\t\t\t\tpoint: ev.point,\n\t\t\t\t\t\t\t\t\t\tsimulated: ev.simulated\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}, 10)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointerup\", (ev) => {\n\t\t\t\t\t\tif ($utils.isTouchEvent(ev.originalEvent)) {\n\t\t\t\t\t\t\tif (this.getPrivate(\"touchHovering\")) {\n\t\t\t\t\t\t\t\tthis._handleOut();\n\t\t\t\t\t\t\t\tif (this.get(\"tooltipText\") || this.get(\"tooltipHTML\")) {\n\t\t\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.setPrivateRaw(\"touchHovering\", false);\n\t\t\t\t\t\t\t\tthis.events.dispatch(\"pointerout\", {\n\t\t\t\t\t\t\t\t\ttype: \"pointerout\",\n\t\t\t\t\t\t\t\t\ttarget: ev.target,\n\t\t\t\t\t\t\t\t\toriginalEvent: ev.originalEvent,\n\t\t\t\t\t\t\t\t\tpoint: ev.point,\n\t\t\t\t\t\t\t\t\tsimulated: ev.simulated\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._isDown) {\n\t\t\t\t\t\t\tthis._handleUp(ev);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//this._isDown = false;\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerover\", () => {\n\t\t\t\t\t\tthis._handleOver();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerout\", () => {\n\t\t\t\t\t\tthis._handleOut();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerdown\", (e) => {\n\t\t\t\t\t\tthis._handleDown(e);\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._display.interactive = false;\n\t\t\t\tif (this._hoverDp) {\n\t\t\t\t\tthis._hoverDp.dispose();\n\t\t\t\t\tthis._hoverDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"forceInactive\")) {\n\t\t\tthis._display.inactive = this.get(\"forceInactive\", false);\n\t\t}\n\n\t\tif (this.get(\"showTooltipOn\") == \"always\" && this._display.visible) {\n\t\t\tthis.showTooltip();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragStart(e: ISpritePointerEvent) {\n\t\tthis._dragEvent = e;\n\t\tthis.events.stopParentDispatch();\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragStop(e: ISpritePointerEvent) {\n\t\tthis._dragEvent = undefined;\n\t\tthis._dragPoint = undefined;\n\t\tthis.events.stopParentDispatch();\n\n\t\tif (this._isDragging) {\n\t\t\tthis._isDragging = false;\n\n\t\t\tconst type = \"dragstop\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, {\n\t\t\t\t\ttype: type,\n\t\t\t\t\ttarget: this,\n\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\tpoint: e.point,\n\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleOver() {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\n\t\t\t\tthis.states.applyAnimate(\"hoverActive\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"hoverDisabled\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.states.applyAnimate(\"hover\");\n\t\t\t}\n\t\t\tif (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\n\t\t\t\tthis.states.applyAnimate(\"down\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleOut() {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"active\")) {\n\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.get(\"draggable\") && this._isDown && this.states.lookup(\"down\")) {\n\t\t\t\tthis.states.applyAnimate(\"down\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleUp(e: ISpritePointerEvent) {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"active\")) {\n\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t}\n\t\t\telse if (this.states.lookup(\"down\")) {\n\t\t\t\tif (this.isHover()) {\n\t\t\t\t\tthis.states.applyAnimate(\"hover\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// @todo remove this once migrated to _downPoints\n\t\t\tthis._downPoint = undefined;\n\n\t\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\t\tdelete this._downPoints[pointerId];\n\n\t\t\tif ($object.keys(this._downPoints).length == 0) {\n\t\t\t\tthis._isDown = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _hasMoved(e: ISpritePointerEvent): boolean {\n\t\t// @todo remove this once migrated to _downPoints\n\t\t// if (this._downPoint) {\n\t\t// \tconst x = Math.abs(this._downPoint.x - e.point.x);\n\t\t// \tconst y = Math.abs(this._downPoint.y - e.point.y);\n\t\t// \treturn (x > 5) || (y > 5);\n\t\t// }\n\n\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\tconst downPoint = this._downPoints[pointerId];\n\t\tif (downPoint) {\n\t\t\tconst x = Math.abs(downPoint.x - e.point.x);\n\t\t\tconst y = Math.abs(downPoint.y - e.point.y);\n\t\t\treturn (x > 5) || (y > 5);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic _hasDown(): boolean {\n\t\treturn $object.keys(this._downPoints).length > 0;\n\t}\n\n\tprotected _handleDown(e: ISpritePointerEvent) {\n\n\t\tconst parent = this.parent;\n\t\tif (parent && !this.get(\"draggable\")) {\n\t\t\tparent._handleDown(e);\n\t\t}\n\n\t\tif (this.get(\"interactive\") && !this.isHidden()) {\n\t\t\tif (this.states.lookup(\"down\")) {\n\t\t\t\tthis.states.applyAnimate(\"down\");\n\t\t\t}\n\t\t\tthis._downPoint = {\n\t\t\t\tx: e.point.x,\n\t\t\t\ty: e.point.y\n\t\t\t};\n\n\n\t\t\t// @todo remove this once migrated to _downPoints\n\t\t\tthis._isDown = true;\n\n\t\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\t\tthis._downPoints[pointerId] = {\n\t\t\t\tx: e.point.x,\n\t\t\t\ty: e.point.y\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragMove(e: ISpritePointerEvent) {\n\t\tlet dragEvent = this._dragEvent;\n\n\t\tif (dragEvent) {\n\n\t\t\tif (dragEvent.simulated && !e.simulated) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tlet angle = 0;\n\n\t\t\tlet parent = this.parent;\n\t\t\twhile (parent != null) {\n\t\t\t\tangle += parent.get(\"rotation\", 0);\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\n\t\t\tlet x = e.point.x - dragEvent.point.x;\n\t\t\tlet y = e.point.y - dragEvent.point.y;\n\n\t\t\tconst events = this.events;\n\n\t\t\tif (dragEvent.simulated && !this._isDragging) {\n\t\t\t\tthis._isDragging = true;\n\t\t\t\tthis._dragEvent = e;\n\n\t\t\t\tthis._dragPoint = {\n\t\t\t\t\tx: this.x(),\n\t\t\t\t\ty: this.y()\n\t\t\t\t};\n\n\t\t\t\tconst type = \"dragstart\";\n\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._isDragging) {\n\t\t\t\tlet dragPoint = this._dragPoint!;\n\n\t\t\t\tthis.set(\"x\", dragPoint.x + x * $math.cos(angle) + y * $math.sin(angle));\n\t\t\t\tthis.set(\"y\", dragPoint.y + y * $math.cos(angle) - x * $math.sin(angle));\n\n\t\t\t\tconst type = \"dragged\";\n\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tif (Math.hypot(x, y) > 5) {\n\t\t\t\t\tthis._isDragging = true;\n\t\t\t\t\tthis._dragEvent = e;\n\n\t\t\t\t\tthis._dragPoint = {\n\t\t\t\t\t\tx: this.x(),\n\t\t\t\t\t\ty: this.y()\n\t\t\t\t\t};\n\n\t\t\t\t\tconst type = \"dragstart\";\n\t\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\t\tsimulated: e.simulated\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\n\t}\n\n\tprotected _getBounds() {\n\t\tthis._localBounds = this._display.getLocalBounds();\n\t}\n\n\t/**\n\t * Returns depth (how deep in the hierachy of the content tree) of this\n\t * element.\n\t *\n\t * @return Depth\n\t */\n\tpublic depth(): number {\n\t\tlet self: Container | undefined = this.parent;\n\t\tlet depth = 0;\n\n\t\twhile (true) {\n\t\t\tif (self) {\n\t\t\t\t++depth;\n\t\t\t\tself = self.parent;\n\n\t\t\t} else {\n\t\t\t\treturn depth;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySize(): void {\n\t\tthis._sizeDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyBounds(): void {\n\t\tif (this.get(\"isMeasured\")) {\n\t\t\tconst display = this._display;\n\t\t\tthis._root._addDirtyBounds(this);\n\t\t\tdisplay.isMeasured = true;\n\t\t\tdisplay.invalidateBounds();\n\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent && this.get(\"position\") != \"absolute\") {\n\t\t\t\tif (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\n\t\t\t\t\tparent.markDirtyBounds();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.get(\"focusable\") && this.isFocus()) {\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyAccessibility(): void {\n\t\t//if (this._root.focused(this)) {\n\t\tthis._root._invalidateAccessibility(this);\n\t\t//}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyLayer() {\n\t\t//this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\n\t\tthis._display.markDirtyLayer(true);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty() {\n\t\tsuper.markDirty();\n\t\tthis.markDirtyLayer();\n\t}\n\n\tpublic _updateBounds() {\n\t\tconst oldBounds = this._adjustedLocalBounds;\n\n\t\tlet newBounds: IBounds;\n\n\t\t// if display.visible == false, it still returns bounds\n\t\tif (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n\t\t\tnewBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t};\n\t\t\tthis._localBounds = newBounds;\n\t\t\tthis._adjustedLocalBounds = newBounds;\n\t\t}\n\t\telse {\n\t\t\tthis._getBounds();\n\t\t\tthis._fixMinBounds(this._localBounds);\n\t\t\tthis.updatePivotPoint();\n\t\t\tthis._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\n\t\t\tnewBounds = this._adjustedLocalBounds!;\n\t\t}\n\n\t\tif (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\n\t\t\tconst eventType = \"boundschanged\";\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t}\n\t\t\tif (this.parent) {\n\t\t\t\tthis.parent.markDirty();\n\t\t\t\tthis.parent.markDirtyBounds();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _fixMinBounds(bounds: IBounds) {\n\t\tlet minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\n\t\tlet minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\n\n\t\tif ($type.isNumber(minWidth)) {\n\t\t\tif (bounds.right - bounds.left < minWidth) {\n\t\t\t\tbounds.right = bounds.left + minWidth;\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minHeight)) {\n\t\t\tif (bounds.bottom - bounds.top < minHeight) {\n\t\t\t\tbounds.bottom = bounds.top + minHeight;\n\t\t\t}\n\t\t}\n\n\t\tlet privateWidth = this.getPrivate(\"width\");\n\t\tlet privateHeight = this.getPrivate(\"height\");\n\n\t\tif ($type.isNumber(privateWidth)) {\n\t\t\tif (privateWidth > 0) {\n\t\t\t\tbounds.right = bounds.left + privateWidth;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbounds.left = bounds.right + privateWidth;\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(privateHeight)) {\n\t\t\tif (privateHeight > 0) {\n\t\t\t\tbounds.bottom = bounds.top + privateHeight;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbounds.top = bounds.bottom + privateHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _removeParent(parent: Container | undefined) {\n\t\tif (parent) {\n\t\t\tparent.children.removeValue(this);\n\t\t\t$array.removeFirst(parent._percentageSizeChildren, this);\n\t\t\t$array.removeFirst(parent._percentagePositionChildren, this);\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._statesHandled = false;\n\t}\n\n\t/**\n\t * Simulate hover over element.\n\t */\n\tpublic hover() {\n\t\tthis.showTooltip();\n\t\tthis._handleOver();\n\t}\n\n\t/**\n\t * Simulate unhover over element.\n\t */\n\tpublic unhover(): void {\n\t\tthis.hideTooltip();\n\t\tthis._handleOut();\n\t}\n\n\t/**\n\t * Shows element's [[Tooltip]].\n\t */\n\tpublic showTooltip(point?: IPoint): Promise<void> | undefined {\n\t\tconst tooltip = this.getTooltip();\n\t\tconst tooltipText = this.get(\"tooltipText\");\n\t\tconst tooltipHTML = this.get(\"tooltipHTML\");\n\n\t\tif ((tooltipText || tooltipHTML) && tooltip) {\n\t\t\tconst tooltipPosition = this.get(\"tooltipPosition\");\n\t\t\tconst tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\n\n\t\t\tif (tooltipPosition == \"fixed\" || !point) {\n\t\t\t\tthis._display._setMatrix();\n\t\t\t\tpoint = this.toGlobal(tooltipTarget._getTooltipPoint());\n\t\t\t}\n\n\t\t\ttooltip.set(\"pointTo\", point);\n\t\t\ttooltip.set(\"tooltipTarget\", tooltipTarget);\n\n\t\t\tif (!tooltip.get(\"x\")) {\n\t\t\t\ttooltip.set(\"x\", point.x);\n\t\t\t}\n\t\t\tif (!tooltip.get(\"y\")) {\n\t\t\t\ttooltip.set(\"y\", point.y);\n\t\t\t}\n\n\t\t\tif (tooltipText) {\n\t\t\t\ttooltip.label.set(\"text\", tooltipText);\n\t\t\t}\n\t\t\tif (tooltipHTML) {\n\t\t\t\ttooltip.label.set(\"html\", tooltipHTML);\n\t\t\t}\n\t\t\tconst dataItem = this.dataItem;\n\t\t\tif (dataItem) {\n\t\t\t\ttooltip.label._setDataItem(dataItem);\n\t\t\t}\n\n\t\t\tif (this.get(\"showTooltipOn\") == \"always\" && (point.x < 0 || point.x > this._root.width() || point.y < 0 || point.y > this._root.height())) {\n\t\t\t\tthis.hideTooltip();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.label.text.markDirtyText();\n\t\t\tconst promise = tooltip.show();\n\t\t\tthis.setPrivateRaw(\"showingTooltip\", true);\n\t\t\treturn promise;\n\t\t}\n\t}\n\n\t/**\n\t * Hides element's [[Tooltip]].\n\t */\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.getTooltip();\n\t\tif (tooltip) {\n\t\t\tif (tooltip.get(\"tooltipTarget\") == this.getPrivate(\"tooltipTarget\", this)) {\n\t\t\t\tlet timeout = tooltip.get(\"keepTargetHover\") && tooltip.get(\"stateAnimationDuration\", 0) == 0 ? 400 : undefined;\n\t\t\t\tconst promise = tooltip.hide(timeout);\n\t\t\t\tthis.setPrivateRaw(\"showingTooltip\", false);\n\t\t\t\treturn promise;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tconst bounds = this._localBounds!;\n\n\t\tif (bounds) {\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tif (!this.get(\"isMeasured\")) {\n\t\t\t\tx = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\n\t\t\t\ty = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\n\t\t\t\ty = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\n\t\t\t}\n\n\t\t\treturn { x, y };\n\t\t}\n\t\treturn { x: 0, y: 0 };\n\t}\n\n\t/**\n\t * Returns [[Tooltip]] used for this element.\n\t *\n\t * @return Tooltip\n\t */\n\tpublic getTooltip(): Tooltip | undefined {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (!tooltip) {\n\t\t\tlet parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\treturn parent.getTooltip();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn tooltip;\n\t\t}\n\t}\n\n\tpublic _updatePosition() {\n\n\t\tconst parent = this.parent;\n\n\t\tlet dx = this.get(\"dx\", 0);\n\t\tlet dy = this.get(\"dy\", 0);\n\n\t\tlet x = this.get(\"x\");\n\t\tlet _x = this.getPrivate(\"x\");\n\n\t\tlet xx = 0;\n\t\tlet yy = 0;\n\n\t\tconst position = this.get(\"position\");\n\n\t\tif (x instanceof Percent) {\n\t\t\tif (parent) {\n\t\t\t\tx = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\t\tif ($type.isNumber(x)) {\n\t\t\txx = x + dx;\n\t\t}\n\t\telse {\n\t\t\tif (_x != null) {\n\t\t\t\txx = _x;\n\t\t\t}\n\t\t\telse if (parent) {\n\t\t\t\tif (position == \"relative\") {\n\t\t\t\t\txx = parent.get(\"paddingLeft\", 0) + dx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tlet y = this.get(\"y\");\n\t\tlet _y = this.getPrivate(\"y\");\n\n\t\tif (y instanceof Percent) {\n\t\t\tif (parent) {\n\t\t\t\ty = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t}\n\t\tif ($type.isNumber(y)) {\n\t\t\tyy = y + dy;\n\t\t}\n\t\telse {\n\t\t\tif (_y != null) {\n\t\t\t\tyy = _y;\n\t\t\t}\n\t\t\telse if (parent) {\n\t\t\t\tif (position == \"relative\") {\n\t\t\t\t\tyy = parent.get(\"paddingTop\", 0) + dy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst display = this._display;\n\n\t\tif (display.x != xx || display.y != yy) {\n\t\t\tdisplay.invalidateBounds();\n\t\t\tdisplay.x = xx;\n\t\t\tdisplay.y = yy;\n\n\t\t\tconst eventType = \"positionchanged\";\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t}\n\t\t}\n\n\t\t// Update tooltip position together with the Sprite\n\t\tif (this.getPrivate(\"showingTooltip\")) {\n\t\t\tthis.showTooltip();\n\t\t}\n\t}\n\n\t/**\n\t * Returns element's actual X position in pixels.\n\t *\n\t * @return X (px)\n\t */\n\tpublic x(): number {\n\t\tlet x = this.get(\"x\");\n\t\tlet _x = this.getPrivate(\"x\");\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (x instanceof Percent) {\n\t\t\t\treturn $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!$type.isNumber(x)) {\n\t\t\t\t\tif (_x != null) {\n\t\t\t\t\t\treturn _x;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn parent.get(\"paddingLeft\", this._display.x)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._display.x;\n\t}\n\n\t/**\n\t * Returns element's actual Y position in pixels.\n\t *\n\t * @return Y (px)\n\t */\n\tpublic y(): number {\n\n\t\tlet _y = this.getPrivate(\"y\");\n\n\t\tif (_y != null) {\n\t\t\treturn _y;\n\t\t}\n\n\t\tlet y = this.get(\"y\");\n\t\tconst parent = this.parent;\n\n\t\tif (parent) {\n\t\t\tif (y instanceof Percent) {\n\t\t\t\treturn $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!$type.isNumber(y)) {\n\t\t\t\t\tif (_y != null) {\n\t\t\t\t\t\treturn _y;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn parent.get(\"paddingTop\", this._display.y)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._display.y;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis._display.dispose();\n\t\tthis._removeTemplateField();\n\t\tthis._removeParent(this.parent);\n\t\tthis._root._removeFocusElement(this);\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.dispose();\n\t\t}\n\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic adjustedLocalBounds(): IBounds {\n\t\tthis._fixMinBounds(this._adjustedLocalBounds);\n\t\treturn this._adjustedLocalBounds;\n\t}\n\n\t/**\n\t * Returns local coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic localBounds(): IBounds {\n\t\treturn this._localBounds;\n\t}\n\n\t/**\n\t * Returns adjusted local coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic bounds(): IBounds {\n\t\tconst bounds = this._adjustedLocalBounds;\n\t\tconst x = this.x();\n\t\tconst y = this.y();\n\t\treturn { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\n\t}\n\n\t/**\n\t * Returns global coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic globalBounds(): IBounds {\n\t\tconst bounds = this.localBounds();\n\n\t\tconst p0 = this.toGlobal({ x: bounds.left, y: bounds.top });\n\t\tconst p1 = this.toGlobal({ x: bounds.right, y: bounds.top });\n\t\tconst p2 = this.toGlobal({ x: bounds.right, y: bounds.bottom });\n\t\tconst p3 = this.toGlobal({ x: bounds.left, y: bounds.bottom });\n\n\t\treturn {\n\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t}\n\t}\n\n\tprotected _onShow(_duration?: number) {\n\n\t}\n\n\tprotected _onHide(_duration?: number) {\n\n\t}\n\n\t/**\n\t * Plays initial reveal animation regardless if element is currently hidden\n\t * or visible.\n\t *\n\t * @param   duration  Duration of the animation in milliseconds\n\t * @param   delay     Delay showing of the element by X milliseconds\n\t * @return            Promise\n\t */\n\tpublic async appear(duration?: number, delay?: number): Promise<void> {\n\t\tawait this.hide(0);\n\t\tif (delay) {\n\t\t\treturn new Promise<void>((success, _error) => {\n\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\tsuccess(this.show(duration));\n\t\t\t\t}, delay);\n\t\t\t});\n\n\t\t}\n\t\telse {\n\t\t\treturn this.show(duration);\n\t\t}\n\t}\n\n\t/**\n\t * Shows currently hidden element and returns a `Promise` which completes\n\t * when all showing animations are finished.\n\t *\n\t * ```TypeScript\n\t * series.show().then(function(ev) {\n\t *   console.log(\"Series is now fully visible\");\n\t * })\n\t * ```\n\t * ```JavaScript\n\t * series.show().then(function(ev) {\n\t *   console.log(\"Series is now fully visible\");\n\t * })\n\t * ```\n\t *\n\t * @return Promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tif (!this._isShowing) {\n\t\t\tthis._isHidden = false;\n\t\t\tthis._isShowing = true;\n\t\t\tthis._isHiding = false;\n\n\t\t\tif (this.states.lookup(\"default\")!.get(\"visible\")) {\n\t\t\t\tthis.set(\"visible\", true);\n\t\t\t}\n\t\t\tthis._onShow(duration);\n\n\t\t\tconst animations = this.states.applyAnimate(\"default\", duration);\n\t\t\tawait waitForAnimations(animations);\n\n\t\t\tthis._isShowing = false;\n\t\t}\n\t}\n\n\t/**\n\t * Hides the element and returns a `Promise` which completes when all hiding\n\t * animations are finished.\n\t *\n\t * ```TypeScript\n\t * series.hide().then(function(ev) {\n\t *   console.log(\"Series finished hiding\");\n\t * })\n\t * ```\n\t * ```JavaScript\n\t * series.hide().then(function(ev) {\n\t *   console.log(\"Series finished hiding\");\n\t * })\n\t * ```\n\t *\n\t * @return Promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tif (!this._isHiding && !this._isHidden) {\n\t\t\tthis._isHiding = true;\n\t\t\tthis._isShowing = false;\n\t\t\tlet state = this.states.lookup(\"hidden\");\n\t\t\tif (!state) {\n\t\t\t\tstate = this.states.create(\"hidden\", {\n\t\t\t\t\t\"opacity\": 0,\n\t\t\t\t\t\"visible\": false\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._isHidden = true;\n\t\t\tthis._onHide(duration);\n\n\t\t\tconst animations = this.states.applyAnimate(\"hidden\", duration);\n\n\t\t\tawait waitForAnimations(animations);\n\n\t\t\tthis._isHiding = false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently hidden.\n\t *\n\t * @return Is hidden?\n\t */\n\tpublic isHidden(): boolean {\n\t\treturn this._isHidden;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently animating to a default state.\n\t *\n\t * @return Is showing?\n\t */\n\tpublic isShowing(): boolean {\n\t\treturn this._isShowing;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently animating to a hidden state.\n\t *\n\t * @return Is hiding?\n\t */\n\tpublic isHiding(): boolean {\n\t\treturn this._isHiding;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently hovered by a pointer.\n\t *\n\t * @return Is hovered?\n\t */\n\tpublic isHover(): boolean {\n\t\treturn this._display.hovering();\n\t}\n\n\t/**\n\t * Returns `true` if this element does currently have focus.\n\t *\n\t * @return Is focused?\n\t */\n\tpublic isFocus(): boolean {\n\t\treturn this._root.focused(this);\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently being dragged.\n\t *\n\t * @return Is dragged?\n\t */\n\tpublic isDragging(): boolean {\n\t\treturn this._isDragging;\n\t}\n\n\t/**\n\t * Returns `false` if if either public or private setting `visible` is set\n\t * to `false`, or `forceHidden` is set to `true`.\n\t *\n\t * @return Visible?\n\t */\n\tpublic isVisible(): boolean {\n\t\tif (this.get(\"visible\") && this.getPrivate(\"visible\") && !this.get(\"forceHidden\")) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Same as `isVisible()`, except it checks all ascendants, too.\n\t *\n\t * @since 5.2.7\n\t * @return Visible?\n\t */\n\tpublic isVisibleDeep(): boolean {\n\t\treturn this._parent ? (this._parent.isVisibleDeep() && this.isVisible()) : this.isVisible();\n\t}\n\n\t/**\n\t * Returns an actual opacity of the element, taking into account all parents.\n\t *\n\t * @return Opacity\n\t * @since 5.2.11\n\t */\n\tpublic compositeOpacity(): number {\n\t\tconst opacity = this.get(\"opacity\", 1);\n\t\treturn this._parent ? (this._parent.compositeOpacity() * opacity) : opacity;\n\t}\n\n\t/**\n\t * Returns width of this element in pixels.\n\t *\n\t * @return Width (px)\n\t */\n\tpublic width(): number {\n\t\tlet width = this.get(\"width\");\n\t\tlet maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n\t\tlet minWidth = this.get(\"minWidth\", this.getPrivate(\"minWidth\"));\n\t\tlet privateWidth = this.getPrivate(\"width\");\n\t\tlet w = 0;\n\n\t\tif ($type.isNumber(privateWidth)) {\n\t\t\tw = privateWidth;\n\t\t}\n\t\telse {\n\t\t\tif (width == null) {\n\t\t\t\tif (this._adjustedLocalBounds) {\n\t\t\t\t\tw = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tw = parent.innerWidth() * width.value;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tw = this._root.width() * width.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ($type.isNumber(width)) {\n\t\t\t\t\tw = width;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minWidth)) {\n\t\t\tw = Math.max(minWidth, w);\n\t\t}\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\tw = Math.min(maxWidth, w);\n\t\t}\n\n\t\treturn w;\n\t}\n\n\t/**\n\t * Returns maximum allowed width of this element in pixels.\n\t *\n\t * @return Maximum width (px)\n\t */\n\tpublic maxWidth(): number {\n\t\tlet maxWidth = this.get(\"maxWidth\", this.getPrivate(\"maxWidth\"));\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\treturn maxWidth;\n\t\t}\n\t\telse {\n\t\t\tlet width = this.get(\"width\")\n\t\t\tif ($type.isNumber(width)) {\n\t\t\t\treturn width;\n\t\t\t}\n\t\t}\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\treturn parent.innerWidth();\n\t\t}\n\t\treturn this._root.width();\n\t}\n\n\t/**\n\t * Returns maximum allowed height of this element in pixels.\n\t *\n\t * @return Maximum height (px)\n\t */\n\tpublic maxHeight(): number {\n\t\tlet maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\treturn maxHeight;\n\t\t}\n\t\telse {\n\t\t\tlet height = this.get(\"height\")\n\t\t\tif ($type.isNumber(height)) {\n\t\t\t\treturn height;\n\t\t\t}\n\t\t}\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\treturn parent.innerHeight();\n\t\t}\n\t\treturn this._root.height();\n\t}\n\n\t/**\n\t * Returns height of this element in pixels.\n\t *\n\t * @return Height (px)\n\t */\n\tpublic height(): number {\n\t\tlet height = this.get(\"height\");\n\t\tlet maxHeight = this.get(\"maxHeight\", this.getPrivate(\"maxHeight\"));\n\t\tlet minHeight = this.get(\"minHeight\", this.getPrivate(\"minHeight\"));\n\t\tlet privateHeight = this.getPrivate(\"height\");\n\t\tlet h = 0;\n\n\t\tif ($type.isNumber(privateHeight)) {\n\t\t\th = privateHeight;\n\t\t}\n\t\telse {\n\t\t\tif (height == null) {\n\t\t\t\tif (this._adjustedLocalBounds) {\n\t\t\t\t\th = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\th = parent.innerHeight() * height.value;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\th = this._root.height() * height.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ($type.isNumber(height)) {\n\t\t\t\t\th = height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minHeight)) {\n\t\t\th = Math.max(minHeight, h);\n\t\t}\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\th = Math.min(maxHeight, h);\n\t\t}\n\n\t\treturn h;\n\t}\n\n\tprotected _findStaticTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\t// templateField overrides template\n\t\tif (this._templateField && f(this._templateField)) {\n\t\t\treturn this._templateField;\n\t\t}\n\n\t\treturn super._findStaticTemplate(f);\n\t}\n\n\tpublic _walkParents(f: (parent: Sprite) => void): void {\n\t\tif (this._parent) {\n\t\t\tthis._walkParent(f);\n\t\t}\n\t}\n\n\tprotected _walkParent(f: (parent: Sprite) => void): void {\n\t\tif (this._parent) {\n\t\t\tthis._parent._walkParent(f);\n\t\t}\n\n\t\tf(this);\n\t}\n\n\t/**\n\t * Parent [[Container]] of this element.\n\t *\n\t * @return Parent container\n\t */\n\tpublic get parent(): Container | undefined {\n\t\treturn this._parent;\n\t}\n\n\tpublic _setParent(parent: Container, updateChildren: boolean = false) {\n\t\tconst prevParent = this._parent;\n\t\tif (parent !== prevParent) {\n\t\t\tthis.markDirtyBounds();\n\n\t\t\tparent.markDirty();\n\n\t\t\tthis._parent = parent;\n\n\t\t\tif (updateChildren) {\n\t\t\t\tthis._removeParent(prevParent);\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tthis._addPercentageSizeChildren();\n\t\t\t\t\tthis._addPercentagePositionChildren();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markDirtyPosition();\n\t\t\tthis._applyThemes();\n\t\t}\n\t}\n\n\t/**\n\t * Returns an instance of [[NumberFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return NumberFormatter instace\n\t */\n\tpublic getNumberFormatter(): NumberFormatter {\n\t\treturn this.get(\"numberFormatter\", this._root.numberFormatter);\n\t}\n\n\t/**\n\t * Returns an instance of [[DateFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return DateFormatter instace\n\t */\n\tpublic getDateFormatter(): DateFormatter {\n\t\treturn this.get(\"dateFormatter\", this._root.dateFormatter);\n\t}\n\n\t/**\n\t * Returns an instance of [[DurationFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return DurationFormatter instace\n\t */\n\tpublic getDurationFormatter(): DurationFormatter {\n\t\treturn this.get(\"durationFormatter\", this._root.durationFormatter);\n\t}\n\n\t/**\n\t * Converts X/Y coordinate within this element to a global coordinate.\n\t *\n\t * @param  point  Local coordinate\n\t * @return        Global coordinate\n\t */\n\tpublic toGlobal(point: IPoint): IPoint {\n\t\treturn this._display.toGlobal(point);\n\t}\n\n\t/**\n\t * Converts global X/Y coordinate to a coordinate within this element.\n\t *\n\t * @param  point  Global coordinate\n\t * @return        Local coordinate\n\t */\n\tpublic toLocal(point: IPoint): IPoint {\n\t\treturn this._display.toLocal(point);\n\t}\n\n\tpublic _getDownPoint(): IPoint | undefined {\n\t\tconst id = this._getDownPointId();\n\t\tif (id) {\n\t\t\treturn this._downPoints[id];\n\t\t}\n\n\t}\n\n\tpublic _getDownPointId(): number | undefined {\n\t\tif (this._downPoints) {\n\t\t\treturn $object.keysOrdered(this._downPoints, (a, b) => {\n\t\t\t\tif (a > b) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (a < b) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t})[0];\n\t\t}\n\t}\n\n\t/**\n\t * Moves sprite to the end of the parent's children array.\n\t *\n\t * Depending on `layout` setting of the parten container, it may effect the\n\t * positioning or overlapping order of the elements.\n\t */\n\tpublic toFront() {\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this, parent.children.length - 1);\n\t\t}\n\t}\n\n\t/**\n\t * Moves sprite to the beginning of the parent's children array.\n\t *\n\t * Depending on `layout` setting of the parten container, it may effect the\n\t * positioning or overlapping order of the elements.\n\t */\n\tpublic toBack() {\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this, 0);\n\t\t}\n\t}\n\n}\n"],"mappings":";AAaA,SAASA,MAAM,QAAwD,gBAAgB;AACvF,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,eAAe,QAA+B,yBAAyB;AAChF,SAAoBC,aAAa,EAAEC,eAAe,QAAQ,kBAAkB;AAC5E,SAASC,iBAAiB,QAAQ,mBAAmB;AAErD,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC,OAAO,KAAKC,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC;AAGA;;;;;AAKA,MAAMC,qBAAuE,SAAQT,eAAkB;EA0EtGU,YAAYC,MAAc;IACzB,KAAK,EAAE;IAPRC,MAAA,CAAAC,cAAA;;;;;;IAEAD,MAAA,CAAAC,cAAA;;;;aAAmF;;IAEnFD,MAAA,CAAAC,cAAA;;;;aAAsC;;IAIrC,IAAI,CAACC,OAAO,GAAGH,MAAM;EACtB;EAEUI,iBAAiBA,CAAoBC,GAAM,EAAEC,KAAoC;IAC1F,OAAO;MACNC,IAAI,EAAEF,GAAG;MACTG,aAAa,EAAEF,KAAK,CAACA,KAAK;MAC1BG,KAAK,EAAEH,KAAK,CAACG,KAAK;MAClBC,SAAS,EAAEJ,KAAK,CAACI,SAAS;MAC1BC,MAAM,EAAEL,KAAK,CAACK,MAAM;MACpBC,MAAM,EAAE,IAAI,CAACT;KACb;EACF;EAEUU,WAAWA,CAAoCR,GAAQ,EAAES,QAA2D;IAC7H;IACA,IAAI,CAACX,OAAO,CAACY,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC;IACrC,IAAI,CAACZ,OAAO,CAACa,QAAQ,CAACC,WAAW,GAAG,IAAI;IAExC,IAAIC,MAAM,GAAG,IAAI,CAACC,kBAAkB,CAACd,GAAG,CAAC;IAEzC,IAAIa,MAAM,KAAKE,SAAS,EAAE;MACzB,MAAMC,QAAQ,GAAG,IAAI,CAAClB,OAAO,CAACa,QAAQ,CAACM,EAAE,CAACjB,GAAG,EAAGkB,CAAC,IAAI;QACpDT,QAAQ,CAACU,IAAI,CAAC,IAAI,EAAED,CAAC,CAAC;MACvB,CAAC,CAAC;MAEFL,MAAM,GAAG,IAAI,CAACC,kBAAkB,CAACd,GAAG,CAAC,GAAG,IAAId,eAAe,CAAC,MAAK;QAChE,OAAO,IAAI,CAAC4B,kBAAkB,CAACd,GAAG,CAAC;QACnCgB,QAAQ,CAACI,OAAO,EAAE;MACnB,CAAC,CAAC;;IAGH,OAAOP,MAAM,CAACQ,SAAS,EAAE;EAC1B;EAEUC,GAAGA,CAAyBC,IAAa,EAAErB,IAAgB,EAAEsB,QAAa,EAAEC,OAAU,EAAEC,WAAoB,EAAEjB,QAA4C;IACnK,MAAMkB,IAAI,GAAG,KAAK,CAACL,GAAG,CAACC,IAAI,EAAErB,IAAI,EAAEsB,QAAQ,EAAEC,OAAO,EAAEC,WAAW,EAAEjB,QAAQ,CAAC;IAE5E,MAAMmB,aAAa,GAAInC,qBAAqB,CAACoC,eAAuB,CAAC3B,IAAI,CAAC;IAC1E,IAAI0B,aAAa,KAAKb,SAAS,EAAE;MAChCY,IAAI,CAACX,QAAQ,GAAG,IAAI/B,aAAa,CAAC,CACjC0C,IAAI,CAACX,QAAQ,EACb,IAAI,CAACR,WAAW,CAACN,IAAW,EAAE0B,aAAa,CAAC,CAC5C,CAAC;;IAGH,OAAOD,IAAI;EACZ;EAEA;;;;;;;;;;;;;;;;;;;;EAoBOG,kBAAkBA,CAAA;IACxB,IAAI,CAACC,gBAAgB,GAAG,KAAK;EAC9B;EAEA;;;EAGOC,eAAeA,CAAsB9B,IAAS,EAAED,KAAa;IACnE,MAAMgC,GAAG,GAAG,IAAI,CAACF,gBAAgB;IAEjC,IAAI,CAACA,gBAAgB,GAAG,IAAI;IAE5B,IAAI;MACH,IAAI,CAACtB,QAAQ,CAACP,IAAI,EAAED,KAAK,CAAC;MAE1B,IAAI,IAAI,CAAC8B,gBAAgB,IAAI,IAAI,CAACjC,OAAO,CAACoC,MAAM,EAAE;QACjD,IAAI,CAACpC,OAAO,CAACoC,MAAM,CAACrB,MAAM,CAACmB,eAAe,CAAC9B,IAAW,EAAED,KAAK,CAAC;;KAG/D,SAAS;MACT,IAAI,CAAC8B,gBAAgB,GAAGE,GAAG;;EAE7B;;AAtKArC,MAAA,CAAAC,cAAA,CAAAJ,qBAAA;;;;SAA4L;IAC3L,OAAO,EAAE,SAAA0C,CAASlC,KAAK;MACtB,IAAI,IAAI,CAACmC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAACtC,OAAO,CAACuC,UAAU,EAAE,IAAI,IAAI,CAACvC,OAAO,CAACwC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAACxC,OAAO,CAACyC,SAAS,CAAC,IAAI,CAACxC,iBAAiB,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC,EAAE;QACxJ,IAAI,CAACQ,QAAQ,CAAC,OAAO,EAAE,IAAI,CAACV,iBAAiB,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;;IAEhE,CAAC;IAED,YAAY,EAAE,SAAAuC,CAASvC,KAAK;MAC3B,IAAI,IAAI,CAACmC,SAAS,CAAC,YAAY,CAAC,EAAE;QACjC,IAAI,CAAC3B,QAAQ,CAAC,YAAY,EAAE,IAAI,CAACV,iBAAiB,CAAC,YAAY,EAAEE,KAAK,CAAC,CAAC;;IAE1E,CAAC;IAED,aAAa,EAAE,SAAAwC,CAASxC,KAAK;MAC5B,IAAI,IAAI,CAACmC,SAAS,CAAC,aAAa,CAAC,EAAE;QAClC,IAAI,CAAC3B,QAAQ,CAAC,aAAa,EAAE,IAAI,CAACV,iBAAiB,CAAC,aAAa,EAAEE,KAAK,CAAC,CAAC;;IAE5E,CAAC;IAED,UAAU,EAAE,SAAAyC,CAASzC,KAAK;MACzB,IAAI,CAAC+B,eAAe,CAAC,UAAU,EAAE,IAAI,CAACjC,iBAAiB,CAAC,UAAU,EAAEE,KAAK,CAAC,CAAC;IAC5E,CAAC;IAED,aAAa,EAAE,SAAA0C,CAAS1C,KAAK;MAC5B,IAAI,IAAI,CAACmC,SAAS,CAAC,aAAa,CAAC,EAAE;QAClC,IAAI,CAAC3B,QAAQ,CAAC,aAAa,EAAE,IAAI,CAACV,iBAAiB,CAAC,aAAa,EAAEE,KAAK,CAAC,CAAC;;IAE5E,CAAC;IAED,YAAY,EAAE,SAAA2C,CAAS3C,KAAK;MAC3B,IAAI,IAAI,CAACmC,SAAS,CAAC,YAAY,CAAC,EAAE;QACjC,IAAI,CAAC3B,QAAQ,CAAC,YAAY,EAAE,IAAI,CAACV,iBAAiB,CAAC,YAAY,EAAEE,KAAK,CAAC,CAAC;;IAE1E,CAAC;IAED,aAAa,EAAE,SAAA4C,CAAS5C,KAAK;MAC5B,IAAI,CAAC+B,eAAe,CAAC,aAAa,EAAE,IAAI,CAACjC,iBAAiB,CAAC,aAAa,EAAEE,KAAK,CAAC,CAAC;IAClF,CAAC;IAED,WAAW,EAAE,SAAA6C,CAAS7C,KAAK;MAC1B,IAAI,IAAI,CAACmC,SAAS,CAAC,WAAW,CAAC,EAAE;QAChC,IAAI,CAAC3B,QAAQ,CAAC,WAAW,EAAE,IAAI,CAACV,iBAAiB,CAAC,WAAW,EAAEE,KAAK,CAAC,CAAC;;IAExE,CAAC;IAED,iBAAiB,EAAE,SAAA8C,CAAS9C,KAAK;MAChC,IAAI,IAAI,CAACmC,SAAS,CAAC,iBAAiB,CAAC,EAAE;QACtC,IAAI,CAAC3B,QAAQ,CAAC,iBAAiB,EAAE,IAAI,CAACV,iBAAiB,CAAC,iBAAiB,EAAEE,KAAK,CAAC,CAAC;;IAEpF,CAAC;IAED,mBAAmB,EAAE,SAAA+C,CAAS/C,KAAK;MAClC,IAAI,IAAI,CAACmC,SAAS,CAAC,mBAAmB,CAAC,EAAE;QACxC,IAAI,CAAC3B,QAAQ,CAAC,mBAAmB,EAAE,IAAI,CAACV,iBAAiB,CAAC,mBAAmB,EAAEE,KAAK,CAAC,CAAC;;IAExF,CAAC;IAED,OAAO,EAAE,SAAAgD,CAAShD,KAAK;MACtB,IAAI,CAAC+B,eAAe,CAAC,OAAO,EAAE;QAC7B9B,IAAI,EAAE,OAAO;QACbK,MAAM,EAAE,IAAI,CAACT,OAAO;QACpBK,aAAa,EAAEF,KAAK,CAACA,KAAK;QAC1BG,KAAK,EAAEH,KAAK,CAACG;OACb,CAAC;IACH;;;AAmoBF;;;;;AAKA,OAAM,MAAgB8C,MAAO,SAAQrE,MAAM;EAA3Ca,YAAA;;IASCE,MAAA,CAAAC,cAAA;;;;aAAuC;QAAEsD,IAAI,EAAE,CAAC;QAAEC,KAAK,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAC;;IAE7E1D,MAAA,CAAAC,cAAA;;;;aAAkC;QAAEsD,IAAI,EAAE,CAAC;QAAEC,KAAK,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAC;;IAKxE1D,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IAEAD,MAAA,CAAAC,cAAA;;;;;;IAEAD,MAAA,CAAAC,cAAA;;;;aAAgC;;IAEhC;IACAD,MAAA,CAAAC,cAAA;;;;aAAiC;;IAEjC;IACAD,MAAA,CAAAC,cAAA;;;;;;IAEA;IACAD,MAAA,CAAAC,cAAA;;;;;;IAEAD,MAAA,CAAAC,cAAA;;;;aAA+B;;IAE/BD,MAAA,CAAAC,cAAA;;;;aAAgC;;IAEhCD,MAAA,CAAAC,cAAA;;;;aAA+B;;IAE/BD,MAAA,CAAAC,cAAA;;;;aAA6B;;IAC7BD,MAAA,CAAAC,cAAA;;;;;;IAEAD,MAAA,CAAAC,cAAA;;;;aAAkD;;IAElDD,MAAA,CAAAC,cAAA;;;;;;IAEAD,MAAA,CAAAC,cAAA;;;;;;IAEAD,MAAA,CAAAC,cAAA;;;;;;IAEAD,MAAA,CAAAC,cAAA;;;;;;IAEAD,MAAA,CAAAC,cAAA;;;;;;IAEAD,MAAA,CAAAC,cAAA;;;;;;IAEAD,MAAA,CAAAC,cAAA;;;;;;IAEAD,MAAA,CAAAC,cAAA;;;;aAAoC;;EAwvDrC;EAtvDW0D,SAASA,CAAA;IAClB,IAAI,CAACC,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC;IACnC,KAAK,CAACD,SAAS,EAAE;EAClB;EAEOE,aAAaA,CAAsCzD,GAAQ;IACjE,KAAK,CAACyD,aAAa,CAACzD,GAAG,CAAC;IACxB,IAAIA,GAAG,IAAI,GAAG,IAAIA,GAAG,IAAI,GAAG,IAAIA,GAAG,IAAI,IAAI,IAAIA,GAAG,IAAI,IAAI,EAAE;MAC3D,IAAI,CAAC0D,eAAe,EAAE;MACtB,IAAI,CAACC,8BAA8B,EAAE;MACrC,IAAI,CAACC,iBAAiB,EAAE;;EAE1B;EAEOC,oBAAoBA,CAA6C7D,GAAQ;IAC/E,KAAK,CAAC6D,oBAAoB,CAAC7D,GAAG,CAAC;IAC/B,IAAIA,GAAG,IAAI,GAAG,IAAIA,GAAG,IAAI,GAAG,EAAE;MAC7B,IAAI,CAAC4D,iBAAiB,EAAE;;EAE1B;EAEUE,oBAAoBA,CAAA;IAC7B,IAAI,IAAI,CAACC,cAAc,EAAE;MACxB,IAAI,CAACA,cAAc,CAACC,qBAAqB,CAAC,IAAI,CAAC;;EAEjD;EAEUC,aAAaA,CAAA;IACtB,OAAO,IAAIxE,qBAAqB,CAAC,IAAI,CAAC;EACvC;EAEOyE,qBAAqBA,CAAA;IAC3B,IAAIC,QAAQ;IAEZ,MAAMC,KAAK,GAAG,IAAI,CAACC,GAAG,CAAC,eAAe,CAAC;IAEvC,IAAID,KAAK,EAAE;MACV,MAAME,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAIA,QAAQ,EAAE;QACb,MAAM7C,OAAO,GAAG6C,QAAQ,CAACC,WAAW;QACpC,IAAI9C,OAAO,EAAE;UACZ0C,QAAQ,GAAI1C,OAAe,CAAC2C,KAAK,CAAC;UAElC,IAAI,EAAED,QAAQ,YAAYrF,QAAQ,CAAC,IAAIqF,QAAQ,EAAE;YAChDA,QAAQ,GAAGrF,QAAQ,CAAC0F,GAAG,CAACL,QAAQ,CAAC;;;;;IAMrC,IAAI,IAAI,CAACJ,cAAc,KAAKI,QAAQ,EAAE;MACrC,IAAI,CAACL,oBAAoB,EAAE;MAE3B,IAAI,CAACC,cAAc,GAAGI,QAAQ;MAE9B,IAAIA,QAAQ,EAAE;QACbA,QAAQ,CAACM,kBAAkB,CAAC,IAAI,CAAC;;MAGlC,IAAI,CAACC,eAAe,EAAE;;EAExB;EAEA;EACA;EACOC,YAAYA,CAACL,QAAuC;IAC1D,MAAMM,WAAW,GAAG,IAAI,CAACC,SAAS;IAClC,IAAI,CAACA,SAAS,GAAGP,QAAQ;IACzB,IAAI,CAACJ,qBAAqB,EAAE;IAC5B,MAAMY,SAAS,GAAG,iBAAiB;IACnC,IAAIR,QAAQ,IAAIM,WAAW,EAAE;MAC5B,IAAI,IAAI,CAAC/D,MAAM,CAACuB,SAAS,CAAC0C,SAAS,CAAC,EAAE;QACrC,IAAI,CAACjE,MAAM,CAACJ,QAAQ,CAACqE,SAAS,EAAE;UAC/B5E,IAAI,EAAE4E,SAAS;UACfvE,MAAM,EAAE,IAAI;UACZqE,WAAW,EAAEA,WAAW;UACxBG,WAAW,EAAET;SACb,CAAC;;;EAGL;EAEA;;;;;;;;;EASA,IAAWA,QAAQA,CAACU,KAA+C;IAClE,IAAI,CAACL,YAAY,CAACK,KAAK,CAAC;EACzB;EAEA;;;EAGA,IAAWV,QAAQA,CAAA;IAClB,IAAI,IAAI,CAACO,SAAS,EAAE;MACnB,OAAO,IAAI,CAACA,SAAS;KAErB,MAAM;MACN,IAAI3C,MAAM,GAAG,IAAI,CAAC+C,OAAO;MAEzB,OAAO/C,MAAM,EAAE;QACd,IAAIA,MAAM,CAAC2C,SAAS,EAAE;UACrB,OAAO3C,MAAM,CAAC2C,SAAS;SAEvB,MAAM;UACN3C,MAAM,GAAGA,MAAM,CAAC+C,OAAO;;;;EAI3B;EAEUC,0BAA0BA,CAAA;IACnC,IAAIhD,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAIA,MAAM,EAAE;MACX,IAAI,IAAI,CAACmC,GAAG,CAAC,OAAO,CAAC,YAAYtF,OAAO,IAAI,IAAI,CAACsF,GAAG,CAAC,QAAQ,CAAC,YAAYtF,OAAO,EAAE;QAClFM,MAAM,CAAC8F,OAAO,CAACjD,MAAM,CAACkD,uBAAuB,EAAE,IAAI,CAAC;OACpD,MAAM;QACN/F,MAAM,CAACgG,WAAW,CAACnD,MAAM,CAACkD,uBAAuB,EAAE,IAAI,CAAC;;;EAG3D;EAEUzB,8BAA8BA,CAAA;IACvC,IAAIzB,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAIA,MAAM,EAAE;MACX,IAAI,IAAI,CAACmC,GAAG,CAAC,GAAG,CAAC,YAAYtF,OAAO,IAAI,IAAI,CAACsF,GAAG,CAAC,GAAG,CAAC,YAAYtF,OAAO,EAAE;QACzEM,MAAM,CAAC8F,OAAO,CAACjD,MAAM,CAACoD,2BAA2B,EAAE,IAAI,CAAC;OACxD,MAAM;QACNjG,MAAM,CAACgG,WAAW,CAACnD,MAAM,CAACoD,2BAA2B,EAAE,IAAI,CAAC;;;EAG/D;EAEA;;;EAGO1B,iBAAiBA,CAAA;IACvB,IAAI,CAAC2B,KAAK,CAACC,iBAAiB,CAAC,IAAI,CAAC;EACnC;EAEUC,gBAAgBA,CAAA;IACzB,MAAMC,MAAM,GAAG,IAAI,CAACC,YAAY;IAChC,IAAID,MAAM,EAAE;MACX,MAAME,OAAO,GAAG,IAAI,CAACvB,GAAG,CAAC,SAAS,CAAC;MACnC,IAAIuB,OAAO,IAAI,IAAI,EAAE;QACpB,IAAI,CAACjF,QAAQ,CAACkF,KAAK,CAACC,CAAC,GAAGJ,MAAM,CAACvC,IAAI,GAAG/D,MAAM,CAAC2G,eAAe,CAACH,OAAQ,EAAEF,MAAM,CAACtC,KAAK,GAAGsC,MAAM,CAACvC,IAAI,CAAC;;MAGnG,MAAM6C,OAAO,GAAG,IAAI,CAAC3B,GAAG,CAAC,SAAS,CAAC;MACnC,IAAI2B,OAAO,IAAI,IAAI,EAAE;QACpB,IAAI,CAACrF,QAAQ,CAACkF,KAAK,CAACI,CAAC,GAAGP,MAAM,CAACrC,GAAG,GAAGjE,MAAM,CAAC2G,eAAe,CAACC,OAAQ,EAAEN,MAAM,CAACpC,MAAM,GAAGoC,MAAM,CAACrC,GAAG,CAAC;;;EAGpG;EAEO6C,cAAcA,CAAA;IACpB,KAAK,CAACA,cAAc,EAAE;IAEtB;IACA,IAAI,CAACC,aAAa,EAAE;IAEpB,IAAI,IAAI,CAACC,OAAO,CAAC,SAAS,CAAC,EAAE;MAC5B,MAAMC,QAAQ,GAAG,IAAI,CAACC,aAAa,CAACC,OAAO;MAC3C,IAAIF,QAAQ,EAAE;QACbA,QAAQ,CAACjF,OAAO,EAAE;;;IAIpB,IAAI,IAAI,CAACgF,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,aAAa,CAAC,EAAE;MACzD,IAAI,CAACzF,QAAQ,CAAC6F,QAAQ,CAAC,IAAI,CAACnC,GAAG,CAAC,OAAO,CAAC,EAAE,IAAI,CAACA,GAAG,CAAC,aAAa,CAAC,CAAC;MAClE,IAAI,CAACoC,cAAc,EAAE;;IAGtB,IAAI,IAAI,CAACL,OAAO,CAAC,iBAAiB,CAAC,EAAE;MACpC,MAAMM,aAAa,GAAG,IAAI,CAACC,cAAc;MACzC,IAAID,aAAa,EAAE;QAClBA,aAAa,CAACtF,OAAO,EAAE;QACvB,IAAI,CAACuF,cAAc,GAAG5F,SAAS;;MAGhC,MAAM6F,gBAAgB,GAAG,IAAI,CAACC,iBAAiB;MAC/C,IAAID,gBAAgB,EAAE;QACrBA,gBAAgB,CAACxF,OAAO,EAAE;QAC1B,IAAI,CAACyF,iBAAiB,GAAG9F,SAAS;;MAGnC,IAAI,IAAI,CAACsD,GAAG,CAAC,iBAAiB,CAAC,IAAI,SAAS,EAAE;QAC7C,IAAI,CAACwC,iBAAiB,GAAG,IAAI5H,aAAa,CAAC,CAC1C,IAAI,CAAC4B,MAAM,CAACI,EAAE,CAAC,aAAa,EAAE,MAAK;UAClC,IAAI,CAAC0F,cAAc,GAAG,IAAI,CAAC9F,MAAM,CAACI,EAAE,CAAC,mBAAmB,EAAGC,CAAC,IAAI;YAC/D,IAAI,CAAC4F,WAAW,CAAC5F,CAAC,CAACd,KAAK,CAAC;UAC1B,CAAC,CAAC;QACH,CAAC,CAAC,EAEF,IAAI,CAACS,MAAM,CAACI,EAAE,CAAC,YAAY,EAAE,MAAK;UACjC,MAAMyF,aAAa,GAAG,IAAI,CAACC,cAAc;UACzC,IAAID,aAAa,EAAE;YAClBA,aAAa,CAACtF,OAAO,EAAE;YACvB,IAAI,CAACuF,cAAc,GAAG5F,SAAS;;QAEjC,CAAC,CAAC,CAAC,CAAC;;;EAGR;EAEUoF,aAAaA,CAAA;IACtB,IAAI,CAAC,IAAI,CAACY,cAAc,EAAE;MACzB,IAAI,IAAI,CAACX,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC3B,IAAI,IAAI,CAAC/B,GAAG,CAAC,QAAQ,CAAC,EAAE;UACvB,IAAI,CAAC2C,MAAM,CAACC,YAAY,CAAC,QAAQ,CAAC;UAClC,IAAI,CAACvG,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC;SAC7B,MACI;UACJ,IAAI,CAAC,IAAI,CAACwG,QAAQ,EAAE,EAAE;YACrB,IAAI,CAACF,MAAM,CAACC,YAAY,CAAC,SAAS,CAAC;;UAEpC,IAAI,CAACvG,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC;;QAE/B,IAAI,CAACyG,sBAAsB,EAAE;;MAG9B,IAAI,IAAI,CAACf,OAAO,CAAC,UAAU,CAAC,EAAE;QAC7B,IAAI,IAAI,CAAC/B,GAAG,CAAC,UAAU,CAAC,EAAE;UACzB,IAAI,CAAC2C,MAAM,CAACC,YAAY,CAAC,UAAU,CAAC;UACpC,IAAI,CAACvG,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC;SAC9B,MACI;UACJ,IAAI,CAAC,IAAI,CAACwG,QAAQ,EAAE,EAAE;YACrB,IAAI,CAACF,MAAM,CAACC,YAAY,CAAC,SAAS,CAAC;;UAEpC,IAAI,CAACvG,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC;;QAE9B,IAAI,CAACyG,sBAAsB,EAAE;;MAE9B,IAAI,CAACJ,cAAc,GAAG,IAAI;;EAE5B;EAEOK,QAAQA,CAAA;IACd,KAAK,CAACA,QAAQ,EAAE;IAEhB,MAAMC,OAAO,GAAG,IAAI,CAAC1G,QAAQ;IAC7B,MAAME,MAAM,GAAG,IAAI,CAACA,MAAM;IAE1B,IAAI,IAAI,CAACuF,OAAO,CAAC,WAAW,CAAC,EAAE;MAC9B,MAAMkB,SAAS,GAAG,IAAI,CAACjD,GAAG,CAAC,WAAW,CAAC;MACvC,IAAIiD,SAAS,EAAE;QACd,IAAI,CAAC5G,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC;QAE7B,IAAI,CAAC6G,OAAO,GAAG,IAAItI,aAAa,CAAC,CAChC4B,MAAM,CAACI,EAAE,CAAC,aAAa,EAAGuG,EAAE,IAAI;UAC/B,IAAI,CAACC,SAAS,CAACD,EAAE,CAAC;QACnB,CAAC,CAAC,EAEF3G,MAAM,CAACI,EAAE,CAAC,mBAAmB,EAAGuG,EAAE,IAAI;UACrC,IAAI,CAACE,QAAQ,CAACF,EAAE,CAAC;QAClB,CAAC,CAAC,EAEF3G,MAAM,CAACI,EAAE,CAAC,iBAAiB,EAAGuG,EAAE,IAAI;UACnC,IAAI,CAACG,QAAQ,CAACH,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC;OAEL,MACI;QACJ,IAAI,IAAI,CAACD,OAAO,EAAE;UACjB,IAAI,CAACA,OAAO,CAACnG,OAAO,EAAE;UACtB,IAAI,CAACmG,OAAO,GAAGxG,SAAS;;;MAG1BsG,OAAO,CAACO,WAAW,GAAGN,SAAS,GAAG,IAAI,GAAG,KAAK;;IAG/C,IAAI,IAAI,CAAClB,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,eAAe,CAAC,EAAE;MAChG,MAAMyB,WAAW,GAAG,IAAI,CAACxD,GAAG,CAAC,aAAa,CAAC;MAC3C,MAAMyD,WAAW,GAAG,IAAI,CAACzD,GAAG,CAAC,aAAa,CAAC;MAC3C,MAAM0D,aAAa,GAAG,IAAI,CAAC1D,GAAG,CAAC,eAAe,EAAE,OAAO,CAAC;MACxD,IAAI,IAAI,CAAC2D,UAAU,EAAE;QACpB,IAAI,CAACA,UAAU,CAAC5G,OAAO,EAAE;QACzB,IAAI,CAAC4G,UAAU,GAAGjH,SAAS;;MAE5B,IAAI8G,WAAW,IAAIC,WAAW,EAAE;QAC/B,IAAIC,aAAa,IAAI,OAAO,EAAE;UAC7B,IAAI,CAACC,UAAU,GAAG,IAAI/I,aAAa,CAAC,CACnC4B,MAAM,CAACI,EAAE,CAAC,OAAO,EAAE,MAAK;YACvB,IAAI,CAACgH,UAAU,CAAC,MAAM,IAAI,CAACnB,WAAW,EAAE,EAAE,EAAE,CAAC;UAC9C,CAAC,CAAC,EACF1H,MAAM,CAAC8I,gBAAgB,CAACC,QAAQ,EAAE,OAAO,EAAGC,GAAe,IAAI;YAC9D,IAAI,CAACC,WAAW,EAAE;UACnB,CAAC,CAAC,CACF,CAAC;SACF,MACI,IAAIN,aAAa,IAAI,QAAQ,EAAE;UACnC;QAAA,CACA,MACI;UACJ,IAAI,CAACC,UAAU,GAAG,IAAI/I,aAAa,CAAC,CACnC4B,MAAM,CAACI,EAAE,CAAC,aAAa,EAAE,MAAK;YAC7B,IAAI,CAAC6F,WAAW,EAAE;UACnB,CAAC,CAAC,EACFjG,MAAM,CAACI,EAAE,CAAC,YAAY,EAAE,MAAK;YAC5B,IAAI,CAACoH,WAAW,EAAE;UACnB,CAAC,CAAC,CACF,CAAC;;;;IAKL,IAAI,IAAI,CAACjC,OAAO,CAAC,WAAW,CAAC,EAAE;MAC9B,IAAIkC,SAAS,GAAG,IAAI,CAACjE,GAAG,CAAC,WAAW,CAAQ;MAC5C,IAAIiE,SAAS,IAAIA,SAAS,IAAI,MAAM,EAAE;QACrC,IAAI,CAACC,SAAS,GAAG1H,MAAM,CAACI,EAAE,CAAC,OAAO,EAAE,MAAK;UACxC,IAAI,CAAC,IAAI,CAACuH,WAAW,EAAE;YACtB,IAAI,CAAC9H,GAAG,CAAC4H,SAAS,EAAE,CAAC,IAAI,CAACjE,GAAG,CAACiE,SAAS,CAAC,CAAC;;QAE3C,CAAC,CAAC;OACF,MACI;QACJ,IAAI,IAAI,CAACC,SAAS,EAAE;UACnB,IAAI,CAACA,SAAS,CAACnH,OAAO,EAAE;UACxB,IAAI,CAACmH,SAAS,GAAGxH,SAAS;;;;IAM7B,IAAI,IAAI,CAACqF,OAAO,CAAC,SAAS,CAAC,EAAE;MAC5BiB,OAAO,CAACoB,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACtE,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;;IAGpD,IAAI,IAAI,CAAC+B,OAAO,CAAC,UAAU,CAAC,EAAE;MAC7B,IAAI,CAAC1C,eAAe,EAAE;MACtB2D,OAAO,CAACuB,KAAK,GAAG,IAAI,CAACvE,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;;IAGxC,IAAI,IAAI,CAAC+B,OAAO,CAAC,OAAO,CAAC,EAAE;MAC1B,IAAI,CAAC1C,eAAe,EAAE;MACtB2D,OAAO,CAACwB,KAAK,GAAG,IAAI,CAACxE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;;IAGrC,IAAI,IAAI,CAAC+B,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,SAAS,CAAC,EAAE;MACvD,IAAI,CAAC1C,eAAe,EAAE;MACtB,IAAI,CAAC+B,gBAAgB,EAAE;;IAGxB,IAAI,IAAI,CAACW,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC0C,cAAc,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC1C,OAAO,CAAC,aAAa,CAAC,EAAE;MAC7F,IAAI,CAAC,IAAI,CAAC/B,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC0E,UAAU,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC1E,GAAG,CAAC,aAAa,CAAC,EAAE;QACnFgD,OAAO,CAAC2B,OAAO,GAAG,KAAK;QACvB,IAAI,CAACX,WAAW,EAAE;OAClB,MACI;QACJhB,OAAO,CAAC2B,OAAO,GAAG,IAAI;;MAGvB,IAAI,CAACtF,eAAe,EAAE;MACtB,IAAI,IAAI,CAACW,GAAG,CAAC,WAAW,CAAC,EAAE;QAC1B,IAAI,CAAC8C,sBAAsB,EAAE;;;IAI/B,IAAI,IAAI,CAACf,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,QAAQ,CAAC,EAAE;MACpD,IAAI,CAAC1C,eAAe,EAAE;MACtB,IAAI,CAACwB,0BAA0B,EAAE;MAEjC,MAAMhD,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAIA,MAAM,EAAE;QACX,IAAK,IAAI,CAACkE,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC/B,GAAG,CAAC,OAAO,CAAC,YAAYtF,OAAO,IAAM,IAAI,CAACqH,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC/B,GAAG,CAAC,QAAQ,CAAC,YAAYtF,OAAQ,EAAE;UACzImD,MAAM,CAAC+G,SAAS,EAAE;UAClB/G,MAAM,CAACgH,UAAU,GAAG,CAAC;;;MAIvB,IAAI,CAACC,UAAU,GAAG,IAAI;;IAGvB,IAAI,IAAI,CAAC/C,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC0C,cAAc,CAAC,OAAO,CAAC,IAAI,IAAI,CAACA,cAAc,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC1C,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC0C,cAAc,CAAC,UAAU,CAAC,IAAI,IAAI,CAACA,cAAc,CAAC,WAAW,CAAC,IAAI,IAAI,CAACA,cAAc,CAAC,UAAU,CAAC,IAAI,IAAI,CAACA,cAAc,CAAC,WAAW,CAAC,EAAE;MAClU,IAAI,CAACpF,eAAe,EAAE;MACtB,IAAI,CAACyF,UAAU,GAAG,IAAI;;IAGvB,IAAI,IAAI,CAACA,UAAU,EAAE;MACpB,IAAI,CAACC,WAAW,EAAE;;IAGnB,IAAI,IAAI,CAAChD,OAAO,CAAC,WAAW,CAAC,EAAE;MAC9B,MAAMiD,SAAS,GAAG,IAAI,CAAChF,GAAG,CAAC,WAAW,CAAC;MACvC,IAAIgF,SAAS,EAAE;QACd,IAAI,CAAC3I,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC;;MAE9B2G,OAAO,CAACgC,SAAS,GAAGA,SAAS,GAAG,IAAI,GAAG,KAAK;;IAG7C;IACA,IAAI,IAAI,CAACjD,OAAO,CAAC,eAAe,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,gBAAgB,CAAC,EAAE;MACpE,IAAI,IAAI,CAAC/B,GAAG,CAAC,WAAW,CAAC,EAAE;QAC1B,IAAI,CAACkB,KAAK,CAAC+D,sBAAsB,CAAC,IAAI,CAAC;OACvC,MACI;QACJ,IAAI,CAAC/D,KAAK,CAACgE,wBAAwB,CAAC,IAAI,CAAC;;;IAI3C,IAAI,IAAI,CAACnD,OAAO,CAAC,QAAQ,CAAC,EAAE;MAC3B;MACAiB,OAAO,CAACmC,MAAM,GAAG,IAAI,CAACnF,GAAG,CAAC,QAAQ,CAAC;;IAGpC,IAAI,IAAI,CAAC+B,OAAO,CAAC,iBAAiB,CAAC,EAAE;MACpCiB,OAAO,CAACoC,eAAe,GAAG,IAAI,CAACpF,GAAG,CAAC,iBAAiB,CAAC;;IAGtD,IAAI,IAAI,CAAC+B,OAAO,CAAC,cAAc,CAAC,EAAE;MACjC,IAAI,IAAI,CAAC/B,GAAG,CAAC,cAAc,CAAC,EAAE;QAC7B,IAAI,CAACqF,QAAQ,GAAG,IAAIzK,aAAa,CAAC,CACjC4B,MAAM,CAACI,EAAE,CAAC,OAAO,EAAE,MAAK;UACvB;UACA,IAAI,CAAC6F,WAAW,EAAE;QACnB,CAAC,CAAC,EAEFjG,MAAM,CAACI,EAAE,CAAC,MAAM,EAAE,MAAK;UACtB;UACA,IAAI,CAACoH,WAAW,EAAE;QACnB,CAAC,CAAC,CAAC,CAAC;OACL,MACI;QACJ,IAAI,IAAI,CAACqB,QAAQ,EAAE;UAClB,IAAI,CAACA,QAAQ,CAACtI,OAAO,EAAE;UACvB,IAAI,CAACsI,QAAQ,GAAG3I,SAAS;;;;IAK5B,IAAI,IAAI,CAACqF,OAAO,CAAC,WAAW,CAAC,EAAE;MAC9B,IAAI,IAAI,CAAC/B,GAAG,CAAC,WAAW,CAAC,EAAE;QAC1B,IAAI,CAACkB,KAAK,CAAC+D,sBAAsB,CAAC,IAAI,CAAC;OACvC,MACI;QACJ,IAAI,CAAC/D,KAAK,CAACgE,wBAAwB,CAAC,IAAI,CAAC;;MAE1C,IAAI,CAACpC,sBAAsB,EAAE;;IAG9B,IAAI,IAAI,CAACf,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,eAAe,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,cAAc,CAAC,EAAE;MACnV;MACA;MACA,IAAI,CAACe,sBAAsB,EAAE;;IAG9B,IAAI,IAAI,CAACf,OAAO,CAAC,YAAY,CAAC,EAAE;MAC/BiB,OAAO,CAACsC,UAAU,GAAG,IAAI,CAACtF,GAAG,CAAC,YAAY,CAAC;;IAG5C,IAAI,IAAI,CAAC+B,OAAO,CAAC,aAAa,CAAC,EAAE;MAChC,MAAMvF,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAI,IAAI,CAACwD,GAAG,CAAC,aAAa,CAAC,EAAE;QAC5B,IAAI,CAACuF,QAAQ,GAAG,IAAI3K,aAAa,CAAC,CACjC4B,MAAM,CAACI,EAAE,CAAC,OAAO,EAAGuG,EAAE,IAAI;UACzB,IAAIpI,MAAM,CAACyK,YAAY,CAACrC,EAAE,CAACrH,aAAa,CAAC,EAAE;YAC1C,IAAI,CAAC,IAAI,CAAC4I,UAAU,CAAC,eAAe,CAAC,EAAE;cACtC,IAAI,CAACd,UAAU,CAAC,MAAK;gBACpB,IAAI,CAAC6B,WAAW,EAAE;gBAClB,IAAI,IAAI,CAACzF,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,CAACA,GAAG,CAAC,aAAa,CAAC,EAAE;kBACvD,IAAI,CAACyC,WAAW,EAAE;;gBAEnB,IAAI,CAACtD,aAAa,CAAC,eAAe,EAAE,IAAI,CAAC;gBACzC,IAAI,CAAC3C,MAAM,CAACJ,QAAQ,CAAC,aAAa,EAAE;kBACnCP,IAAI,EAAE,aAAa;kBACnBK,MAAM,EAAEiH,EAAE,CAACjH,MAAM;kBACjBJ,aAAa,EAAEqH,EAAE,CAACrH,aAAa;kBAC/BC,KAAK,EAAEoH,EAAE,CAACpH,KAAK;kBACfC,SAAS,EAAEmH,EAAE,CAACnH;iBACd,CAAC;cACH,CAAC,EAAE,EAAE,CAAC;;;QAGT,CAAC,CAAC,EAEFQ,MAAM,CAACI,EAAE,CAAC,iBAAiB,EAAGuG,EAAE,IAAI;UACnC,IAAIpI,MAAM,CAACyK,YAAY,CAACrC,EAAE,CAACrH,aAAa,CAAC,EAAE;YAC1C,IAAI,IAAI,CAAC4I,UAAU,CAAC,eAAe,CAAC,EAAE;cACrC,IAAI,CAACgB,UAAU,EAAE;cACjB,IAAI,IAAI,CAAC1F,GAAG,CAAC,aAAa,CAAC,IAAI,IAAI,CAACA,GAAG,CAAC,aAAa,CAAC,EAAE;gBACvD,IAAI,CAACgE,WAAW,EAAE;;cAEnB,IAAI,CAAC7E,aAAa,CAAC,eAAe,EAAE,KAAK,CAAC;cAC1C,IAAI,CAAC3C,MAAM,CAACJ,QAAQ,CAAC,YAAY,EAAE;gBAClCP,IAAI,EAAE,YAAY;gBAClBK,MAAM,EAAEiH,EAAE,CAACjH,MAAM;gBACjBJ,aAAa,EAAEqH,EAAE,CAACrH,aAAa;gBAC/BC,KAAK,EAAEoH,EAAE,CAACpH,KAAK;gBACfC,SAAS,EAAEmH,EAAE,CAACnH;eACd,CAAC;;;UAIJ,IAAI,IAAI,CAAC2J,OAAO,EAAE;YACjB,IAAI,CAACC,SAAS,CAACzC,EAAE,CAAC;;UAEnB;QACD,CAAC,CAAC,EAEF3G,MAAM,CAACI,EAAE,CAAC,aAAa,EAAE,MAAK;UAC7B,IAAI,CAAC6I,WAAW,EAAE;QACnB,CAAC,CAAC,EAEFjJ,MAAM,CAACI,EAAE,CAAC,YAAY,EAAE,MAAK;UAC5B,IAAI,CAAC8I,UAAU,EAAE;QAClB,CAAC,CAAC,EAEFlJ,MAAM,CAACI,EAAE,CAAC,aAAa,EAAGC,CAAC,IAAI;UAC9B,IAAI,CAACgJ,WAAW,CAAChJ,CAAC,CAAC;QACpB,CAAC,CAAC,CACF,CAAC;OACF,MACI;QACJ,IAAI,CAACP,QAAQ,CAACC,WAAW,GAAG,KAAK;QACjC,IAAI,IAAI,CAACgJ,QAAQ,EAAE;UAClB,IAAI,CAACA,QAAQ,CAACxI,OAAO,EAAE;UACvB,IAAI,CAACwI,QAAQ,GAAG7I,SAAS;;;;IAK5B,IAAI,IAAI,CAACqF,OAAO,CAAC,eAAe,CAAC,EAAE;MAClC,IAAI,CAACzF,QAAQ,CAACwJ,QAAQ,GAAG,IAAI,CAAC9F,GAAG,CAAC,eAAe,EAAE,KAAK,CAAC;;IAG1D,IAAI,IAAI,CAACA,GAAG,CAAC,eAAe,CAAC,IAAI,QAAQ,IAAI,IAAI,CAAC1D,QAAQ,CAACqI,OAAO,EAAE;MACnE,IAAI,CAAClC,WAAW,EAAE;;EAEpB;EAEA;;;;EAIOW,SAASA,CAACvG,CAAsB;IACtC,IAAI,CAACkJ,UAAU,GAAGlJ,CAAC;IACnB,IAAI,CAACL,MAAM,CAACiB,kBAAkB,EAAE;EACjC;EAEA;;;;EAIO6F,QAAQA,CAACzG,CAAsB;IACrC,IAAI,CAACkJ,UAAU,GAAGrJ,SAAS;IAC3B,IAAI,CAACsJ,UAAU,GAAGtJ,SAAS;IAC3B,IAAI,CAACF,MAAM,CAACiB,kBAAkB,EAAE;IAEhC,IAAI,IAAI,CAAC0G,WAAW,EAAE;MACrB,IAAI,CAACA,WAAW,GAAG,KAAK;MAExB,MAAMtI,IAAI,GAAG,UAAU;MACvB,IAAI,IAAI,CAACW,MAAM,CAACuB,SAAS,CAAClC,IAAI,CAAC,EAAE;QAChC,IAAI,CAACW,MAAM,CAACJ,QAAQ,CAACP,IAAI,EAAE;UAC1BA,IAAI,EAAEA,IAAI;UACVK,MAAM,EAAE,IAAI;UACZJ,aAAa,EAAEe,CAAC,CAACf,aAAa;UAC9BC,KAAK,EAAEc,CAAC,CAACd,KAAK;UACdC,SAAS,EAAEa,CAAC,CAACb;SACb,CAAC;;;EAGL;EAEUyJ,WAAWA,CAAA;IACpB,IAAI,CAAC,IAAI,CAAC5C,QAAQ,EAAE,EAAE;MACrB,IAAI,IAAI,CAAC7C,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC2C,MAAM,CAACsD,MAAM,CAAC,aAAa,CAAC,EAAE;QAC5D,IAAI,CAACtD,MAAM,CAACC,YAAY,CAAC,aAAa,CAAC;OACvC,MACI,IAAI,IAAI,CAAC5C,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC2C,MAAM,CAACsD,MAAM,CAAC,eAAe,CAAC,EAAE;QACrE,IAAI,CAACtD,MAAM,CAACC,YAAY,CAAC,eAAe,CAAC;OACzC,MACI;QACJ,IAAI,CAACD,MAAM,CAACC,YAAY,CAAC,OAAO,CAAC;;MAElC,IAAI,IAAI,CAAC5C,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC2F,OAAO,IAAI,IAAI,CAAChD,MAAM,CAACsD,MAAM,CAAC,MAAM,CAAC,EAAE;QACxE,IAAI,CAACtD,MAAM,CAACC,YAAY,CAAC,MAAM,CAAC;;;EAGnC;EAEU8C,UAAUA,CAAA;IACnB,IAAI,CAAC,IAAI,CAAC7C,QAAQ,EAAE,EAAE;MACrB,IAAI,IAAI,CAAC7C,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC2C,MAAM,CAACsD,MAAM,CAAC,QAAQ,CAAC,EAAE;QACvD,IAAI,CAACtD,MAAM,CAACC,YAAY,CAAC,QAAQ,CAAC;OAClC,MACI,IAAI,IAAI,CAAC5C,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC2C,MAAM,CAACsD,MAAM,CAAC,UAAU,CAAC,EAAE;QAChE,IAAI,CAACtD,MAAM,CAACC,YAAY,CAAC,UAAU,CAAC;OACpC,MACI;QACJ,IAAI,IAAI,CAACD,MAAM,CAACsD,MAAM,CAAC,OAAO,CAAC,IAAI,IAAI,CAACtD,MAAM,CAACsD,MAAM,CAAC,aAAa,CAAC,EAAE;UACrE,IAAI,CAACtD,MAAM,CAACC,YAAY,CAAC,SAAS,CAAC;;;MAGrC,IAAI,IAAI,CAAC5C,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC2F,OAAO,IAAI,IAAI,CAAChD,MAAM,CAACsD,MAAM,CAAC,MAAM,CAAC,EAAE;QACxE,IAAI,CAACtD,MAAM,CAACC,YAAY,CAAC,MAAM,CAAC;;;EAGnC;EAEUgD,SAASA,CAAC/I,CAAsB;IACzC,IAAI,CAAC,IAAI,CAACgG,QAAQ,EAAE,EAAE;MACrB,IAAI,IAAI,CAAC7C,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC2C,MAAM,CAACsD,MAAM,CAAC,QAAQ,CAAC,EAAE;QACvD,IAAI,CAACtD,MAAM,CAACC,YAAY,CAAC,QAAQ,CAAC;OAClC,MACI,IAAI,IAAI,CAAC5C,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC2C,MAAM,CAACsD,MAAM,CAAC,UAAU,CAAC,EAAE;QAChE,IAAI,CAACtD,MAAM,CAACC,YAAY,CAAC,UAAU,CAAC;OACpC,MACI,IAAI,IAAI,CAACD,MAAM,CAACsD,MAAM,CAAC,MAAM,CAAC,EAAE;QACpC,IAAI,IAAI,CAACC,OAAO,EAAE,EAAE;UACnB,IAAI,CAACvD,MAAM,CAACC,YAAY,CAAC,OAAO,CAAC;SACjC,MACI;UACJ,IAAI,CAACD,MAAM,CAACC,YAAY,CAAC,SAAS,CAAC;;;MAKrC;MACA,IAAI,CAACuD,UAAU,GAAGzJ,SAAS;MAE3B,MAAM0J,SAAS,GAAGrL,MAAM,CAACsL,YAAY,CAACxJ,CAAC,CAACf,aAAa,CAAC;MACtD,OAAO,IAAI,CAACwK,WAAW,CAACF,SAAS,CAAC;MAElC,IAAIlL,OAAO,CAACqL,IAAI,CAAC,IAAI,CAACD,WAAW,CAAC,CAACE,MAAM,IAAI,CAAC,EAAE;QAC/C,IAAI,CAACb,OAAO,GAAG,KAAK;;;EAGvB;EAEOzH,SAASA,CAACrB,CAAsB;IACtC;IACA;IACA;IACA;IACA;IACA;IAEA,MAAMuJ,SAAS,GAAGrL,MAAM,CAACsL,YAAY,CAACxJ,CAAC,CAACf,aAAa,CAAC;IACtD,MAAM2K,SAAS,GAAG,IAAI,CAACH,WAAW,CAACF,SAAS,CAAC;IAC7C,IAAIK,SAAS,EAAE;MACd,MAAMhF,CAAC,GAAG4C,IAAI,CAACqC,GAAG,CAACD,SAAS,CAAChF,CAAC,GAAG5E,CAAC,CAACd,KAAK,CAAC0F,CAAC,CAAC;MAC3C,MAAMG,CAAC,GAAGyC,IAAI,CAACqC,GAAG,CAACD,SAAS,CAAC7E,CAAC,GAAG/E,CAAC,CAACd,KAAK,CAAC6F,CAAC,CAAC;MAC3C,OAAQH,CAAC,GAAG,CAAC,IAAMG,CAAC,GAAG,CAAE;;IAG1B,OAAO,KAAK;EACb;EAEO3D,QAAQA,CAAA;IACd,OAAO/C,OAAO,CAACqL,IAAI,CAAC,IAAI,CAACD,WAAW,CAAC,CAACE,MAAM,GAAG,CAAC;EACjD;EAEUX,WAAWA,CAAChJ,CAAsB;IAE3C,MAAMgB,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,IAAIA,MAAM,IAAI,CAAC,IAAI,CAACmC,GAAG,CAAC,WAAW,CAAC,EAAE;MACrCnC,MAAM,CAACgI,WAAW,CAAChJ,CAAC,CAAC;;IAGtB,IAAI,IAAI,CAACmD,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC6C,QAAQ,EAAE,EAAE;MAChD,IAAI,IAAI,CAACF,MAAM,CAACsD,MAAM,CAAC,MAAM,CAAC,EAAE;QAC/B,IAAI,CAACtD,MAAM,CAACC,YAAY,CAAC,MAAM,CAAC;;MAEjC,IAAI,CAACuD,UAAU,GAAG;QACjB1E,CAAC,EAAE5E,CAAC,CAACd,KAAK,CAAC0F,CAAC;QACZG,CAAC,EAAE/E,CAAC,CAACd,KAAK,CAAC6F;OACX;MAGD;MACA,IAAI,CAAC+D,OAAO,GAAG,IAAI;MAEnB,MAAMS,SAAS,GAAGrL,MAAM,CAACsL,YAAY,CAACxJ,CAAC,CAACf,aAAa,CAAC;MACtD,IAAI,CAACwK,WAAW,CAACF,SAAS,CAAC,GAAG;QAC7B3E,CAAC,EAAE5E,CAAC,CAACd,KAAK,CAAC0F,CAAC;QACZG,CAAC,EAAE/E,CAAC,CAACd,KAAK,CAAC6F;OACX;;EAEH;EAEA;;;;EAIOyB,QAAQA,CAACxG,CAAsB;IACrC,IAAI8J,SAAS,GAAG,IAAI,CAACZ,UAAU;IAE/B,IAAIY,SAAS,EAAE;MAEd,IAAIA,SAAS,CAAC3K,SAAS,IAAI,CAACa,CAAC,CAACb,SAAS,EAAE;QACxC,OAAO,IAAI;;MAGZ,IAAIuI,KAAK,GAAG,CAAC;MAEb,IAAI1G,MAAM,GAAG,IAAI,CAACA,MAAM;MACxB,OAAOA,MAAM,IAAI,IAAI,EAAE;QACtB0G,KAAK,IAAI1G,MAAM,CAACmC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;QAClCnC,MAAM,GAAGA,MAAM,CAACA,MAAM;;MAGvB,IAAI4D,CAAC,GAAG5E,CAAC,CAACd,KAAK,CAAC0F,CAAC,GAAGkF,SAAS,CAAC5K,KAAK,CAAC0F,CAAC;MACrC,IAAIG,CAAC,GAAG/E,CAAC,CAACd,KAAK,CAAC6F,CAAC,GAAG+E,SAAS,CAAC5K,KAAK,CAAC6F,CAAC;MAErC,MAAMpF,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAImK,SAAS,CAAC3K,SAAS,IAAI,CAAC,IAAI,CAACmI,WAAW,EAAE;QAC7C,IAAI,CAACA,WAAW,GAAG,IAAI;QACvB,IAAI,CAAC4B,UAAU,GAAGlJ,CAAC;QAEnB,IAAI,CAACmJ,UAAU,GAAG;UACjBvE,CAAC,EAAE,IAAI,CAACA,CAAC,EAAE;UACXG,CAAC,EAAE,IAAI,CAACA,CAAC;SACT;QAED,MAAM/F,IAAI,GAAG,WAAW;QACxB,IAAIW,MAAM,CAACuB,SAAS,CAAClC,IAAI,CAAC,EAAE;UAC3BW,MAAM,CAACJ,QAAQ,CAACP,IAAI,EAAE;YACrBA,IAAI,EAAEA,IAAI;YACVK,MAAM,EAAE,IAAI;YACZJ,aAAa,EAAEe,CAAC,CAACf,aAAa;YAC9BC,KAAK,EAAEc,CAAC,CAACd,KAAK;YACdC,SAAS,EAAEa,CAAC,CAACb;WACb,CAAC;;;MAIJ,IAAI,IAAI,CAACmI,WAAW,EAAE;QACrB,IAAIyC,SAAS,GAAG,IAAI,CAACZ,UAAW;QAEhC,IAAI,CAAC3J,GAAG,CAAC,GAAG,EAAEuK,SAAS,CAACnF,CAAC,GAAGA,CAAC,GAAGtG,KAAK,CAAC0L,GAAG,CAACtC,KAAK,CAAC,GAAG3C,CAAC,GAAGzG,KAAK,CAAC2L,GAAG,CAACvC,KAAK,CAAC,CAAC;QACxE,IAAI,CAAClI,GAAG,CAAC,GAAG,EAAEuK,SAAS,CAAChF,CAAC,GAAGA,CAAC,GAAGzG,KAAK,CAAC0L,GAAG,CAACtC,KAAK,CAAC,GAAG9C,CAAC,GAAGtG,KAAK,CAAC2L,GAAG,CAACvC,KAAK,CAAC,CAAC;QAExE,MAAM1I,IAAI,GAAG,SAAS;QACtB,IAAIW,MAAM,CAACuB,SAAS,CAAClC,IAAI,CAAC,EAAE;UAC3BW,MAAM,CAACJ,QAAQ,CAACP,IAAI,EAAE;YACrBA,IAAI,EAAEA,IAAI;YACVK,MAAM,EAAE,IAAI;YACZJ,aAAa,EAAEe,CAAC,CAACf,aAAa;YAC9BC,KAAK,EAAEc,CAAC,CAACd,KAAK;YACdC,SAAS,EAAEa,CAAC,CAACb;WACb,CAAC;;OAGH,MAAM;QACN,IAAIqI,IAAI,CAAC0C,KAAK,CAACtF,CAAC,EAAEG,CAAC,CAAC,GAAG,CAAC,EAAE;UACzB,IAAI,CAACuC,WAAW,GAAG,IAAI;UACvB,IAAI,CAAC4B,UAAU,GAAGlJ,CAAC;UAEnB,IAAI,CAACmJ,UAAU,GAAG;YACjBvE,CAAC,EAAE,IAAI,CAACA,CAAC,EAAE;YACXG,CAAC,EAAE,IAAI,CAACA,CAAC;WACT;UAED,MAAM/F,IAAI,GAAG,WAAW;UACxB,IAAIW,MAAM,CAACuB,SAAS,CAAClC,IAAI,CAAC,EAAE;YAC3BW,MAAM,CAACJ,QAAQ,CAACP,IAAI,EAAE;cACrBA,IAAI,EAAEA,IAAI;cACVK,MAAM,EAAE,IAAI;cACZJ,aAAa,EAAEe,CAAC,CAACf,aAAa;cAC9BC,KAAK,EAAEc,CAAC,CAACd,KAAK;cACdC,SAAS,EAAEa,CAAC,CAACb;aACb,CAAC;;;;;EAKP;EAEO+I,WAAWA,CAAA,GAElB;EAEUiC,UAAUA,CAAA;IACnB,IAAI,CAAC1F,YAAY,GAAG,IAAI,CAAChF,QAAQ,CAAC2K,cAAc,EAAE;EACnD;EAEA;;;;;;EAMOC,KAAKA,CAAA;IACX,IAAIC,IAAI,GAA0B,IAAI,CAACtJ,MAAM;IAC7C,IAAIqJ,KAAK,GAAG,CAAC;IAEb,OAAO,IAAI,EAAE;MACZ,IAAIC,IAAI,EAAE;QACT,EAAED,KAAK;QACPC,IAAI,GAAGA,IAAI,CAACtJ,MAAM;OAElB,MAAM;QACN,OAAOqJ,KAAK;;;EAGf;EAEA;;;EAGOE,aAAaA,CAAA;IACnB,IAAI,CAACtC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACF,SAAS,EAAE;EACjB;EAEA;;;EAGOvF,eAAeA,CAAA;IACrB,IAAI,IAAI,CAACW,GAAG,CAAC,YAAY,CAAC,EAAE;MAC3B,MAAMgD,OAAO,GAAG,IAAI,CAAC1G,QAAQ;MAC7B,IAAI,CAAC4E,KAAK,CAACmG,eAAe,CAAC,IAAI,CAAC;MAChCrE,OAAO,CAACsE,UAAU,GAAG,IAAI;MACzBtE,OAAO,CAACuE,gBAAgB,EAAE;MAE1B,MAAM1J,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAIA,MAAM,IAAI,IAAI,CAACmC,GAAG,CAAC,UAAU,CAAC,IAAI,UAAU,EAAE;QACjD,IAAInC,MAAM,CAACmC,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI,IAAInC,MAAM,CAACmC,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAInC,MAAM,CAACmC,GAAG,CAAC,QAAQ,CAAC,EAAE;UACxFnC,MAAM,CAACwB,eAAe,EAAE;;;MAI1B,IAAI,IAAI,CAACW,GAAG,CAAC,WAAW,CAAC,IAAI,IAAI,CAACwH,OAAO,EAAE,EAAE;QAC5C,IAAI,CAAC1E,sBAAsB,EAAE;;;EAGhC;EAEA;;;EAGOA,sBAAsBA,CAAA;IAC5B;IACA,IAAI,CAAC5B,KAAK,CAACuG,wBAAwB,CAAC,IAAI,CAAC;IACzC;EACD;EAEA;;;EAGOrF,cAAcA,CAAA;IACpB;IACA,IAAI,CAAC9F,QAAQ,CAAC8F,cAAc,CAAC,IAAI,CAAC;EACnC;EAEA;;;EAGOwC,SAASA,CAAA;IACf,KAAK,CAACA,SAAS,EAAE;IACjB,IAAI,CAACxC,cAAc,EAAE;EACtB;EAEOsF,aAAaA,CAAA;IACnB,MAAMC,SAAS,GAAG,IAAI,CAACC,oBAAoB;IAE3C,IAAIC,SAAkB;IAEtB;IACA,IAAI,CAAC,IAAI,CAAC7H,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC0E,UAAU,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC1E,GAAG,CAAC,aAAa,CAAC,EAAE;MACnF6H,SAAS,GAAG;QACX/I,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CAAC;QACRC,GAAG,EAAE,CAAC;QACNC,MAAM,EAAE;OACR;MACD,IAAI,CAACqC,YAAY,GAAGuG,SAAS;MAC7B,IAAI,CAACD,oBAAoB,GAAGC,SAAS;KACrC,MACI;MACJ,IAAI,CAACb,UAAU,EAAE;MACjB,IAAI,CAACc,aAAa,CAAC,IAAI,CAACxG,YAAY,CAAC;MACrC,IAAI,CAACF,gBAAgB,EAAE;MACvB,IAAI,CAACwG,oBAAoB,GAAG,IAAI,CAACtL,QAAQ,CAACyL,iBAAiB,CAAC,IAAI,CAACzG,YAAY,CAAC;MAC9EuG,SAAS,GAAG,IAAI,CAACD,oBAAqB;;IAGvC,IAAI,CAACD,SAAS,IAAKA,SAAS,CAAC7I,IAAI,KAAK+I,SAAS,CAAC/I,IAAI,IAAI6I,SAAS,CAAC3I,GAAG,KAAK6I,SAAS,CAAC7I,GAAG,IAAI2I,SAAS,CAAC5I,KAAK,KAAK8I,SAAS,CAAC9I,KAAK,IAAI4I,SAAS,CAAC1I,MAAM,KAAK4I,SAAS,CAAC5I,MAAO,EAAE;MACzK,MAAMwB,SAAS,GAAG,eAAe;MACjC,IAAI,IAAI,CAACjE,MAAM,CAACuB,SAAS,CAAC0C,SAAS,CAAC,EAAE;QACrC,IAAI,CAACjE,MAAM,CAACJ,QAAQ,CAACqE,SAAS,EAAE;UAAE5E,IAAI,EAAE4E,SAAS;UAAEvE,MAAM,EAAE;QAAI,CAAE,CAAC;;MAEnE,IAAI,IAAI,CAAC2B,MAAM,EAAE;QAChB,IAAI,CAACA,MAAM,CAAC+G,SAAS,EAAE;QACvB,IAAI,CAAC/G,MAAM,CAACwB,eAAe,EAAE;;;EAGhC;EAEOyI,aAAaA,CAACzG,MAAe;IACnC,IAAI2G,QAAQ,GAAG,IAAI,CAAChI,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC0E,UAAU,CAAC,UAAU,CAAC,CAAC;IAChE,IAAIuD,SAAS,GAAG,IAAI,CAACjI,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC0E,UAAU,CAAC,WAAW,CAAC,CAAC;IAEnE,IAAIzJ,KAAK,CAACiN,QAAQ,CAACF,QAAQ,CAAC,EAAE;MAC7B,IAAI3G,MAAM,CAACtC,KAAK,GAAGsC,MAAM,CAACvC,IAAI,GAAGkJ,QAAQ,EAAE;QAC1C3G,MAAM,CAACtC,KAAK,GAAGsC,MAAM,CAACvC,IAAI,GAAGkJ,QAAQ;;;IAIvC,IAAI/M,KAAK,CAACiN,QAAQ,CAACD,SAAS,CAAC,EAAE;MAC9B,IAAI5G,MAAM,CAACpC,MAAM,GAAGoC,MAAM,CAACrC,GAAG,GAAGiJ,SAAS,EAAE;QAC3C5G,MAAM,CAACpC,MAAM,GAAGoC,MAAM,CAACrC,GAAG,GAAGiJ,SAAS;;;IAIxC,IAAIE,YAAY,GAAG,IAAI,CAACzD,UAAU,CAAC,OAAO,CAAC;IAC3C,IAAI0D,aAAa,GAAG,IAAI,CAAC1D,UAAU,CAAC,QAAQ,CAAC;IAE7C,IAAIzJ,KAAK,CAACiN,QAAQ,CAACC,YAAY,CAAC,EAAE;MACjC,IAAIA,YAAY,GAAG,CAAC,EAAE;QACrB9G,MAAM,CAACtC,KAAK,GAAGsC,MAAM,CAACvC,IAAI,GAAGqJ,YAAY;OACzC,MACI;QACJ9G,MAAM,CAACvC,IAAI,GAAGuC,MAAM,CAACtC,KAAK,GAAGoJ,YAAY;;;IAI3C,IAAIlN,KAAK,CAACiN,QAAQ,CAACE,aAAa,CAAC,EAAE;MAClC,IAAIA,aAAa,GAAG,CAAC,EAAE;QACtB/G,MAAM,CAACpC,MAAM,GAAGoC,MAAM,CAACrC,GAAG,GAAGoJ,aAAa;OAC1C,MACI;QACJ/G,MAAM,CAACrC,GAAG,GAAGqC,MAAM,CAACpC,MAAM,GAAGmJ,aAAa;;;EAG7C;EAEUC,aAAaA,CAACxK,MAA6B;IACpD,IAAIA,MAAM,EAAE;MACXA,MAAM,CAACyK,QAAQ,CAACC,WAAW,CAAC,IAAI,CAAC;MACjCvN,MAAM,CAACgG,WAAW,CAACnD,MAAM,CAACkD,uBAAuB,EAAE,IAAI,CAAC;MACxD/F,MAAM,CAACgG,WAAW,CAACnD,MAAM,CAACoD,2BAA2B,EAAE,IAAI,CAAC;;EAE9D;EAEOuH,WAAWA,CAAA;IACjB,KAAK,CAACA,WAAW,EAAE;IACnB,IAAI,CAAC1D,UAAU,GAAG,KAAK;IACvB,IAAI,CAACpC,cAAc,GAAG,KAAK;EAC5B;EAEA;;;EAGO+F,KAAKA,CAAA;IACX,IAAI,CAAChG,WAAW,EAAE;IAClB,IAAI,CAACgD,WAAW,EAAE;EACnB;EAEA;;;EAGOiD,OAAOA,CAAA;IACb,IAAI,CAAC1E,WAAW,EAAE;IAClB,IAAI,CAAC0B,UAAU,EAAE;EAClB;EAEA;;;EAGOjD,WAAWA,CAAC1G,KAAc;IAChC,MAAMmG,OAAO,GAAG,IAAI,CAACyG,UAAU,EAAE;IACjC,MAAMnF,WAAW,GAAG,IAAI,CAACxD,GAAG,CAAC,aAAa,CAAC;IAC3C,MAAMyD,WAAW,GAAG,IAAI,CAACzD,GAAG,CAAC,aAAa,CAAC;IAE3C,IAAI,CAACwD,WAAW,IAAIC,WAAW,KAAKvB,OAAO,EAAE;MAC5C,MAAM0G,eAAe,GAAG,IAAI,CAAC5I,GAAG,CAAC,iBAAiB,CAAC;MACnD,MAAM6I,aAAa,GAAG,IAAI,CAACnE,UAAU,CAAC,eAAe,EAAE,IAAI,CAAC;MAE5D,IAAIkE,eAAe,IAAI,OAAO,IAAI,CAAC7M,KAAK,EAAE;QACzC,IAAI,CAACO,QAAQ,CAACwM,UAAU,EAAE;QAC1B/M,KAAK,GAAG,IAAI,CAACgN,QAAQ,CAACF,aAAa,CAACG,gBAAgB,EAAE,CAAC;;MAGxD9G,OAAO,CAAC7F,GAAG,CAAC,SAAS,EAAEN,KAAK,CAAC;MAC7BmG,OAAO,CAAC7F,GAAG,CAAC,eAAe,EAAEwM,aAAa,CAAC;MAE3C,IAAI,CAAC3G,OAAO,CAAClC,GAAG,CAAC,GAAG,CAAC,EAAE;QACtBkC,OAAO,CAAC7F,GAAG,CAAC,GAAG,EAAEN,KAAK,CAAC0F,CAAC,CAAC;;MAE1B,IAAI,CAACS,OAAO,CAAClC,GAAG,CAAC,GAAG,CAAC,EAAE;QACtBkC,OAAO,CAAC7F,GAAG,CAAC,GAAG,EAAEN,KAAK,CAAC6F,CAAC,CAAC;;MAG1B,IAAI4B,WAAW,EAAE;QAChBtB,OAAO,CAAC+G,KAAK,CAAC5M,GAAG,CAAC,MAAM,EAAEmH,WAAW,CAAC;;MAEvC,IAAIC,WAAW,EAAE;QAChBvB,OAAO,CAAC+G,KAAK,CAAC5M,GAAG,CAAC,MAAM,EAAEoH,WAAW,CAAC;;MAEvC,MAAMxD,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC9B,IAAIA,QAAQ,EAAE;QACbiC,OAAO,CAAC+G,KAAK,CAAC3I,YAAY,CAACL,QAAQ,CAAC;;MAGrC,IAAI,IAAI,CAACD,GAAG,CAAC,eAAe,CAAC,IAAI,QAAQ,KAAKjE,KAAK,CAAC0F,CAAC,GAAG,CAAC,IAAI1F,KAAK,CAAC0F,CAAC,GAAG,IAAI,CAACP,KAAK,CAACgI,KAAK,EAAE,IAAInN,KAAK,CAAC6F,CAAC,GAAG,CAAC,IAAI7F,KAAK,CAAC6F,CAAC,GAAG,IAAI,CAACV,KAAK,CAACiI,MAAM,EAAE,CAAC,EAAE;QAC3I,IAAI,CAACnF,WAAW,EAAE;QAClB;;MAGD9B,OAAO,CAAC+G,KAAK,CAACG,IAAI,CAACC,aAAa,EAAE;MAClC,MAAMC,OAAO,GAAGpH,OAAO,CAACqH,IAAI,EAAE;MAC9B,IAAI,CAACpK,aAAa,CAAC,gBAAgB,EAAE,IAAI,CAAC;MAC1C,OAAOmK,OAAO;;EAEhB;EAEA;;;EAGOtF,WAAWA,CAAA;IACjB,MAAM9B,OAAO,GAAG,IAAI,CAACyG,UAAU,EAAE;IACjC,IAAIzG,OAAO,EAAE;MACZ,IAAIA,OAAO,CAAClC,GAAG,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC0E,UAAU,CAAC,eAAe,EAAE,IAAI,CAAC,EAAE;QAC3E,IAAI8E,OAAO,GAAGtH,OAAO,CAAClC,GAAG,CAAC,iBAAiB,CAAC,IAAIkC,OAAO,CAAClC,GAAG,CAAC,wBAAwB,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,GAAGtD,SAAS;QAC/G,MAAM4M,OAAO,GAAGpH,OAAO,CAACuH,IAAI,CAACD,OAAO,CAAC;QACrC,IAAI,CAACrK,aAAa,CAAC,gBAAgB,EAAE,KAAK,CAAC;QAC3C,OAAOmK,OAAO;;;EAGjB;EAEON,gBAAgBA,CAAA;IACtB,MAAM3H,MAAM,GAAG,IAAI,CAACC,YAAa;IAEjC,IAAID,MAAM,EAAE;MACX,IAAII,CAAC,GAAG,CAAC;MACT,IAAIG,CAAC,GAAG,CAAC;MAET,IAAI,CAAC,IAAI,CAAC5B,GAAG,CAAC,YAAY,CAAC,EAAE;QAC5ByB,CAAC,GAAG1G,MAAM,CAAC2G,eAAe,CAAC,IAAI,CAAC1B,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,IAAI,CAACkJ,KAAK,EAAE,CAAC;QACjEtH,CAAC,GAAG7G,MAAM,CAAC2G,eAAe,CAAC,IAAI,CAAC1B,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,IAAI,CAACmJ,MAAM,EAAE,CAAC;OAClE,MACI;QACJ1H,CAAC,GAAGJ,MAAM,CAACvC,IAAI,GAAG/D,MAAM,CAAC2G,eAAe,CAAC,IAAI,CAAC1B,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,EAAEqB,MAAM,CAACtC,KAAK,GAAGsC,MAAM,CAACvC,IAAI,CAAC;QAC7F8C,CAAC,GAAGP,MAAM,CAACrC,GAAG,GAAGjE,MAAM,CAAC2G,eAAe,CAAC,IAAI,CAAC1B,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,EAAEqB,MAAM,CAACpC,MAAM,GAAGoC,MAAM,CAACrC,GAAG,CAAC;;MAG7F,OAAO;QAAEyC,CAAC;QAAEG;MAAC,CAAE;;IAEhB,OAAO;MAAEH,CAAC,EAAE,CAAC;MAAEG,CAAC,EAAE;IAAC,CAAE;EACtB;EAEA;;;;;EAKO+G,UAAUA,CAAA;IAChB,IAAIzG,OAAO,GAAG,IAAI,CAAClC,GAAG,CAAC,SAAS,CAAC;IACjC,IAAI,CAACkC,OAAO,EAAE;MACb,IAAIrE,MAAM,GAAG,IAAI,CAACA,MAAM;MACxB,IAAIA,MAAM,EAAE;QACX,OAAOA,MAAM,CAAC8K,UAAU,EAAE;;KAE3B,MACI;MACJ,OAAOzG,OAAO;;EAEhB;EAEOwH,eAAeA,CAAA;IAErB,MAAM7L,MAAM,GAAG,IAAI,CAACA,MAAM;IAE1B,IAAI8L,EAAE,GAAG,IAAI,CAAC3J,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IAC1B,IAAI4J,EAAE,GAAG,IAAI,CAAC5J,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;IAE1B,IAAIyB,CAAC,GAAG,IAAI,CAACzB,GAAG,CAAC,GAAG,CAAC;IACrB,IAAI6J,EAAE,GAAG,IAAI,CAACnF,UAAU,CAAC,GAAG,CAAC;IAE7B,IAAIoF,EAAE,GAAG,CAAC;IACV,IAAIC,EAAE,GAAG,CAAC;IAEV,MAAMC,QAAQ,GAAG,IAAI,CAAChK,GAAG,CAAC,UAAU,CAAC;IAErC,IAAIyB,CAAC,YAAY/G,OAAO,EAAE;MACzB,IAAImD,MAAM,EAAE;QACX4D,CAAC,GAAG5D,MAAM,CAACoM,UAAU,EAAE,GAAGxI,CAAC,CAACd,KAAK,GAAG9C,MAAM,CAACmC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;OAChE,MACI;QACJyB,CAAC,GAAG,CAAC;;;IAGP,IAAIxG,KAAK,CAACiN,QAAQ,CAACzG,CAAC,CAAC,EAAE;MACtBqI,EAAE,GAAGrI,CAAC,GAAGkI,EAAE;KACX,MACI;MACJ,IAAIE,EAAE,IAAI,IAAI,EAAE;QACfC,EAAE,GAAGD,EAAE;OACP,MACI,IAAIhM,MAAM,EAAE;QAChB,IAAImM,QAAQ,IAAI,UAAU,EAAE;UAC3BF,EAAE,GAAGjM,MAAM,CAACmC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,GAAG2J,EAAE;;;;IAMzC,IAAI/H,CAAC,GAAG,IAAI,CAAC5B,GAAG,CAAC,GAAG,CAAC;IACrB,IAAIkK,EAAE,GAAG,IAAI,CAACxF,UAAU,CAAC,GAAG,CAAC;IAE7B,IAAI9C,CAAC,YAAYlH,OAAO,EAAE;MACzB,IAAImD,MAAM,EAAE;QACX+D,CAAC,GAAG/D,MAAM,CAACsM,WAAW,EAAE,GAAGvI,CAAC,CAACjB,KAAK,GAAG9C,MAAM,CAACmC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;OAChE,MACI;QACJ4B,CAAC,GAAG,CAAC;;;IAGP,IAAI3G,KAAK,CAACiN,QAAQ,CAACtG,CAAC,CAAC,EAAE;MACtBmI,EAAE,GAAGnI,CAAC,GAAGgI,EAAE;KACX,MACI;MACJ,IAAIM,EAAE,IAAI,IAAI,EAAE;QACfH,EAAE,GAAGG,EAAE;OACP,MACI,IAAIrM,MAAM,EAAE;QAChB,IAAImM,QAAQ,IAAI,UAAU,EAAE;UAC3BD,EAAE,GAAGlM,MAAM,CAACmC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,GAAG4J,EAAE;;;;IAKxC,MAAM5G,OAAO,GAAG,IAAI,CAAC1G,QAAQ;IAE7B,IAAI0G,OAAO,CAACvB,CAAC,IAAIqI,EAAE,IAAI9G,OAAO,CAACpB,CAAC,IAAImI,EAAE,EAAE;MACvC/G,OAAO,CAACuE,gBAAgB,EAAE;MAC1BvE,OAAO,CAACvB,CAAC,GAAGqI,EAAE;MACd9G,OAAO,CAACpB,CAAC,GAAGmI,EAAE;MAEd,MAAMtJ,SAAS,GAAG,iBAAiB;MACnC,IAAI,IAAI,CAACjE,MAAM,CAACuB,SAAS,CAAC0C,SAAS,CAAC,EAAE;QACrC,IAAI,CAACjE,MAAM,CAACJ,QAAQ,CAACqE,SAAS,EAAE;UAAE5E,IAAI,EAAE4E,SAAS;UAAEvE,MAAM,EAAE;QAAI,CAAE,CAAC;;;IAIpE;IACA,IAAI,IAAI,CAACwI,UAAU,CAAC,gBAAgB,CAAC,EAAE;MACtC,IAAI,CAACjC,WAAW,EAAE;;EAEpB;EAEA;;;;;EAKOhB,CAACA,CAAA;IACP,IAAIA,CAAC,GAAG,IAAI,CAACzB,GAAG,CAAC,GAAG,CAAC;IACrB,IAAI6J,EAAE,GAAG,IAAI,CAACnF,UAAU,CAAC,GAAG,CAAC;IAE7B,MAAM7G,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,IAAIA,MAAM,EAAE;MACX,IAAI4D,CAAC,YAAY/G,OAAO,EAAE;QACzB,OAAOK,MAAM,CAAC2G,eAAe,CAACD,CAAC,EAAE5D,MAAM,CAACoM,UAAU,EAAE,CAAC,GAAGpM,MAAM,CAACmC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;OACpF,MACI;QACJ,IAAI,CAAC/E,KAAK,CAACiN,QAAQ,CAACzG,CAAC,CAAC,EAAE;UACvB,IAAIoI,EAAE,IAAI,IAAI,EAAE;YACf,OAAOA,EAAE;WACT,MACI;YACJ,OAAOhM,MAAM,CAACmC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC1D,QAAQ,CAACmF,CAAC,CAAC;;SAElD,MACI;UACJ,OAAOA,CAAC;;;;IAKX,OAAO,IAAI,CAACnF,QAAQ,CAACmF,CAAC;EACvB;EAEA;;;;;EAKOG,CAACA,CAAA;IAEP,IAAIsI,EAAE,GAAG,IAAI,CAACxF,UAAU,CAAC,GAAG,CAAC;IAE7B,IAAIwF,EAAE,IAAI,IAAI,EAAE;MACf,OAAOA,EAAE;;IAGV,IAAItI,CAAC,GAAG,IAAI,CAAC5B,GAAG,CAAC,GAAG,CAAC;IACrB,MAAMnC,MAAM,GAAG,IAAI,CAACA,MAAM;IAE1B,IAAIA,MAAM,EAAE;MACX,IAAI+D,CAAC,YAAYlH,OAAO,EAAE;QACzB,OAAOK,MAAM,CAAC2G,eAAe,CAACE,CAAC,EAAE/D,MAAM,CAACsM,WAAW,EAAE,CAAC,GAAGtM,MAAM,CAACmC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;OACpF,MACI;QACJ,IAAI,CAAC/E,KAAK,CAACiN,QAAQ,CAACtG,CAAC,CAAC,EAAE;UACvB,IAAIsI,EAAE,IAAI,IAAI,EAAE;YACf,OAAOA,EAAE;WACT,MACI;YACJ,OAAOrM,MAAM,CAACmC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC1D,QAAQ,CAACsF,CAAC,CAAC;;SAEjD,MACI;UACJ,OAAOA,CAAC;;;;IAKX,OAAO,IAAI,CAACtF,QAAQ,CAACsF,CAAC;EACvB;EAEUwI,QAAQA,CAAA;IACjB,KAAK,CAACA,QAAQ,EAAE;IAChB,IAAI,CAAC9N,QAAQ,CAACS,OAAO,EAAE;IACvB,IAAI,CAAC0C,oBAAoB,EAAE;IAC3B,IAAI,CAAC4I,aAAa,CAAC,IAAI,CAACxK,MAAM,CAAC;IAC/B,IAAI,CAACqD,KAAK,CAACmJ,mBAAmB,CAAC,IAAI,CAAC;IAEpC,MAAMnI,OAAO,GAAG,IAAI,CAAClC,GAAG,CAAC,SAAS,CAAC;IACnC,IAAIkC,OAAO,EAAE;MACZA,OAAO,CAACnF,OAAO,EAAE;;IAGlB,IAAI,CAAC6H,SAAS,EAAE;EACjB;EAEA;;;EAGO0F,mBAAmBA,CAAA;IACzB,IAAI,CAACxC,aAAa,CAAC,IAAI,CAACF,oBAAoB,CAAC;IAC7C,OAAO,IAAI,CAACA,oBAAoB;EACjC;EAEA;;;;;;EAMO2C,WAAWA,CAAA;IACjB,OAAO,IAAI,CAACjJ,YAAY;EACzB;EAEA;;;;;;EAMOD,MAAMA,CAAA;IACZ,MAAMA,MAAM,GAAG,IAAI,CAACuG,oBAAoB;IACxC,MAAMnG,CAAC,GAAG,IAAI,CAACA,CAAC,EAAE;IAClB,MAAMG,CAAC,GAAG,IAAI,CAACA,CAAC,EAAE;IAClB,OAAO;MAAE9C,IAAI,EAAEuC,MAAM,CAACvC,IAAI,GAAG2C,CAAC;MAAE1C,KAAK,EAAEsC,MAAM,CAACtC,KAAK,GAAG0C,CAAC;MAAEzC,GAAG,EAAEqC,MAAM,CAACrC,GAAG,GAAG4C,CAAC;MAAE3C,MAAM,EAAEoC,MAAM,CAACpC,MAAM,GAAG2C;IAAC,CAAE;EAC1G;EAEA;;;;;;EAMO4I,YAAYA,CAAA;IAClB,MAAMnJ,MAAM,GAAG,IAAI,CAACkJ,WAAW,EAAE;IAEjC,MAAME,EAAE,GAAG,IAAI,CAAC1B,QAAQ,CAAC;MAAEtH,CAAC,EAAEJ,MAAM,CAACvC,IAAI;MAAE8C,CAAC,EAAEP,MAAM,CAACrC;IAAG,CAAE,CAAC;IAC3D,MAAM0L,EAAE,GAAG,IAAI,CAAC3B,QAAQ,CAAC;MAAEtH,CAAC,EAAEJ,MAAM,CAACtC,KAAK;MAAE6C,CAAC,EAAEP,MAAM,CAACrC;IAAG,CAAE,CAAC;IAC5D,MAAM2L,EAAE,GAAG,IAAI,CAAC5B,QAAQ,CAAC;MAAEtH,CAAC,EAAEJ,MAAM,CAACtC,KAAK;MAAE6C,CAAC,EAAEP,MAAM,CAACpC;IAAM,CAAE,CAAC;IAC/D,MAAM2L,EAAE,GAAG,IAAI,CAAC7B,QAAQ,CAAC;MAAEtH,CAAC,EAAEJ,MAAM,CAACvC,IAAI;MAAE8C,CAAC,EAAEP,MAAM,CAACpC;IAAM,CAAE,CAAC;IAE9D,OAAO;MACNH,IAAI,EAAEuF,IAAI,CAACwG,GAAG,CAACJ,EAAE,CAAChJ,CAAC,EAAEiJ,EAAE,CAACjJ,CAAC,EAAEkJ,EAAE,CAAClJ,CAAC,EAAEmJ,EAAE,CAACnJ,CAAC,CAAC;MACtCzC,GAAG,EAAEqF,IAAI,CAACwG,GAAG,CAACJ,EAAE,CAAC7I,CAAC,EAAE8I,EAAE,CAAC9I,CAAC,EAAE+I,EAAE,CAAC/I,CAAC,EAAEgJ,EAAE,CAAChJ,CAAC,CAAC;MACrC7C,KAAK,EAAEsF,IAAI,CAACC,GAAG,CAACmG,EAAE,CAAChJ,CAAC,EAAEiJ,EAAE,CAACjJ,CAAC,EAAEkJ,EAAE,CAAClJ,CAAC,EAAEmJ,EAAE,CAACnJ,CAAC,CAAC;MACvCxC,MAAM,EAAEoF,IAAI,CAACC,GAAG,CAACmG,EAAE,CAAC7I,CAAC,EAAE8I,EAAE,CAAC9I,CAAC,EAAE+I,EAAE,CAAC/I,CAAC,EAAEgJ,EAAE,CAAChJ,CAAC;KACvC;EACF;EAEUkJ,OAAOA,CAACC,SAAkB,GAEpC;EAEUC,OAAOA,CAACD,SAAkB,GAEpC;EAEA;;;;;;;;EAQaE,MAAMA,CAACC,QAAiB,EAAEC,KAAc;;MACpD,MAAM,IAAI,CAAC1B,IAAI,CAAC,CAAC,CAAC;MAClB,IAAI0B,KAAK,EAAE;QACV,OAAO,IAAIC,OAAO,CAAO,CAACC,OAAO,EAAEC,MAAM,KAAI;UAC5C,IAAI,CAAC1H,UAAU,CAAC,MAAK;YACpByH,OAAO,CAAC,IAAI,CAAC9B,IAAI,CAAC2B,QAAQ,CAAC,CAAC;UAC7B,CAAC,EAAEC,KAAK,CAAC;QACV,CAAC,CAAC;OAEF,MACI;QACJ,OAAO,IAAI,CAAC5B,IAAI,CAAC2B,QAAQ,CAAC;;IAE5B,CAAC;;EAED;;;;;;;;;;;;;;;;;EAiBa3B,IAAIA,CAAC2B,QAAiB;;MAClC,IAAI,CAAC,IAAI,CAACK,UAAU,EAAE;QACrB,IAAI,CAACC,SAAS,GAAG,KAAK;QACtB,IAAI,CAACD,UAAU,GAAG,IAAI;QACtB,IAAI,CAACE,SAAS,GAAG,KAAK;QAEtB,IAAI,IAAI,CAAC9I,MAAM,CAACsD,MAAM,CAAC,SAAS,CAAE,CAACjG,GAAG,CAAC,SAAS,CAAC,EAAE;UAClD,IAAI,CAAC3D,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC;;QAE1B,IAAI,CAACyO,OAAO,CAACI,QAAQ,CAAC;QAEtB,MAAMQ,UAAU,GAAG,IAAI,CAAC/I,MAAM,CAACC,YAAY,CAAC,SAAS,EAAEsI,QAAQ,CAAC;QAChE,MAAMpQ,iBAAiB,CAAC4Q,UAAU,CAAC;QAEnC,IAAI,CAACH,UAAU,GAAG,KAAK;;IAEzB,CAAC;;EAED;;;;;;;;;;;;;;;;;EAiBa9B,IAAIA,CAACyB,QAAiB;;MAClC,IAAI,CAAC,IAAI,CAACO,SAAS,IAAI,CAAC,IAAI,CAACD,SAAS,EAAE;QACvC,IAAI,CAACC,SAAS,GAAG,IAAI;QACrB,IAAI,CAACF,UAAU,GAAG,KAAK;QACvB,IAAII,KAAK,GAAG,IAAI,CAAChJ,MAAM,CAACsD,MAAM,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC0F,KAAK,EAAE;UACXA,KAAK,GAAG,IAAI,CAAChJ,MAAM,CAACiJ,MAAM,CAAC,QAAQ,EAAE;YACpC,SAAS,EAAE,CAAC;YACZ,SAAS,EAAE;WACX,CAAC;;QAEH,IAAI,CAACJ,SAAS,GAAG,IAAI;QACrB,IAAI,CAACR,OAAO,CAACE,QAAQ,CAAC;QAEtB,MAAMQ,UAAU,GAAG,IAAI,CAAC/I,MAAM,CAACC,YAAY,CAAC,QAAQ,EAAEsI,QAAQ,CAAC;QAE/D,MAAMpQ,iBAAiB,CAAC4Q,UAAU,CAAC;QAEnC,IAAI,CAACD,SAAS,GAAG,KAAK;;IAExB,CAAC;;EAED;;;;;EAKO5I,QAAQA,CAAA;IACd,OAAO,IAAI,CAAC2I,SAAS;EACtB;EAEA;;;;;EAKOK,SAASA,CAAA;IACf,OAAO,IAAI,CAACN,UAAU;EACvB;EAEA;;;;;EAKOO,QAAQA,CAAA;IACd,OAAO,IAAI,CAACL,SAAS;EACtB;EAEA;;;;;EAKOvF,OAAOA,CAAA;IACb,OAAO,IAAI,CAAC5J,QAAQ,CAACyP,QAAQ,EAAE;EAChC;EAEA;;;;;EAKOvE,OAAOA,CAAA;IACb,OAAO,IAAI,CAACtG,KAAK,CAAC8K,OAAO,CAAC,IAAI,CAAC;EAChC;EAEA;;;;;EAKOhO,UAAUA,CAAA;IAChB,OAAO,IAAI,CAACmG,WAAW;EACxB;EAEA;;;;;;EAMO8H,SAASA,CAAA;IACf,IAAI,IAAI,CAACjM,GAAG,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC0E,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC1E,GAAG,CAAC,aAAa,CAAC,EAAE;MAClF,OAAO,IAAI;;IAEZ,OAAO,KAAK;EACb;EAEA;;;;;;EAMOkM,aAAaA,CAAA;IACnB,OAAO,IAAI,CAACtL,OAAO,GAAI,IAAI,CAACA,OAAO,CAACsL,aAAa,EAAE,IAAI,IAAI,CAACD,SAAS,EAAE,GAAI,IAAI,CAACA,SAAS,EAAE;EAC5F;EAEA;;;;;;EAMOE,gBAAgBA,CAAA;IACtB,MAAMC,OAAO,GAAG,IAAI,CAACpM,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC;IACtC,OAAO,IAAI,CAACY,OAAO,GAAI,IAAI,CAACA,OAAO,CAACuL,gBAAgB,EAAE,GAAGC,OAAO,GAAIA,OAAO;EAC5E;EAEA;;;;;EAKOlD,KAAKA,CAAA;IACX,IAAIA,KAAK,GAAG,IAAI,CAAClJ,GAAG,CAAC,OAAO,CAAC;IAC7B,IAAIqM,QAAQ,GAAG,IAAI,CAACrM,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC0E,UAAU,CAAC,UAAU,CAAC,CAAC;IAChE,IAAIsD,QAAQ,GAAG,IAAI,CAAChI,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC0E,UAAU,CAAC,UAAU,CAAC,CAAC;IAChE,IAAIyD,YAAY,GAAG,IAAI,CAACzD,UAAU,CAAC,OAAO,CAAC;IAC3C,IAAI4H,CAAC,GAAG,CAAC;IAET,IAAIrR,KAAK,CAACiN,QAAQ,CAACC,YAAY,CAAC,EAAE;MACjCmE,CAAC,GAAGnE,YAAY;KAChB,MACI;MACJ,IAAIe,KAAK,IAAI,IAAI,EAAE;QAClB,IAAI,IAAI,CAACtB,oBAAoB,EAAE;UAC9B0E,CAAC,GAAG,IAAI,CAAC1E,oBAAoB,CAAC7I,KAAK,GAAG,IAAI,CAAC6I,oBAAoB,CAAC9I,IAAI;;OAErE,MACI;QACJ,IAAIoK,KAAK,YAAYxO,OAAO,EAAE;UAC7B,MAAMmD,MAAM,GAAG,IAAI,CAACA,MAAM;UAC1B,IAAIA,MAAM,EAAE;YACXyO,CAAC,GAAGzO,MAAM,CAACoM,UAAU,EAAE,GAAGf,KAAK,CAACvI,KAAK;WACrC,MACI;YACJ2L,CAAC,GAAG,IAAI,CAACpL,KAAK,CAACgI,KAAK,EAAE,GAAGA,KAAK,CAACvI,KAAK;;SAErC,MACI,IAAI1F,KAAK,CAACiN,QAAQ,CAACgB,KAAK,CAAC,EAAE;UAC/BoD,CAAC,GAAGpD,KAAK;;;;IAKZ,IAAIjO,KAAK,CAACiN,QAAQ,CAACF,QAAQ,CAAC,EAAE;MAC7BsE,CAAC,GAAGjI,IAAI,CAACC,GAAG,CAAC0D,QAAQ,EAAEsE,CAAC,CAAC;;IAE1B,IAAIrR,KAAK,CAACiN,QAAQ,CAACmE,QAAQ,CAAC,EAAE;MAC7BC,CAAC,GAAGjI,IAAI,CAACwG,GAAG,CAACwB,QAAQ,EAAEC,CAAC,CAAC;;IAG1B,OAAOA,CAAC;EACT;EAEA;;;;;EAKOD,QAAQA,CAAA;IACd,IAAIA,QAAQ,GAAG,IAAI,CAACrM,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC0E,UAAU,CAAC,UAAU,CAAC,CAAC;IAChE,IAAIzJ,KAAK,CAACiN,QAAQ,CAACmE,QAAQ,CAAC,EAAE;MAC7B,OAAOA,QAAQ;KACf,MACI;MACJ,IAAInD,KAAK,GAAG,IAAI,CAAClJ,GAAG,CAAC,OAAO,CAAC;MAC7B,IAAI/E,KAAK,CAACiN,QAAQ,CAACgB,KAAK,CAAC,EAAE;QAC1B,OAAOA,KAAK;;;IAGd,MAAMrL,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,IAAIA,MAAM,EAAE;MACX,OAAOA,MAAM,CAACoM,UAAU,EAAE;;IAE3B,OAAO,IAAI,CAAC/I,KAAK,CAACgI,KAAK,EAAE;EAC1B;EAEA;;;;;EAKOqD,SAASA,CAAA;IACf,IAAIA,SAAS,GAAG,IAAI,CAACvM,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC0E,UAAU,CAAC,WAAW,CAAC,CAAC;IACnE,IAAIzJ,KAAK,CAACiN,QAAQ,CAACqE,SAAS,CAAC,EAAE;MAC9B,OAAOA,SAAS;KAChB,MACI;MACJ,IAAIpD,MAAM,GAAG,IAAI,CAACnJ,GAAG,CAAC,QAAQ,CAAC;MAC/B,IAAI/E,KAAK,CAACiN,QAAQ,CAACiB,MAAM,CAAC,EAAE;QAC3B,OAAOA,MAAM;;;IAGf,MAAMtL,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,IAAIA,MAAM,EAAE;MACX,OAAOA,MAAM,CAACsM,WAAW,EAAE;;IAE5B,OAAO,IAAI,CAACjJ,KAAK,CAACiI,MAAM,EAAE;EAC3B;EAEA;;;;;EAKOA,MAAMA,CAAA;IACZ,IAAIA,MAAM,GAAG,IAAI,CAACnJ,GAAG,CAAC,QAAQ,CAAC;IAC/B,IAAIuM,SAAS,GAAG,IAAI,CAACvM,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC0E,UAAU,CAAC,WAAW,CAAC,CAAC;IACnE,IAAIuD,SAAS,GAAG,IAAI,CAACjI,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC0E,UAAU,CAAC,WAAW,CAAC,CAAC;IACnE,IAAI0D,aAAa,GAAG,IAAI,CAAC1D,UAAU,CAAC,QAAQ,CAAC;IAC7C,IAAI8H,CAAC,GAAG,CAAC;IAET,IAAIvR,KAAK,CAACiN,QAAQ,CAACE,aAAa,CAAC,EAAE;MAClCoE,CAAC,GAAGpE,aAAa;KACjB,MACI;MACJ,IAAIe,MAAM,IAAI,IAAI,EAAE;QACnB,IAAI,IAAI,CAACvB,oBAAoB,EAAE;UAC9B4E,CAAC,GAAG,IAAI,CAAC5E,oBAAoB,CAAC3I,MAAM,GAAG,IAAI,CAAC2I,oBAAoB,CAAC5I,GAAG;;OAErE,MACI;QACJ,IAAImK,MAAM,YAAYzO,OAAO,EAAE;UAC9B,MAAMmD,MAAM,GAAG,IAAI,CAACA,MAAM;UAC1B,IAAIA,MAAM,EAAE;YACX2O,CAAC,GAAG3O,MAAM,CAACsM,WAAW,EAAE,GAAGhB,MAAM,CAACxI,KAAK;WACvC,MACI;YACJ6L,CAAC,GAAG,IAAI,CAACtL,KAAK,CAACiI,MAAM,EAAE,GAAGA,MAAM,CAACxI,KAAK;;SAEvC,MACI,IAAI1F,KAAK,CAACiN,QAAQ,CAACiB,MAAM,CAAC,EAAE;UAChCqD,CAAC,GAAGrD,MAAM;;;;IAKb,IAAIlO,KAAK,CAACiN,QAAQ,CAACD,SAAS,CAAC,EAAE;MAC9BuE,CAAC,GAAGnI,IAAI,CAACC,GAAG,CAAC2D,SAAS,EAAEuE,CAAC,CAAC;;IAE3B,IAAIvR,KAAK,CAACiN,QAAQ,CAACqE,SAAS,CAAC,EAAE;MAC9BC,CAAC,GAAGnI,IAAI,CAACwG,GAAG,CAAC0B,SAAS,EAAEC,CAAC,CAAC;;IAG3B,OAAOA,CAAC;EACT;EAEUC,mBAAmBA,CAACC,CAAwC;IACrE;IACA,IAAI,IAAI,CAAChN,cAAc,IAAIgN,CAAC,CAAC,IAAI,CAAChN,cAAc,CAAC,EAAE;MAClD,OAAO,IAAI,CAACA,cAAc;;IAG3B,OAAO,KAAK,CAAC+M,mBAAmB,CAACC,CAAC,CAAC;EACpC;EAEOC,YAAYA,CAACD,CAA2B;IAC9C,IAAI,IAAI,CAAC9L,OAAO,EAAE;MACjB,IAAI,CAACgM,WAAW,CAACF,CAAC,CAAC;;EAErB;EAEUE,WAAWA,CAACF,CAA2B;IAChD,IAAI,IAAI,CAAC9L,OAAO,EAAE;MACjB,IAAI,CAACA,OAAO,CAACgM,WAAW,CAACF,CAAC,CAAC;;IAG5BA,CAAC,CAAC,IAAI,CAAC;EACR;EAEA;;;;;EAKA,IAAW7O,MAAMA,CAAA;IAChB,OAAO,IAAI,CAAC+C,OAAO;EACpB;EAEOiM,UAAUA,CAAChP,MAAiB,EAAiC;IAAA,IAA/BiP,cAAA,GAAAC,SAAA,CAAAvG,MAAA,QAAAuG,SAAA,QAAArQ,SAAA,GAAAqQ,SAAA,MAA0B,KAAK;IACnE,MAAMC,UAAU,GAAG,IAAI,CAACpM,OAAO;IAC/B,IAAI/C,MAAM,KAAKmP,UAAU,EAAE;MAC1B,IAAI,CAAC3N,eAAe,EAAE;MAEtBxB,MAAM,CAAC+G,SAAS,EAAE;MAElB,IAAI,CAAChE,OAAO,GAAG/C,MAAM;MAErB,IAAIiP,cAAc,EAAE;QACnB,IAAI,CAACzE,aAAa,CAAC2E,UAAU,CAAC;QAE9B,IAAInP,MAAM,EAAE;UACX,IAAI,CAACgD,0BAA0B,EAAE;UACjC,IAAI,CAACvB,8BAA8B,EAAE;;;MAIvC,IAAI,CAACC,iBAAiB,EAAE;MACxB,IAAI,CAAC0N,YAAY,EAAE;;EAErB;EAEA;;;;;;;;EAQOC,kBAAkBA,CAAA;IACxB,OAAO,IAAI,CAAClN,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACkB,KAAK,CAACiM,eAAe,CAAC;EAC/D;EAEA;;;;;;;;EAQOC,gBAAgBA,CAAA;IACtB,OAAO,IAAI,CAACpN,GAAG,CAAC,eAAe,EAAE,IAAI,CAACkB,KAAK,CAACmM,aAAa,CAAC;EAC3D;EAEA;;;;;;;;EAQOC,oBAAoBA,CAAA;IAC1B,OAAO,IAAI,CAACtN,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAACkB,KAAK,CAACqM,iBAAiB,CAAC;EACnE;EAEA;;;;;;EAMOxE,QAAQA,CAAChN,KAAa;IAC5B,OAAO,IAAI,CAACO,QAAQ,CAACyM,QAAQ,CAAChN,KAAK,CAAC;EACrC;EAEA;;;;;;EAMOyR,OAAOA,CAACzR,KAAa;IAC3B,OAAO,IAAI,CAACO,QAAQ,CAACkR,OAAO,CAACzR,KAAK,CAAC;EACpC;EAEO0R,aAAaA,CAAA;IACnB,MAAMC,EAAE,GAAG,IAAI,CAACC,eAAe,EAAE;IACjC,IAAID,EAAE,EAAE;MACP,OAAO,IAAI,CAACpH,WAAW,CAACoH,EAAE,CAAC;;EAG7B;EAEOC,eAAeA,CAAA;IACrB,IAAI,IAAI,CAACrH,WAAW,EAAE;MACrB,OAAOpL,OAAO,CAAC0S,WAAW,CAAC,IAAI,CAACtH,WAAW,EAAE,CAACuH,CAAC,EAAEC,CAAC,KAAI;QACrD,IAAID,CAAC,GAAGC,CAAC,EAAE;UACV,OAAO,CAAC;;QAET,IAAID,CAAC,GAAGC,CAAC,EAAE;UACV,OAAO,CAAC,CAAC;;QAEV,OAAO,CAAC;MACT,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEP;EAEA;;;;;;EAMOC,OAAOA,CAAA;IACb,MAAMlQ,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,IAAIA,MAAM,EAAE;MACXA,MAAM,CAACyK,QAAQ,CAAC0F,SAAS,CAAC,IAAI,EAAEnQ,MAAM,CAACyK,QAAQ,CAAC9B,MAAM,GAAG,CAAC,CAAC;;EAE7D;EAEA;;;;;;EAMOyH,MAAMA,CAAA;IACZ,MAAMpQ,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,IAAIA,MAAM,EAAE;MACXA,MAAM,CAACyK,QAAQ,CAAC0F,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC;;EAEpC;;AAlyDAzS,MAAA,CAAAC,cAAA,CAAAqD,MAAA;;;;SAAkC;;AAClCtD,MAAA,CAAAC,cAAA,CAAAqD,MAAA;;;;SAA0CrE,MAAM,CAAC0T,UAAU,CAACC,MAAM,CAAC,CAACtP,MAAM,CAACuP,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}