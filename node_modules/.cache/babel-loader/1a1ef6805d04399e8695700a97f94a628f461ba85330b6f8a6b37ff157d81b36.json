{"ast":null,"code":"import { Container } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\n/**\r\n * A base class for all charts.\r\n */\nexport class Chart extends Container {\n  constructor() {\n    super(...arguments);\n    /**\r\n     * A [[Container]] chart places its elements in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(this, \"chartContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: this.children.push(Container.new(this._root, {\n        width: p100,\n        height: p100,\n        interactiveChildren: false\n      }))\n    });\n    /**\r\n     * A [[Container]] chart places its bullets in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(this, \"bulletsContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(this._root, {\n        interactiveChildren: false,\n        isMeasured: false,\n        position: \"absolute\",\n        width: p100,\n        height: p100\n      })\n    });\n  }\n}\nObject.defineProperty(Chart, \"className\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"Chart\"\n});\nObject.defineProperty(Chart, \"classNames\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: Container.classNames.concat([Chart.className])\n});","map":{"version":3,"names":["Container","p100","Chart","constructor","Object","defineProperty","children","push","new","_root","width","height","interactiveChildren","isMeasured","position","classNames","concat","className"],"sources":["C:\\Users\\Rizki\\binar-course\\cms-binar-platinum\\node_modules\\src\\.internal\\core\\render\\Chart.ts"],"sourcesContent":["import { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\n\nexport interface IChartSettings extends IContainerSettings {\n}\n\nexport interface IChartPrivate extends IContainerPrivate {\n}\n\nexport interface IChartEvents extends IContainerEvents {\n}\n\n/**\n * A base class for all charts.\n */\nexport abstract class Chart extends Container {\n\tpublic static className: string = \"Chart\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Chart.className]);\n\n\tdeclare public _settings: IChartSettings;\n\tdeclare public _privateSettings: IChartPrivate;\n\tdeclare public _events: IChartEvents;\n\n\t/**\n\t * A [[Container]] chart places its elements in.\n\t * \n\t * @default Container.new()\n\t */\n\tpublic readonly chartContainer: Container = this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }));\n\n\t/**\n\t * A [[Container]] chart places its bullets in.\n\t * \n\t * @default Container.new()\n\t */\n\tpublic readonly bulletsContainer: Container = Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 });\n\n}"],"mappings":"AAAA,SAASA,SAAS,QAAiE,6BAA6B;AAChH,SAASC,IAAI,QAAQ,yBAAyB;AAW9C;;;AAGA,OAAM,MAAgBC,KAAM,SAAQF,SAAS;EAA7CG,YAAA;;IAQC;;;;;IAKAC,MAAA,CAAAC,cAAA;;;;aAA4C,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACP,SAAS,CAACQ,GAAG,CAAC,IAAI,CAACC,KAAK,EAAE;QAAEC,KAAK,EAAET,IAAI;QAAEU,MAAM,EAAEV,IAAI;QAAEW,mBAAmB,EAAE;MAAK,CAAE,CAAC;;IAEnJ;;;;;IAKAR,MAAA,CAAAC,cAAA;;;;aAA8CL,SAAS,CAACQ,GAAG,CAAC,IAAI,CAACC,KAAK,EAAE;QAAEG,mBAAmB,EAAE,KAAK;QAAEC,UAAU,EAAE,KAAK;QAAEC,QAAQ,EAAE,UAAU;QAAEJ,KAAK,EAAET,IAAI;QAAEU,MAAM,EAAEV;MAAI,CAAE;;EAE3K;;AArBCG,MAAA,CAAAC,cAAA,CAAAH,KAAA;;;;SAAkC;;AAClCE,MAAA,CAAAC,cAAA,CAAAH,KAAA;;;;SAA0CF,SAAS,CAACe,UAAU,CAACC,MAAM,CAAC,CAACd,KAAK,CAACe,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}